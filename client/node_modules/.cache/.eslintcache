[{"C:\\projects\\Portfolio\\client\\src\\index.js":"1","C:\\projects\\Portfolio\\client\\src\\App.js":"2","C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js":"3","C:\\projects\\Reddit-Clone\\client\\src\\index.js":"4","C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js":"5","C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js":"6","C:\\projects\\Reddit-Clone\\client\\src\\App.js":"7","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"8","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js":"9","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"10","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js":"11","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js":"12","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js":"13","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js":"14","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js":"15","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js":"16","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js":"17","C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js":"18","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js":"19","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js":"20","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js":"21","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js":"22","C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js":"23","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js":"24","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js":"25","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js":"26","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js":"27","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js":"28","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js":"29","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js":"30","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js":"31","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js":"32"},{"size":882,"mtime":1672560996292,"results":"33","hashOfConfig":"34"},{"size":910,"mtime":1673547089326,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1670225087029,"results":"36","hashOfConfig":"34"},{"size":1091,"mtime":1676104777077,"results":"37","hashOfConfig":"38"},{"size":8095,"mtime":1676100845101,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1670225087029,"results":"40","hashOfConfig":"38"},{"size":1025,"mtime":1674888052455,"results":"41","hashOfConfig":"38"},{"size":1773,"mtime":1673358438180,"results":"42","hashOfConfig":"38"},{"size":3383,"mtime":1676118805144,"results":"43","hashOfConfig":"38"},{"size":2223,"mtime":1671368945984,"results":"44","hashOfConfig":"38"},{"size":7569,"mtime":1675183675090,"results":"45","hashOfConfig":"38"},{"size":3008,"mtime":1675578128008,"results":"46","hashOfConfig":"38"},{"size":6397,"mtime":1675579375124,"results":"47","hashOfConfig":"38"},{"size":5896,"mtime":1676118408248,"results":"48","hashOfConfig":"38"},{"size":117,"mtime":1674465689290,"results":"49","hashOfConfig":"38"},{"size":6904,"mtime":1676118733878,"results":"50","hashOfConfig":"38"},{"size":1196,"mtime":1676118669999,"results":"51","hashOfConfig":"38"},{"size":775,"mtime":1673542934879,"results":"52","hashOfConfig":"38"},{"size":360,"mtime":1673966772064,"results":"53","hashOfConfig":"38"},{"size":230,"mtime":1673355038470,"results":"54","hashOfConfig":"38"},{"size":1363,"mtime":1672568355181,"results":"55","hashOfConfig":"38"},{"size":1107,"mtime":1673706807618,"results":"56","hashOfConfig":"38"},{"size":107,"mtime":1673957030096,"results":"57","hashOfConfig":"38"},{"size":300,"mtime":1673966778713,"results":"58","hashOfConfig":"38"},{"size":265,"mtime":1673966784225,"results":"59","hashOfConfig":"38"},{"size":125,"mtime":1673958965193,"results":"60","hashOfConfig":"38"},{"size":1892,"mtime":1674559603418,"results":"61","hashOfConfig":"38"},{"size":1010,"mtime":1674405616541,"results":"62","hashOfConfig":"38"},{"size":20793,"mtime":1676118056716,"results":"63","hashOfConfig":"38"},{"size":125,"mtime":1674750837100,"results":"64","hashOfConfig":"38"},{"size":414,"mtime":1674835794248,"results":"65","hashOfConfig":"38"},{"size":1995,"mtime":1675261219950,"results":"66","hashOfConfig":"38"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"109w8of",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"18acrre",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\projects\\Portfolio\\client\\src\\index.js",[],[],[],"C:\\projects\\Portfolio\\client\\src\\App.js",["178"],[],"C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\index.js",["179"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store.js\";\nimport { ProSidebarProvider } from \"react-pro-sidebar\";\nimport { CookiesProvider } from \"react-cookie\";\nimport { useEffect } from \"react\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconsole.log(process.env.PUBLIC_URL);\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <CookiesProvider>\n        <ProSidebarProvider>\n          <App />\n        </ProSidebarProvider>\n      </CookiesProvider>\n    </Provider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js",["180"],[],"import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst asyncMyVotePost = createAsyncThunk(\r\n  \"myVotePost/asyncMyVotePost\",\r\n  async (user_name) => {\r\n    let body = {\r\n      user_name: user_name,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/myvotepost\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst myVotePost = createSlice({\r\n  name: \"myVotePost\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncMyVotePost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncMyVotePost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncMyVotePost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncMyVoteComment = createAsyncThunk(\r\n  \"myVoteComment/asyncMyVoteComment\",\r\n  async (user_name) => {\r\n    let body = {\r\n      user_name: user_name,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/myvotecomment\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst myVoteComment = createSlice({\r\n  name: \"myVoteComment\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncMyVoteComment.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncMyVoteComment.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncMyVoteComment.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncComment = createAsyncThunk(\r\n  \"commentSlice/asyncComment\",\r\n  async (post_id) => {\r\n    let body = {\r\n      postid: post_id,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/comment\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"commentSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  reducers: {\r\n    changeEdit: (state, action) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.comment_id) {\r\n          state.list[i].edit = !action.payload.edit;\r\n        } else {\r\n          state.list[i].edit = false;\r\n        }\r\n      }\r\n    },\r\n    changeEditComment: (state, action, comment) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.comment_id) {\r\n          // console.log(action.payload.edit_comment);\r\n          state.list[i].edit_comment = action.payload.edit_comment;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncComment.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncComment.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncComment.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"userSlice\",\r\n  initialState: {\r\n    userName: \"\",\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.userName = action.payload;\r\n      // console.log(state.userName);\r\n    },\r\n    LogoutUser: (state) => {\r\n      state.userName = \"\";\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\r\n  const resp = await axios.get(\"/api/topic\");\r\n  return resp.data;\r\n});\r\n\r\nconst topicSlice = createSlice({\r\n  name: \"topicSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncTopic.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncTopic.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\r\n  const resp = await axios.get(\"/api/sub\");\r\n  return resp.data;\r\n});\r\n\r\nconst subSlice = createSlice({\r\n  name: \"subSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncSub.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncSub.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async (subid) => {\r\n  const resp = await axios.get(\"/api/post\", { params: { subId: subid } });\r\n  return resp.data;\r\n});\r\n\r\nconst getSearchPost = createAsyncThunk(\r\n  \"postSlice/getSearchPost\",\r\n  async (searchContent) => {\r\n    const resp = await axios.get(\"/api/search\", {\r\n      params: { searchContent: searchContent },\r\n    });\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  reducers: {\r\n    changeEdit: (state, action) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.post_id) {\r\n          state.list[i].edit = !action.payload.edit;\r\n        } else {\r\n          state.list[i].edit = false;\r\n        }\r\n      }\r\n    },\r\n    changeEditPost: (state, action, post) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].post_id === action.payload.post_id) {\r\n          // console.log(action.payload.edit_post);\r\n          state.list[i].edit_post = action.payload.edit_post;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getSearchPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n    });\r\n    builder.addCase(getPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst currentSub = createSlice({\r\n  name: \"currentSub\",\r\n  initialState: {\r\n    currentSub: -1,\r\n  },\r\n  reducers: {\r\n    setCurrentSub: (state, action) => {\r\n      state.currentSub = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nconst getCurrentPost = createAsyncThunk(\r\n  \"currentPost/getCurrentPost\",\r\n  async (postid) => {\r\n    const resp = await axios.get(\"/api/currpost\", {\r\n      params: { postid: postid },\r\n    });\r\n    // console.log(resp.data);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst currentPost = createSlice({\r\n  name: \"currentPost\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getCurrentPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getCurrentPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getCurrentPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    topicSlice: topicSlice.reducer,\r\n    subSlice: subSlice.reducer,\r\n    postSlice: postSlice.reducer,\r\n    userSlice: userSlice.reducer,\r\n    commentSlice: commentSlice.reducer,\r\n    currentSub: currentSub.reducer,\r\n    myVotePost: myVotePost.reducer,\r\n    myVoteComment: myVoteComment.reducer,\r\n    currentPost: currentPost.reducer,\r\n  },\r\n});\r\n\r\nexport {\r\n  asyncTopic,\r\n  asyncSub,\r\n  getPost,\r\n  postSlice,\r\n  userSlice,\r\n  asyncComment,\r\n  commentSlice,\r\n  currentSub,\r\n  myVotePost,\r\n  myVoteComment,\r\n  asyncMyVoteComment,\r\n  asyncMyVotePost,\r\n  getCurrentPost,\r\n  currentPost,\r\n  getSearchPost,\r\n};\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\App.js",["181"],[],"import React from \"react\";\n\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport PostPage from \"./components/Layout/PostPage\";\nimport MainPage from \"./components/views/LandingPage/MainPage\";\nimport LoginPage from \"./components/views/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/views/RegisterPage/RegisterPage\";\nimport CreatePost from \"./components/views/UtilPage/CreatePost\";\n\nexport default function App() {\n  return (\n    // <Router>\n    //   <div>\n    //     <Routes>\n    //       <Route exact path=\"/login\" element={<LoginPage />} />\n    //       <Route exact path=\"/\" element={<LandingPage />} />\n    //     </Routes>\n    //   </div>\n    // </Router>\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />}></Route>\n      <Route path=\"/\" element={<MainPage />}></Route>\n      <Route path=\"/register\" element={<RegisterPage />}></Route>\n      <Route path=\"/createPost\" element={<CreatePost />}></Route>\n      <Route path=\"/PostPage\" element={<PostPage />}></Route>\n    </Routes>\n  );\n}\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["182","183","184"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LoginPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Name\", Name);\r\n    console.log(\"Password\", Password);\r\n\r\n    let body = {\r\n      name: Name,\r\n      password: Password,\r\n    };\r\n    // dispatch(loginUser(body));\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Name</label>\r\n        <input type=\"name\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["202","203"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\n\r\nexport default function RegisterPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Email\", Email);\r\n    console.log(\"Name\", Name);\r\n    console.log(\"Password\", Password);\r\n\r\n    let body = {\r\n      email: Email,\r\n      name: Name,\r\n      password: Password,\r\n    };\r\n    // dispatch(loginUser(body));\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\");\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <label>Name</label>\r\n        <input type=\"name\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button>Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js",["204","205","206","207","208","209","210","211","212","213"],[],"import Header from \"./Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { React, useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport Button from \"../../Layout/Button\";\r\nimport { asyncSub, getPost } from \"../../../store/store\";\r\nimport AuthModal from \"./AuthModal\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function CreatePost() {\r\n  const [files, setFiles] = useState([]);\r\n  const [file, setFile] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showAuthModal, setShowModal] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [post_title, setPostTitle] = useState(\"\");\r\n  const [post_content, setPostContent] = useState(\"\");\r\n  const [post_imgpath, setPostImgPath] = useState(\"\");\r\n  const [post_link, setPostLink] = useState(\"\");\r\n  const [sub_id, setSubID] = useState(-1);\r\n  const [value, setValue] = useState(\"default\");\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userName\"]);\r\n\r\n  // const onDrop = useCallback((acceptedFiles) => {\r\n  //   // Do something with the files\r\n  //   // console.log(URL.createObjectURL(acceptedFiles[0]));\r\n  //   // setFiles(URL.createObjectURL(acceptedFiles[0]));\r\n  //   // getBase64(URL.createObjectURL(acceptedFiles[0]));\r\n  //   setFile(URL.createObjectURL(acceptedFiles[0]));\r\n  //   setPostImgPath(URL.createObjectURL(acceptedFiles[0]));\r\n  // }, []);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const blob = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = () => {\r\n      const base64data = reader.result;\r\n      console.log(base64data);\r\n\r\n      setFile(base64data);\r\n      setPostImgPath(base64data);\r\n    };\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  const user_name = useSelector((state) => state.userSlice.userName);\r\n\r\n  const [t, setTab] = useState(0);\r\n\r\n  const Tab = [\r\n    {\r\n      title: \"Post\",\r\n      index: 0,\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      index: 1,\r\n    },\r\n    {\r\n      title: \"Link\",\r\n      index: 2,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(asyncSub());\r\n  }, []);\r\n\r\n  const changePost = (subid) => {\r\n    dispatch(getPost(subid, user_name));\r\n  };\r\n\r\n  const onPostTitleHandler = (event) => {\r\n    setPostTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostContentHandler = (event) => {\r\n    setPostContent(event.currentTarget.value);\r\n  };\r\n  const onPostLinkHandler = (event) => {\r\n    setPostLink(event.currentTarget.value);\r\n  };\r\n  const onSubIDHandler = (event) => {\r\n    setSubID(event.currentTarget.value);\r\n  };\r\n\r\n  function writePost(e) {\r\n    let body = {\r\n      post_title: post_title,\r\n      post_content: post_content,\r\n      post_imgpath: post_imgpath,\r\n      post_link: post_link,\r\n      sub_id: sub_id,\r\n      user_name: user_name,\r\n    };\r\n\r\n    axios.post(\"/api/write\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      } else if (res.data.result === \"subError\") {\r\n        alert(\"커뮤니티를 설정해주세요\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthModalContext.Provider\r\n      value={{\r\n        show: showAuthModal,\r\n        setShow: setShowModal,\r\n        cookie: cookies,\r\n        setCook: setCookie,\r\n        removeCook: removeCookie,\r\n      }}\r\n    >\r\n      <div>\r\n        <Header />\r\n        <div className=\"w-screen h-screen fixed left-0 bg-reddit_gray overflow-auto\">\r\n          <AuthModal />\r\n          <div className=\" p-5 self-center mx-auto rounded-md\">\r\n            <div className=\" p-5 self-center mx-auto rounded-md\">\r\n              <h1 className=\"text-xl mb-4\">Create a post</h1>\r\n\r\n              <select\r\n                defaultValue={value}\r\n                className=\"h-8 w-2/5 border border-gray-300 bg-white rounded-md\"\r\n                onChange={onSubIDHandler}\r\n              >\r\n                <option value=\"default\" disabled hidden>\r\n                  choose a community!\r\n                </option>\r\n                {sub_list.map((sub, i) => {\r\n                  return (\r\n                    <option key={i} value={sub.sub_id}>\r\n                      {sub.sub_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <section>\r\n                {Tab.map((e, index) => (\r\n                  <button\r\n                    className=\"relative bg-white text-sm font-bold w-32 h-10 mt-2 border border-gray-300 text-gray-300 focus:text-blue-500 focus:border-b-4 focus:border-b-blue-300\"\r\n                    key={index}\r\n                    onClick={(e) => setTab(index)}\r\n                  >\r\n                    {e.title}\r\n                  </button>\r\n                ))}\r\n\r\n                <div className=\"bg-white mb-2 px-8 py-4\">\r\n                  <Input\r\n                    className=\"w-full  border border-gray\"\r\n                    value={post_title}\r\n                    type=\"text\"\r\n                    placeholder=\"title\"\r\n                    onChange={onPostTitleHandler}\r\n                  />\r\n                  {t === 0 && (\r\n                    <Textarea\r\n                      className={\"w-full mb-3\"}\r\n                      placeholder=\"text(optional)\"\r\n                      rows={10}\r\n                      value={post_content}\r\n                      onChange={onPostContentHandler}\r\n                    />\r\n                  )}\r\n                  {t === 1 && (\r\n                    <div>\r\n                      <div className=\" border border-gray mb-3 pt-20 p-3\">\r\n                        <img src={file}></img>\r\n                        <div {...getRootProps()}>\r\n                          <input {...getInputProps()} />\r\n                          {isDragActive ? (\r\n                            <p>Drop the files here ...</p>\r\n                          ) : (\r\n                            <div>\r\n                              <Button>Open</Button>\r\n                              <p>\r\n                                Drag 'n' drop some files here, or click to\r\n                                select files\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {t === 2 && (\r\n                    <Textarea\r\n                      className={\"w-full mb-3\"}\r\n                      placeholder=\"Link 받기\"\r\n                      rows={10}\r\n                      value={post_link}\r\n                      onChange={onPostLinkHandler}\r\n                    />\r\n                  )}\r\n                  <div className={\"text-right\"}>\r\n                    <Button className={\"px-4 py-2 mr-3\"}>Cancel</Button>\r\n                    <Button type=\"submit\" onClick={(e) => writePost()}>\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AuthModalContext.Provider>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js",["214","215","216"],[],"import React, { useEffect } from \"react\";\r\nimport { Sidebar, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  asyncTopic,\r\n  asyncSub,\r\n  getPost,\r\n  currentSub,\r\n} from \"../../../store/store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Sidemenu() {\r\n  const dispatch = useDispatch();\r\n\r\n  const topic_list = useSelector((state) => state.topicSlice.list);\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  useEffect(() => {\r\n    dispatch(asyncTopic());\r\n    dispatch(asyncSub());\r\n  }, []);\r\n\r\n  const changePost = (subid) => {\r\n    dispatch(getPost(subid));\r\n    dispatch(currentSub.actions.setCurrentSub(subid));\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed sticky top-12\">\r\n      <div>\r\n        <Sidebar className=\"hidden sm:block\">\r\n          <Menu>\r\n            {topic_list.map((tp, i) => (\r\n              <SubMenu key={i} label={tp.topic_name}>\r\n                {sub_list.map((sub, j) => {\r\n                  if (tp.topic_id === sub.topic_id) {\r\n                    return (\r\n                      <MenuItem\r\n                        onClick={() => {\r\n                          changePost(sub.sub_id);\r\n                        }}\r\n                        key={j}\r\n                      >\r\n                        {sub.sub_name}\r\n                      </MenuItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </SubMenu>\r\n            ))}\r\n          </Menu>\r\n        </Sidebar>\r\n      </div>\r\n    </div>\r\n  );\r\n  //   const dispatch = useDispatch();\r\n  //   const topic_list = useSelector((state) => state.topicSlice.list);\r\n  //   const sub_list = useSelector((state) => state.subSlice.list);\r\n  //   useEffect(() => {\r\n  //     dispatch(asyncTopic());\r\n  //     dispatch(asyncSub());\r\n  //   }, []);\r\n  //   return (\r\n  //     <div className={styles.sidebar}>\r\n  //       <div className=\"sidebarWrapper\">\r\n  //         <div className={styles.sidebarMenu}>\r\n  //           <div>\r\n  //             <i className=\"fa-regular fa-circle-arrow-up-right\"></i>\r\n  //             <ul>\r\n  //               FEEDS\r\n  //               <li className=\"sidebarListItem\">\r\n  //                 <i className=\"fa-solid fa-house\"></i>Home\r\n  //               </li>\r\n  //               <li className=\"sidebarListItem\">\r\n  //                 <span className=\"material-symbols-outlined\">outbound</span>\r\n  //                 Popular\r\n  //               </li>\r\n  //             </ul>\r\n  //           </div>\r\n  //           <ul>\r\n  //             RECENT\r\n  //             <li>r/running</li>\r\n  //           </ul>\r\n  //           <ul>TOPICS</ul>\r\n  //           {topic_list.map((item, index) => (\r\n  //             <div key={index}>{item.topic_name}</div>\r\n  //           ))}\r\n  //           {sub_list.map((item, index) => (\r\n  //             <div key={index}>{item.sub_name}</div>\r\n  //           ))}\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js",["217","218","219","220","221","222"],[],"import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  userSlice,\r\n  asyncMyVoteComment,\r\n  asyncMyVotePost,\r\n} from \"../../../store/store\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n  // const user = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n  }, []);\r\n\r\n  const refOne = useRef(null);\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (!refOne.current.contains(e.target)) {\r\n      modalContext.setShow(false);\r\n    }\r\n  };\r\n\r\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 존재하는 이메일입니다\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 존재하는 이름입니다\");\r\n      } else if (res.data.result === \"ok\") {\r\n        modalContext.setShow(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보입니다\");\r\n      } else if (res.data.result === \"ok\") {\r\n        // user.setUser(res.data.result);\r\n        modalContext.setShow(false);\r\n        dispatch(userSlice.actions.setUser(username));\r\n        modalContext.setCook(\"userName\", username);\r\n        dispatch(asyncMyVotePost(username));\r\n        dispatch(asyncMyVoteComment(username));\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function logincheck() {\r\n    let body = {\r\n      token: modalContext.cookie.userName,\r\n    };\r\n    axios.post(\"api/logincheck\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(userSlice.actions.setUser(modalContext.cookie.userName));\r\n        modalContext.setCook(\"userName\", modalContext.cookie.userName);\r\n        dispatch(asyncMyVotePost(modalContext.cookie.userName));\r\n        dispatch(asyncMyVoteComment(modalContext.cookie.userName));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    logincheck();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    >\r\n      <div\r\n        className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\"\r\n        ref={refOne}\r\n      >\r\n        {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n        {modalType === \"register\" && <h1 className=\"text-2xl mb-5\">Sign Up</h1>}\r\n        <p className=\"text-reddit_text text-sm mb-3\">\r\n          By continuing, you agree are setting up a Reddit account and agree to\r\n          our\r\n          <a\r\n            href=\"https://www.redditinc.com/policies/user-agreement\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            User Agreement\r\n          </a>\r\n          and\r\n          <a\r\n            href=\"https://www.reddit.com/policies/privacy-policy\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            Privacy Policy\r\n          </a>\r\n          .\r\n        </p>\r\n        {modalType === \"register\" && (\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={email}\r\n            onChange={onEmailHandler}\r\n          />\r\n        )}\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={username}\r\n          onChange={onUsernameHandler}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={password}\r\n          onChange={onPasswordHandler}\r\n        />{\" \"}\r\n        {modalType === \"register\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n            Sign Up\r\n          </Button>\r\n        )}{\" \"}\r\n        {modalType === \"login\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n            Log In\r\n          </Button>\r\n        )}\r\n        {modalType === \"login\" && (\r\n          <div className=\"text-sm\">\r\n            New to Reddit?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"register\")}\r\n            >\r\n              SIGN UP\r\n            </button>\r\n          </div>\r\n        )}\r\n        {modalType === \"register\" && (\r\n          <div className=\"text-sm\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"login\")}\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js",["223","224","225","226","227","228","229","230","231","232"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js",["233","234","235"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js",["236"],[],"import React from \"react\";\r\n\r\nconst Dropdown = (props) => {\r\n  const [visibilityAnimation, setVisibilityAnimation] = React.useState(false);\r\n  const [repeat, setRepeat] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (props.visibility) {\r\n      clearTimeout(repeat);\r\n      setRepeat(null);\r\n      setVisibilityAnimation(true);\r\n    } else {\r\n      setRepeat(\r\n        setTimeout(() => {\r\n          setVisibilityAnimation(false);\r\n        }, 400)\r\n      );\r\n    }\r\n  }, [props.visibility]);\r\n\r\n  return (\r\n    <article\r\n      className={`components-dropdown ${\r\n        props.visibility ? \"slide-fade-in-dropdown\" : \"slide-fade-out-dropdown\"\r\n      }`}\r\n    >\r\n      {visibilityAnimation && props.children}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js",["237","238","239"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js",["240"],[],"import React, { useEffect } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPost } from \"../../../store/store\";\r\n\r\nexport default function PostContent(props) {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.postSlice.list);\r\n  useEffect(() => {\r\n    dispatch(getPost(-1));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"px-6 bg-reddit_gray\">\r\n      {post_list.map((item, index) => (\r\n        <div\r\n          className=\"border border-reddit_border bg-white p-2 rounded-md\"\r\n          key={index}\r\n        >\r\n          <h5 className=\"text-reddit_text-darker text-sm mb-1\">\r\n            Posted by u/{item.user_name} <TimeAgo datetime={item.post_date} />\r\n          </h5>\r\n          <h2 className=\"text-xl mb-3\">포스트 제목</h2>\r\n          <div className=\"text-sm leading-6\">\r\n            <ReactMarkdown plugins={[gfm]} children={item.post_content} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js",["241","242","243","244"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"./Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Header from \"../views/UtilPage/Header\";\r\nimport {\r\n  HandThumbDownIcon,\r\n  HandThumbUpIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { Avatar } from \"@chakra-ui/react\";\r\n\r\nexport default function Comment() {\r\n  const user = useSelector((state) => state.userSlice.userName);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsList, setCommentsList] = useState([]);\r\n  const [isValid, SetIsValid] = useState(false);\r\n\r\n  function commentChange(e) {\r\n    setComment(e.target.value);\r\n  }\r\n\r\n  let post = (e) => {\r\n    const copyCommentsList = [...commentsList];\r\n    copyCommentsList.push(comment);\r\n    setCommentsList(copyCommentsList);\r\n    setComment(\"\");\r\n  };\r\n\r\n  const commentFeed = (props) => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <p>{props.user}</p>\r\n          <div>userComment</div>\r\n        </div>\r\n        <HandThumbUpIcon /> <HandThumbDownIcon />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {user && <div>Comment as {user}</div>}\r\n        <form>\r\n          <textarea\r\n            className=\"w-full \"\r\n            rows={5}\r\n            placeholder=\"   What are your thoughts?\"\r\n            onChange={commentChange}\r\n            onKeyUp={(e) => {\r\n              e.target.value.length > 0 ? SetIsValid(true) : SetIsValid(false);\r\n            }}\r\n            value={comment}\r\n          ></textarea>\r\n          <div className=\"text-right\">\r\n            <Button\r\n              className=\"mt-2 bg-gray-500 text-gray-300\"\r\n              onClick={post}\r\n              disabled={isValid ? false : true}\r\n            >\r\n              Comment\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/* <commentFeed /> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js",["245"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function CommentModal(props) {\r\n  const [comment, setComment] = useState({});\r\n  const visibleClass = props.open ? \"block\" : \"hidden\";\r\n\r\n  function close() {\r\n    setComment({});\r\n    props.onClickOut();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n    >\r\n      <div className=\"block overflow-scroll\">\r\n        <ClickOutHandler onClickOut={() => close()}>\r\n          <div className=\"border my-4 border-reddit_dark-brightest w-3/4 lg:w-1/2 bg-reddit_dark-brighter text-reddit_text self-center p-4 mx-auto rounded-md\">\r\n            <div className=\"\">\r\n              <Comment comment={comment} id={props.id} />\r\n            </div>\r\n          </div>\r\n        </ClickOutHandler>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js",[],[],{"ruleId":"283","severity":1,"message":"284","line":3,"column":25,"nodeType":"285","messageId":"286","endLine":3,"endColumn":29},{"ruleId":"283","severity":1,"message":"287","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":19},{"ruleId":"283","severity":1,"message":"288","line":7,"column":10,"nodeType":"285","messageId":"286","endLine":7,"endColumn":21},{"ruleId":"283","severity":1,"message":"284","line":3,"column":25,"nodeType":"285","messageId":"286","endLine":3,"endColumn":29},{"ruleId":"283","severity":1,"message":"289","line":8,"column":9,"nodeType":"285","messageId":"286","endLine":8,"endColumn":17},{"ruleId":"283","severity":1,"message":"290","line":9,"column":10,"nodeType":"285","messageId":"286","endLine":9,"endColumn":15},{"ruleId":"283","severity":1,"message":"291","line":9,"column":17,"nodeType":"285","messageId":"286","endLine":9,"endColumn":25},{"ruleId":"283","severity":1,"message":"292","line":1,"column":38,"nodeType":"285","messageId":"286","endLine":1,"endColumn":44},{"ruleId":"283","severity":1,"message":"293","line":4,"column":8,"nodeType":"285","messageId":"286","endLine":4,"endColumn":16},{"ruleId":"283","severity":1,"message":"294","line":8,"column":10,"nodeType":"285","messageId":"286","endLine":8,"endColumn":17},{"ruleId":"283","severity":1,"message":"295","line":8,"column":19,"nodeType":"285","messageId":"286","endLine":8,"endColumn":23},{"ruleId":"283","severity":1,"message":"296","line":8,"column":25,"nodeType":"285","messageId":"286","endLine":8,"endColumn":33},{"ruleId":"283","severity":1,"message":"297","line":8,"column":35,"nodeType":"285","messageId":"286","endLine":8,"endColumn":42},{"ruleId":"283","severity":1,"message":"298","line":13,"column":10,"nodeType":"285","messageId":"286","endLine":13,"endColumn":24},{"ruleId":"283","severity":1,"message":"299","line":13,"column":26,"nodeType":"285","messageId":"286","endLine":13,"endColumn":35},{"ruleId":"283","severity":1,"message":"300","line":14,"column":8,"nodeType":"285","messageId":"286","endLine":14,"endColumn":13},{"ruleId":"283","severity":1,"message":"301","line":15,"column":8,"nodeType":"285","messageId":"286","endLine":15,"endColumn":19},{"ruleId":"283","severity":1,"message":"302","line":16,"column":8,"nodeType":"285","messageId":"286","endLine":16,"endColumn":15},{"ruleId":"283","severity":1,"message":"303","line":17,"column":8,"nodeType":"285","messageId":"286","endLine":17,"endColumn":20},{"ruleId":"283","severity":1,"message":"304","line":19,"column":10,"nodeType":"285","messageId":"286","endLine":19,"endColumn":19},{"ruleId":"283","severity":1,"message":"288","line":20,"column":10,"nodeType":"285","messageId":"286","endLine":20,"endColumn":21},{"ruleId":"283","severity":1,"message":"305","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":22},{"ruleId":"283","severity":1,"message":"306","line":31,"column":10,"nodeType":"285","messageId":"286","endLine":31,"endColumn":19},{"ruleId":"283","severity":1,"message":"307","line":31,"column":21,"nodeType":"285","messageId":"286","endLine":31,"endColumn":33},{"ruleId":"283","severity":1,"message":"308","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":17},{"ruleId":"283","severity":1,"message":"289","line":9,"column":9,"nodeType":"285","messageId":"286","endLine":9,"endColumn":17},{"ruleId":"283","severity":1,"message":"301","line":12,"column":8,"nodeType":"285","messageId":"286","endLine":12,"endColumn":19},{"ruleId":"283","severity":1,"message":"309","line":14,"column":10,"nodeType":"285","messageId":"286","endLine":14,"endColumn":13},{"ruleId":"283","severity":1,"message":"310","line":18,"column":10,"nodeType":"285","messageId":"286","endLine":18,"endColumn":15},{"ruleId":"283","severity":1,"message":"311","line":18,"column":17,"nodeType":"285","messageId":"286","endLine":18,"endColumn":25},{"ruleId":"283","severity":1,"message":"312","line":23,"column":10,"nodeType":"285","messageId":"286","endLine":23,"endColumn":14},{"ruleId":"283","severity":1,"message":"313","line":23,"column":16,"nodeType":"285","messageId":"286","endLine":23,"endColumn":23},{"ruleId":"283","severity":1,"message":"314","line":29,"column":17,"nodeType":"285","messageId":"286","endLine":29,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":78,"column":6,"nodeType":"317","endLine":78,"endColumn":8,"suggestions":"318"},{"ruleId":"283","severity":1,"message":"319","line":80,"column":9,"nodeType":"285","messageId":"286","endLine":80,"endColumn":19},{"ruleId":"320","severity":1,"message":"321","line":185,"column":25,"nodeType":"322","endLine":185,"endColumn":41},{"ruleId":"283","severity":1,"message":"284","line":10,"column":10,"nodeType":"285","messageId":"286","endLine":10,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":21,"column":6,"nodeType":"317","endLine":21,"endColumn":8,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":35,"column":40,"nodeType":"326","messageId":"327","endLine":35,"endColumn":42},{"ruleId":"283","severity":1,"message":"328","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":23},{"ruleId":"283","severity":1,"message":"301","line":8,"column":8,"nodeType":"285","messageId":"286","endLine":8,"endColumn":19},{"ruleId":"283","severity":1,"message":"329","line":9,"column":23,"nodeType":"285","messageId":"286","endLine":9,"endColumn":34},{"ruleId":"283","severity":1,"message":"330","line":15,"column":10,"nodeType":"285","messageId":"286","endLine":15,"endColumn":20},{"ruleId":"315","severity":1,"message":"331","line":33,"column":6,"nodeType":"317","endLine":33,"endColumn":8,"suggestions":"332"},{"ruleId":"315","severity":1,"message":"333","line":114,"column":6,"nodeType":"317","endLine":114,"endColumn":8,"suggestions":"334"},{"ruleId":"283","severity":1,"message":"335","line":1,"column":40,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"336","line":4,"column":3,"nodeType":"285","messageId":"286","endLine":4,"endColumn":15},{"ruleId":"283","severity":1,"message":"337","line":11,"column":8,"nodeType":"285","messageId":"286","endLine":11,"endColumn":19},{"ruleId":"283","severity":1,"message":"303","line":19,"column":8,"nodeType":"285","messageId":"286","endLine":19,"endColumn":20},{"ruleId":"283","severity":1,"message":"338","line":26,"column":9,"nodeType":"285","messageId":"286","endLine":26,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":43,"column":6,"nodeType":"317","endLine":43,"endColumn":8,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":46,"column":18,"nodeType":"342","messageId":"343","endLine":46,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":46,"column":56,"nodeType":"342","messageId":"343","endLine":46,"endColumn":58},{"ruleId":"324","severity":1,"message":"325","line":159,"column":42,"nodeType":"326","messageId":"327","endLine":159,"endColumn":44},{"ruleId":"320","severity":1,"message":"321","line":176,"column":21,"nodeType":"322","endLine":176,"endColumn":52},{"ruleId":"283","severity":1,"message":"344","line":1,"column":10,"nodeType":"285","messageId":"286","endLine":1,"endColumn":18},{"ruleId":"283","severity":1,"message":"345","line":2,"column":17,"nodeType":"285","messageId":"286","endLine":2,"endColumn":27},{"ruleId":"283","severity":1,"message":"346","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":28},{"ruleId":"315","severity":1,"message":"347","line":19,"column":6,"nodeType":"317","endLine":19,"endColumn":24,"suggestions":"348"},{"ruleId":"283","severity":1,"message":"284","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":16,"column":6,"nodeType":"317","endLine":16,"endColumn":8,"suggestions":"349"},{"ruleId":"324","severity":1,"message":"325","line":28,"column":38,"nodeType":"326","messageId":"327","endLine":28,"endColumn":40},{"ruleId":"315","severity":1,"message":"316","line":13,"column":6,"nodeType":"317","endLine":13,"endColumn":8,"suggestions":"350"},{"ruleId":"283","severity":1,"message":"287","line":4,"column":20,"nodeType":"285","messageId":"286","endLine":4,"endColumn":29},{"ruleId":"283","severity":1,"message":"351","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":14},{"ruleId":"283","severity":1,"message":"352","line":10,"column":10,"nodeType":"285","messageId":"286","endLine":10,"endColumn":16},{"ruleId":"283","severity":1,"message":"353","line":29,"column":9,"nodeType":"285","messageId":"286","endLine":29,"endColumn":20},{"ruleId":"283","severity":1,"message":"287","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":26},{"ruleId":"283","severity":1,"message":"302","line":10,"column":8,"nodeType":"285","messageId":"286","endLine":10,"endColumn":15},{"ruleId":"283","severity":1,"message":"351","line":12,"column":8,"nodeType":"285","messageId":"286","endLine":12,"endColumn":14},{"ruleId":"283","severity":1,"message":"354","line":18,"column":3,"nodeType":"285","messageId":"286","endLine":18,"endColumn":13},{"ruleId":"283","severity":1,"message":"355","line":19,"column":3,"nodeType":"285","messageId":"286","endLine":19,"endColumn":11},{"ruleId":"283","severity":1,"message":"356","line":24,"column":3,"nodeType":"285","messageId":"286","endLine":24,"endColumn":16},{"ruleId":"283","severity":1,"message":"357","line":34,"column":8,"nodeType":"285","messageId":"286","endLine":34,"endColumn":13},{"ruleId":"283","severity":1,"message":"338","line":40,"column":9,"nodeType":"285","messageId":"286","endLine":40,"endColumn":17},{"ruleId":"283","severity":1,"message":"358","line":41,"column":11,"nodeType":"285","messageId":"286","endLine":41,"endColumn":16},{"ruleId":"283","severity":1,"message":"359","line":42,"column":10,"nodeType":"285","messageId":"286","endLine":42,"endColumn":14},{"ruleId":"283","severity":1,"message":"360","line":46,"column":10,"nodeType":"285","messageId":"286","endLine":46,"endColumn":20},{"ruleId":"283","severity":1,"message":"361","line":48,"column":10,"nodeType":"285","messageId":"286","endLine":48,"endColumn":22},{"ruleId":"283","severity":1,"message":"362","line":49,"column":10,"nodeType":"285","messageId":"286","endLine":49,"endColumn":19},{"ruleId":"283","severity":1,"message":"363","line":50,"column":10,"nodeType":"285","messageId":"286","endLine":50,"endColumn":16},{"ruleId":"283","severity":1,"message":"364","line":50,"column":18,"nodeType":"285","messageId":"286","endLine":50,"endColumn":26},{"ruleId":"315","severity":1,"message":"365","line":74,"column":8,"nodeType":"285","endLine":74,"endColumn":12},{"ruleId":"315","severity":1,"message":"366","line":74,"column":8,"nodeType":"285","endLine":74,"endColumn":12,"suggestions":"367"},{"ruleId":"283","severity":1,"message":"368","line":81,"column":10,"nodeType":"285","messageId":"286","endLine":81,"endColumn":12},{"ruleId":"283","severity":1,"message":"369","line":81,"column":14,"nodeType":"285","messageId":"286","endLine":81,"endColumn":19},{"ruleId":"283","severity":1,"message":"370","line":92,"column":10,"nodeType":"285","messageId":"286","endLine":92,"endColumn":14},{"ruleId":"283","severity":1,"message":"371","line":93,"column":10,"nodeType":"285","messageId":"286","endLine":93,"endColumn":19},{"ruleId":"283","severity":1,"message":"372","line":94,"column":10,"nodeType":"285","messageId":"286","endLine":94,"endColumn":17},{"ruleId":"283","severity":1,"message":"373","line":94,"column":19,"nodeType":"285","messageId":"286","endLine":94,"endColumn":29},{"ruleId":"315","severity":1,"message":"331","line":98,"column":6,"nodeType":"317","endLine":98,"endColumn":8,"suggestions":"374"},{"ruleId":"283","severity":1,"message":"375","line":119,"column":11,"nodeType":"285","messageId":"286","endLine":119,"endColumn":23},{"ruleId":"283","severity":1,"message":"376","line":119,"column":25,"nodeType":"285","messageId":"286","endLine":119,"endColumn":38},{"ruleId":"283","severity":1,"message":"377","line":119,"column":40,"nodeType":"285","messageId":"286","endLine":119,"endColumn":52},{"ruleId":"283","severity":1,"message":"378","line":121,"column":9,"nodeType":"285","messageId":"286","endLine":121,"endColumn":27},{"ruleId":"283","severity":1,"message":"379","line":129,"column":9,"nodeType":"285","messageId":"286","endLine":129,"endColumn":26},{"ruleId":"283","severity":1,"message":"380","line":133,"column":10,"nodeType":"285","messageId":"286","endLine":133,"endColumn":11},{"ruleId":"283","severity":1,"message":"381","line":133,"column":13,"nodeType":"285","messageId":"286","endLine":133,"endColumn":19},{"ruleId":"283","severity":1,"message":"382","line":135,"column":9,"nodeType":"285","messageId":"286","endLine":135,"endColumn":12},{"ruleId":"283","severity":1,"message":"383","line":158,"column":12,"nodeType":"285","messageId":"286","endLine":158,"endColumn":22},{"ruleId":"283","severity":1,"message":"384","line":162,"column":12,"nodeType":"285","messageId":"286","endLine":162,"endColumn":26},{"ruleId":"340","severity":1,"message":"341","line":240,"column":18,"nodeType":"342","messageId":"343","endLine":240,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":240,"column":56,"nodeType":"342","messageId":"343","endLine":240,"endColumn":58},{"ruleId":"324","severity":1,"message":"325","line":382,"column":42,"nodeType":"326","messageId":"327","endLine":382,"endColumn":44},{"ruleId":"320","severity":1,"message":"321","line":402,"column":23,"nodeType":"322","endLine":402,"endColumn":68},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'dispatch' is assigned a value but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'useRef' is defined but never used.","'PostForm' is defined but never used.","'Sidebar' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'SubMenu' is defined but never used.","'ChakraProvider' is defined but never used.","'Container' is defined but never used.","'axios' is defined but never used.","'UserContext' is defined but never used.","'Comment' is defined but never used.","'CommentModal' is defined but never used.","'userSlice' is defined but never used.","'SideMenutoggle' is defined but never used.","'navActive' is assigned a value but never used.","'setNavActive' is assigned a value but never used.","'LoginPage' is defined but never used.","'Box' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["385"],"'changePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["386"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ClickOutHandler' is defined but never used.","'useSelector' is defined but never used.","'useCookies' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has a missing dependency: 'logincheck'. Either include it or remove the dependency array.",["388"],"'useState' is defined but never used.","'asyncVoteSum' is defined but never used.","'PostContent' is defined but never used.","'navigate' is assigned a value but never used.",["389"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PlusIcon' is defined but never used.","'useContext' is defined but never used.","'PostFormModalContext' is defined but never used.","React Hook React.useEffect has a missing dependency: 'repeat'. Either include it or remove the dependency array.",["390"],["391"],["392"],"'Header' is defined but never used.","'Avatar' is defined but never used.","'commentFeed' is assigned a value but never used.","'currentSub' is defined but never used.","'subSlice' is defined but never used.","'myVoteComment' is defined but never used.","'Input' is defined but never used.","'state' is assigned a value but never used.","'file' is assigned a value but never used.","'post_title' is assigned a value but never used.","'post_imgpath' is assigned a value but never used.","'post_link' is assigned a value but never used.","'sub_id' is assigned a value but never used.","'setSubID' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["393"],"'cp' is assigned a value but never used.","'setCP' is assigned a value but never used.","'post' is assigned a value but never used.","'edit_post' is assigned a value but never used.","'isValid' is assigned a value but never used.","'SetIsValid' is assigned a value but never used.",["394"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'onPostTitleHandler' is assigned a value but never used.","'onPostLinkHandler' is assigned a value but never used.","'t' is assigned a value but never used.","'setTab' is assigned a value but never used.","'Tab' is assigned a value but never used.","'PostChange' is defined but never used.","'editPostChange' is defined but never used.",{"desc":"395","fix":"396"},{"desc":"395","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"395","fix":"402"},{"desc":"403","fix":"404"},{"desc":"395","fix":"405"},{"desc":"395","fix":"406"},{"desc":"407","fix":"408"},{"desc":"398","fix":"409"},"Update the dependencies array to be: [dispatch]",{"range":"410","text":"411"},{"range":"412","text":"411"},"Update the dependencies array to be: [handleClickOutside]",{"range":"413","text":"414"},"Update the dependencies array to be: [logincheck]",{"range":"415","text":"416"},{"range":"417","text":"411"},"Update the dependencies array to be: [props.visibility, repeat]",{"range":"418","text":"419"},{"range":"420","text":"411"},{"range":"421","text":"411"},"Update the dependencies array to be: [func]",{"range":"422","text":"423"},{"range":"424","text":"414"},[2607,2609],"[dispatch]",[605,607],[1196,1198],"[handleClickOutside]",[3493,3495],"[logincheck]",[1310,1312],[483,501],"[props.visibility, repeat]",[582,584],[467,469],[2271,2275],"[func]",[2956,2958]]