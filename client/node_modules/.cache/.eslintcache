[{"C:\\projects\\Portfolio\\client\\src\\index.js":"1","C:\\projects\\Portfolio\\client\\src\\App.js":"2","C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js":"3","C:\\projects\\Reddit-Clone\\client\\src\\index.js":"4","C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js":"5","C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js":"6","C:\\projects\\Reddit-Clone\\client\\src\\App.js":"7","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"8","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js":"9","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"10","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js":"11","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js":"12","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js":"13","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js":"14","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js":"15","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js":"16","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js":"17","C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js":"18","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js":"19","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js":"20","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js":"21","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js":"22","C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js":"23","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js":"24","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js":"25","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js":"26","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js":"27","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js":"28","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js":"29","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js":"30","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js":"31","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js":"32"},{"size":882,"mtime":1672560996292,"results":"33","hashOfConfig":"34"},{"size":910,"mtime":1673547089326,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1670225087029,"results":"36","hashOfConfig":"34"},{"size":1091,"mtime":1676104777077,"results":"37","hashOfConfig":"38"},{"size":8095,"mtime":1676120776710,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1670225087029,"results":"40","hashOfConfig":"38"},{"size":1025,"mtime":1674888052455,"results":"41","hashOfConfig":"38"},{"size":1647,"mtime":1676377185980,"results":"42","hashOfConfig":"38"},{"size":2420,"mtime":1676392779295,"results":"43","hashOfConfig":"38"},{"size":2223,"mtime":1671368945984,"results":"44","hashOfConfig":"38"},{"size":7569,"mtime":1675183675090,"results":"45","hashOfConfig":"38"},{"size":3036,"mtime":1676124984276,"results":"46","hashOfConfig":"38"},{"size":5941,"mtime":1676377985713,"results":"47","hashOfConfig":"38"},{"size":5720,"mtime":1676391928323,"results":"48","hashOfConfig":"38"},{"size":117,"mtime":1674465689290,"results":"49","hashOfConfig":"38"},{"size":6153,"mtime":1676376434303,"results":"50","hashOfConfig":"38"},{"size":1264,"mtime":1676375784924,"results":"51","hashOfConfig":"38"},{"size":775,"mtime":1673542934879,"results":"52","hashOfConfig":"38"},{"size":360,"mtime":1673966772064,"results":"53","hashOfConfig":"38"},{"size":230,"mtime":1673355038470,"results":"54","hashOfConfig":"38"},{"size":1363,"mtime":1672568355181,"results":"55","hashOfConfig":"38"},{"size":1107,"mtime":1673706807618,"results":"56","hashOfConfig":"38"},{"size":107,"mtime":1673957030096,"results":"57","hashOfConfig":"38"},{"size":300,"mtime":1673966778713,"results":"58","hashOfConfig":"38"},{"size":265,"mtime":1673966784225,"results":"59","hashOfConfig":"38"},{"size":125,"mtime":1673958965193,"results":"60","hashOfConfig":"38"},{"size":1857,"mtime":1676377033144,"results":"61","hashOfConfig":"38"},{"size":1010,"mtime":1674405616541,"results":"62","hashOfConfig":"38"},{"size":20692,"mtime":1676376905143,"results":"63","hashOfConfig":"38"},{"size":125,"mtime":1674750837100,"results":"64","hashOfConfig":"38"},{"size":414,"mtime":1674835794248,"results":"65","hashOfConfig":"38"},{"size":2254,"mtime":1676392763892,"results":"66","hashOfConfig":"38"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"109w8of",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"18acrre",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\Portfolio\\client\\src\\index.js",[],[],[],"C:\\projects\\Portfolio\\client\\src\\App.js",["176"],[],"C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\index.js",["177"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store.js\";\nimport { ProSidebarProvider } from \"react-pro-sidebar\";\nimport { CookiesProvider } from \"react-cookie\";\nimport { useEffect } from \"react\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconsole.log(process.env.PUBLIC_URL);\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <CookiesProvider>\n        <ProSidebarProvider>\n          <App />\n        </ProSidebarProvider>\n      </CookiesProvider>\n    </Provider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js",["178"],[],"import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst asyncMyVotePost = createAsyncThunk(\r\n  \"myVotePost/asyncMyVotePost\",\r\n  async (user_name) => {\r\n    let body = {\r\n      user_name: user_name,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/myvotepost\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst myVotePost = createSlice({\r\n  name: \"myVotePost\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncMyVotePost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncMyVotePost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncMyVotePost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncMyVoteComment = createAsyncThunk(\r\n  \"myVoteComment/asyncMyVoteComment\",\r\n  async (user_name) => {\r\n    let body = {\r\n      user_name: user_name,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/myvotecomment\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst myVoteComment = createSlice({\r\n  name: \"myVoteComment\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncMyVoteComment.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncMyVoteComment.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncMyVoteComment.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncComment = createAsyncThunk(\r\n  \"commentSlice/asyncComment\",\r\n  async (post_id) => {\r\n    let body = {\r\n      postid: post_id,\r\n    };\r\n\r\n    const resp = await axios.post(\"/api/comment\", body);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"commentSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  reducers: {\r\n    changeEdit: (state, action) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.comment_id) {\r\n          state.list[i].edit = !action.payload.edit;\r\n        } else {\r\n          state.list[i].edit = false;\r\n        }\r\n      }\r\n    },\r\n    changeEditComment: (state, action, comment) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.comment_id) {\r\n          // console.log(action.payload.edit_comment);\r\n          state.list[i].edit_comment = action.payload.edit_comment;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncComment.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncComment.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncComment.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"userSlice\",\r\n  initialState: {\r\n    userName: \"\",\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.userName = action.payload;\r\n      // console.log(state.userName);\r\n    },\r\n    LogoutUser: (state) => {\r\n      state.userName = \"\";\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\r\n  const resp = await axios.get(\"/api/topic\");\r\n  return resp.data;\r\n});\r\n\r\nconst topicSlice = createSlice({\r\n  name: \"topicSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncTopic.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncTopic.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\r\n  const resp = await axios.get(\"/api/sub\");\r\n  return resp.data;\r\n});\r\n\r\nconst subSlice = createSlice({\r\n  name: \"subSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncSub.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncSub.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async (subid) => {\r\n  const resp = await axios.get(\"/api/post\", { params: { subId: subid } });\r\n  return resp.data;\r\n});\r\n\r\nconst getSearchPost = createAsyncThunk(\r\n  \"postSlice/getSearchPost\",\r\n  async (searchContent) => {\r\n    const resp = await axios.get(\"/api/search\", {\r\n      params: { searchContent: searchContent },\r\n    });\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  reducers: {\r\n    changeEdit: (state, action) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].comment_id === action.payload.post_id) {\r\n          state.list[i].edit = !action.payload.edit;\r\n        } else {\r\n          state.list[i].edit = false;\r\n        }\r\n      }\r\n    },\r\n    changeEditPost: (state, action, post) => {\r\n      for (var i = 0; i < state.list.length; i++) {\r\n        if (state.list[i].post_id === action.payload.post_id) {\r\n          // console.log(action.payload.edit_post);\r\n          state.list[i].edit_post = action.payload.edit_post;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getSearchPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n    });\r\n    builder.addCase(getPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst currentSub = createSlice({\r\n  name: \"currentSub\",\r\n  initialState: {\r\n    currentSub: -1,\r\n  },\r\n  reducers: {\r\n    setCurrentSub: (state, action) => {\r\n      state.currentSub = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nconst getCurrentPost = createAsyncThunk(\r\n  \"currentPost/getCurrentPost\",\r\n  async (postid) => {\r\n    const resp = await axios.get(\"/api/currpost\", {\r\n      params: { postid: postid },\r\n    });\r\n    // console.log(resp.data);\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst currentPost = createSlice({\r\n  name: \"currentPost\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getCurrentPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getCurrentPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getCurrentPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    topicSlice: topicSlice.reducer,\r\n    subSlice: subSlice.reducer,\r\n    postSlice: postSlice.reducer,\r\n    userSlice: userSlice.reducer,\r\n    commentSlice: commentSlice.reducer,\r\n    currentSub: currentSub.reducer,\r\n    myVotePost: myVotePost.reducer,\r\n    myVoteComment: myVoteComment.reducer,\r\n    currentPost: currentPost.reducer,\r\n  },\r\n});\r\n\r\nexport {\r\n  asyncTopic,\r\n  asyncSub,\r\n  getPost,\r\n  postSlice,\r\n  userSlice,\r\n  asyncComment,\r\n  commentSlice,\r\n  currentSub,\r\n  myVotePost,\r\n  myVoteComment,\r\n  asyncMyVoteComment,\r\n  asyncMyVotePost,\r\n  getCurrentPost,\r\n  currentPost,\r\n  getSearchPost,\r\n};\r\n","C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js",[],[],[],"C:\\projects\\Reddit-Clone\\client\\src\\App.js",["179"],[],"import React from \"react\";\n\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport PostPage from \"./components/Layout/PostPage\";\nimport MainPage from \"./components/views/LandingPage/MainPage\";\nimport LoginPage from \"./components/views/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/views/RegisterPage/RegisterPage\";\nimport CreatePost from \"./components/views/UtilPage/CreatePost\";\n\nexport default function App() {\n  return (\n    // <Router>\n    //   <div>\n    //     <Routes>\n    //       <Route exact path=\"/login\" element={<LoginPage />} />\n    //       <Route exact path=\"/\" element={<LandingPage />} />\n    //     </Routes>\n    //   </div>\n    // </Router>\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />}></Route>\n      <Route path=\"/\" element={<MainPage />}></Route>\n      <Route path=\"/register\" element={<RegisterPage />}></Route>\n      <Route path=\"/createPost\" element={<CreatePost />}></Route>\n      <Route path=\"/PostPage\" element={<PostPage />}></Route>\n    </Routes>\n  );\n}\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["180"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js",["181"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["182","183"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\n\r\nexport default function RegisterPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Email\", Email);\r\n    console.log(\"Name\", Name);\r\n    console.log(\"Password\", Password);\r\n\r\n    let body = {\r\n      email: Email,\r\n      name: Name,\r\n      password: Password,\r\n    };\r\n    // dispatch(loginUser(body));\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\");\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <label>Name</label>\r\n        <input type=\"name\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button>Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js",["184","185","186","187","188","189","190","191","192","193"],[],"import Header from \"./Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { React, useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport Button from \"../../Layout/Button\";\r\nimport { asyncSub, getPost } from \"../../../store/store\";\r\nimport AuthModal from \"./AuthModal\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function CreatePost() {\r\n  const [files, setFiles] = useState([]);\r\n  const [file, setFile] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showAuthModal, setShowModal] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [post_title, setPostTitle] = useState(\"\");\r\n  const [post_content, setPostContent] = useState(\"\");\r\n  const [post_imgpath, setPostImgPath] = useState(\"\");\r\n  const [post_link, setPostLink] = useState(\"\");\r\n  const [sub_id, setSubID] = useState(-1);\r\n  const [value, setValue] = useState(\"default\");\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userName\"]);\r\n\r\n  // const onDrop = useCallback((acceptedFiles) => {\r\n  //   // Do something with the files\r\n  //   // console.log(URL.createObjectURL(acceptedFiles[0]));\r\n  //   // setFiles(URL.createObjectURL(acceptedFiles[0]));\r\n  //   // getBase64(URL.createObjectURL(acceptedFiles[0]));\r\n  //   setFile(URL.createObjectURL(acceptedFiles[0]));\r\n  //   setPostImgPath(URL.createObjectURL(acceptedFiles[0]));\r\n  // }, []);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const blob = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = () => {\r\n      const base64data = reader.result;\r\n      console.log(base64data);\r\n\r\n      setFile(base64data);\r\n      setPostImgPath(base64data);\r\n    };\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  const user_name = useSelector((state) => state.userSlice.userName);\r\n\r\n  const [t, setTab] = useState(0);\r\n\r\n  const Tab = [\r\n    {\r\n      title: \"Post\",\r\n      index: 0,\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      index: 1,\r\n    },\r\n    {\r\n      title: \"Link\",\r\n      index: 2,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(asyncSub());\r\n  }, []);\r\n\r\n  const changePost = (subid) => {\r\n    dispatch(getPost(subid, user_name));\r\n  };\r\n\r\n  const onPostTitleHandler = (event) => {\r\n    setPostTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostContentHandler = (event) => {\r\n    setPostContent(event.currentTarget.value);\r\n  };\r\n  const onPostLinkHandler = (event) => {\r\n    setPostLink(event.currentTarget.value);\r\n  };\r\n  const onSubIDHandler = (event) => {\r\n    setSubID(event.currentTarget.value);\r\n  };\r\n\r\n  function writePost(e) {\r\n    let body = {\r\n      post_title: post_title,\r\n      post_content: post_content,\r\n      post_imgpath: post_imgpath,\r\n      post_link: post_link,\r\n      sub_id: sub_id,\r\n      user_name: user_name,\r\n    };\r\n\r\n    axios.post(\"/api/write\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      } else if (res.data.result === \"subError\") {\r\n        alert(\"커뮤니티를 설정해주세요\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthModalContext.Provider\r\n      value={{\r\n        show: showAuthModal,\r\n        setShow: setShowModal,\r\n        cookie: cookies,\r\n        setCook: setCookie,\r\n        removeCook: removeCookie,\r\n      }}\r\n    >\r\n      <div>\r\n        <Header />\r\n        <div className=\"w-screen h-screen fixed left-0 bg-reddit_gray overflow-auto\">\r\n          <AuthModal />\r\n          <div className=\" p-5 self-center mx-auto rounded-md\">\r\n            <div className=\" p-5 self-center mx-auto rounded-md\">\r\n              <h1 className=\"text-xl mb-4\">Create a post</h1>\r\n\r\n              <select\r\n                defaultValue={value}\r\n                className=\"h-8 w-2/5 border border-gray-300 bg-white rounded-md\"\r\n                onChange={onSubIDHandler}\r\n              >\r\n                <option value=\"default\" disabled hidden>\r\n                  choose a community!\r\n                </option>\r\n                {sub_list.map((sub, i) => {\r\n                  return (\r\n                    <option key={i} value={sub.sub_id}>\r\n                      {sub.sub_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <section>\r\n                {Tab.map((e, index) => (\r\n                  <button\r\n                    className=\"relative bg-white text-sm font-bold w-32 h-10 mt-2 border border-gray-300 text-gray-300 focus:text-blue-500 focus:border-b-4 focus:border-b-blue-300\"\r\n                    key={index}\r\n                    onClick={(e) => setTab(index)}\r\n                  >\r\n                    {e.title}\r\n                  </button>\r\n                ))}\r\n\r\n                <div className=\"bg-white mb-2 px-8 py-4\">\r\n                  <Input\r\n                    className=\"w-full  border border-gray\"\r\n                    value={post_title}\r\n                    type=\"text\"\r\n                    placeholder=\"title\"\r\n                    onChange={onPostTitleHandler}\r\n                  />\r\n                  {t === 0 && (\r\n                    <Textarea\r\n                      className={\"w-full mb-3\"}\r\n                      placeholder=\"text(optional)\"\r\n                      rows={10}\r\n                      value={post_content}\r\n                      onChange={onPostContentHandler}\r\n                    />\r\n                  )}\r\n                  {t === 1 && (\r\n                    <div>\r\n                      <div className=\" border border-gray mb-3 pt-20 p-3\">\r\n                        <img src={file}></img>\r\n                        <div {...getRootProps()}>\r\n                          <input {...getInputProps()} />\r\n                          {isDragActive ? (\r\n                            <p>Drop the files here ...</p>\r\n                          ) : (\r\n                            <div>\r\n                              <Button>Open</Button>\r\n                              <p>\r\n                                Drag 'n' drop some files here, or click to\r\n                                select files\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {t === 2 && (\r\n                    <Textarea\r\n                      className={\"w-full mb-3\"}\r\n                      placeholder=\"Link 받기\"\r\n                      rows={10}\r\n                      value={post_link}\r\n                      onChange={onPostLinkHandler}\r\n                    />\r\n                  )}\r\n                  <div className={\"text-right\"}>\r\n                    <Button className={\"px-4 py-2 mr-3\"}>Cancel</Button>\r\n                    <Button type=\"submit\" onClick={(e) => writePost()}>\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AuthModalContext.Provider>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js",["194","195","196"],[],"import React, { useEffect } from \"react\";\r\nimport { Sidebar, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  asyncTopic,\r\n  asyncSub,\r\n  getPost,\r\n  currentSub,\r\n} from \"../../../store/store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Sidemenu() {\r\n  const dispatch = useDispatch();\r\n\r\n  const topic_list = useSelector((state) => state.topicSlice.list);\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  useEffect(() => {\r\n    dispatch(asyncTopic());\r\n    dispatch(asyncSub());\r\n  }, []);\r\n\r\n  const changePost = (subid) => {\r\n    dispatch(getPost(subid));\r\n    dispatch(currentSub.actions.setCurrentSub(subid));\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed sticky top-12\">\r\n      <div>\r\n        <Sidebar className=\"hidden sm:block\">\r\n          <Menu>\r\n            {topic_list.map((tp, i) => (\r\n              <SubMenu key={i} label={tp.topic_name}>\r\n                {sub_list.map((sub, j) => {\r\n                  if (tp.topic_id === sub.topic_id) {\r\n                    return (\r\n                      <MenuItem\r\n                        onClick={() => {\r\n                          changePost(sub.sub_id);\r\n                        }}\r\n                        key={j}\r\n                      >\r\n                        {sub.sub_name}\r\n                      </MenuItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </SubMenu>\r\n            ))}\r\n          </Menu>\r\n        </Sidebar>\r\n      </div>\r\n    </div>\r\n  );\r\n  //   const dispatch = useDispatch();\r\n  //   const topic_list = useSelector((state) => state.topicSlice.list);\r\n  //   const sub_list = useSelector((state) => state.subSlice.list);\r\n  //   useEffect(() => {\r\n  //     dispatch(asyncTopic());\r\n  //     dispatch(asyncSub());\r\n  //   }, []);\r\n  //   return (\r\n  //     <div className={styles.sidebar}>\r\n  //       <div className=\"sidebarWrapper\">\r\n  //         <div className={styles.sidebarMenu}>\r\n  //           <div>\r\n  //             <i className=\"fa-regular fa-circle-arrow-up-right\"></i>\r\n  //             <ul>\r\n  //               FEEDS\r\n  //               <li className=\"sidebarListItem\">\r\n  //                 <i className=\"fa-solid fa-house\"></i>Home\r\n  //               </li>\r\n  //               <li className=\"sidebarListItem\">\r\n  //                 <span className=\"material-symbols-outlined\">outbound</span>\r\n  //                 Popular\r\n  //               </li>\r\n  //             </ul>\r\n  //           </div>\r\n  //           <ul>\r\n  //             RECENT\r\n  //             <li>r/running</li>\r\n  //           </ul>\r\n  //           <ul>TOPICS</ul>\r\n  //           {topic_list.map((item, index) => (\r\n  //             <div key={index}>{item.topic_name}</div>\r\n  //           ))}\r\n  //           {sub_list.map((item, index) => (\r\n  //             <div key={index}>{item.sub_name}</div>\r\n  //           ))}\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n}\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js",["197","198","199","200","201","202"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js",["203","204","205"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js",["206"],[],"import React from \"react\";\r\n\r\nconst Dropdown = (props) => {\r\n  const [visibilityAnimation, setVisibilityAnimation] = React.useState(false);\r\n  const [repeat, setRepeat] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (props.visibility) {\r\n      clearTimeout(repeat);\r\n      setRepeat(null);\r\n      setVisibilityAnimation(true);\r\n    } else {\r\n      setRepeat(\r\n        setTimeout(() => {\r\n          setVisibilityAnimation(false);\r\n        }, 400)\r\n      );\r\n    }\r\n  }, [props.visibility]);\r\n\r\n  return (\r\n    <article\r\n      className={`components-dropdown ${\r\n        props.visibility ? \"slide-fade-in-dropdown\" : \"slide-fade-out-dropdown\"\r\n      }`}\r\n    >\r\n      {visibilityAnimation && props.children}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js",["207","208","209"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js",["210"],[],"import React, { useEffect } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPost } from \"../../../store/store\";\r\n\r\nexport default function PostContent(props) {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.postSlice.list);\r\n  useEffect(() => {\r\n    dispatch(getPost(-1));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"px-6 bg-reddit_gray\">\r\n      {post_list.map((item, index) => (\r\n        <div\r\n          className=\"border border-reddit_border bg-white p-2 rounded-md\"\r\n          key={index}\r\n        >\r\n          <h5 className=\"text-reddit_text-darker text-sm mb-1\">\r\n            Posted by u/{item.user_name} <TimeAgo datetime={item.post_date} />\r\n          </h5>\r\n          <h2 className=\"text-xl mb-3\">포스트 제목</h2>\r\n          <div className=\"text-sm leading-6\">\r\n            <ReactMarkdown plugins={[gfm]} children={item.post_content} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js",["211","212"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js",["213"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function CommentModal(props) {\r\n  const [comment, setComment] = useState({});\r\n  const visibleClass = props.open ? \"block\" : \"hidden\";\r\n\r\n  function close() {\r\n    setComment({});\r\n    props.onClickOut();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n    >\r\n      <div className=\"block overflow-scroll\">\r\n        <ClickOutHandler onClickOut={() => close()}>\r\n          <div className=\"border my-4 border-reddit_dark-brightest w-3/4 lg:w-1/2 bg-reddit_dark-brighter text-reddit_text self-center p-4 mx-auto rounded-md\">\r\n            <div className=\"\">\r\n              <Comment comment={comment} id={props.id} />\r\n            </div>\r\n          </div>\r\n        </ClickOutHandler>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js",[],[],{"ruleId":"251","severity":1,"message":"252","line":3,"column":25,"nodeType":"253","messageId":"254","endLine":3,"endColumn":29},{"ruleId":"251","severity":1,"message":"255","line":11,"column":10,"nodeType":"253","messageId":"254","endLine":11,"endColumn":19},{"ruleId":"251","severity":1,"message":"256","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":3,"column":25,"nodeType":"253","messageId":"254","endLine":3,"endColumn":29},{"ruleId":"251","severity":1,"message":"257","line":8,"column":9,"nodeType":"253","messageId":"254","endLine":8,"endColumn":17},{"ruleId":"251","severity":1,"message":"258","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":22},{"ruleId":"251","severity":1,"message":"259","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":17},{"ruleId":"251","severity":1,"message":"257","line":9,"column":9,"nodeType":"253","messageId":"254","endLine":9,"endColumn":17},{"ruleId":"251","severity":1,"message":"260","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":19},{"ruleId":"251","severity":1,"message":"261","line":14,"column":10,"nodeType":"253","messageId":"254","endLine":14,"endColumn":13},{"ruleId":"251","severity":1,"message":"262","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":15},{"ruleId":"251","severity":1,"message":"263","line":18,"column":17,"nodeType":"253","messageId":"254","endLine":18,"endColumn":25},{"ruleId":"251","severity":1,"message":"264","line":23,"column":10,"nodeType":"253","messageId":"254","endLine":23,"endColumn":14},{"ruleId":"251","severity":1,"message":"265","line":23,"column":16,"nodeType":"253","messageId":"254","endLine":23,"endColumn":23},{"ruleId":"251","severity":1,"message":"266","line":29,"column":17,"nodeType":"253","messageId":"254","endLine":29,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":78,"column":6,"nodeType":"269","endLine":78,"endColumn":8,"suggestions":"270"},{"ruleId":"251","severity":1,"message":"271","line":80,"column":9,"nodeType":"253","messageId":"254","endLine":80,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":185,"column":25,"nodeType":"274","endLine":185,"endColumn":41},{"ruleId":"251","severity":1,"message":"252","line":10,"column":10,"nodeType":"253","messageId":"254","endLine":10,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":21,"column":6,"nodeType":"269","endLine":21,"endColumn":8,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":36,"column":40,"nodeType":"278","messageId":"279","endLine":36,"endColumn":42},{"ruleId":"251","severity":1,"message":"280","line":7,"column":23,"nodeType":"253","messageId":"254","endLine":7,"endColumn":34},{"ruleId":"251","severity":1,"message":"281","line":13,"column":10,"nodeType":"253","messageId":"254","endLine":13,"endColumn":20},{"ruleId":"267","severity":1,"message":"282","line":32,"column":6,"nodeType":"269","endLine":32,"endColumn":8,"suggestions":"283"},{"ruleId":"267","severity":1,"message":"284","line":54,"column":6,"nodeType":"269","endLine":54,"endColumn":23,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":175,"column":13,"nodeType":"274","endLine":175,"endColumn":80},{"ruleId":"286","severity":1,"message":"287","line":183,"column":13,"nodeType":"274","endLine":183,"endColumn":80},{"ruleId":"251","severity":1,"message":"288","line":23,"column":9,"nodeType":"253","messageId":"254","endLine":23,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":137,"column":42,"nodeType":"278","messageId":"279","endLine":137,"endColumn":44},{"ruleId":"272","severity":1,"message":"273","line":154,"column":21,"nodeType":"274","endLine":154,"endColumn":52},{"ruleId":"267","severity":1,"message":"289","line":19,"column":6,"nodeType":"269","endLine":19,"endColumn":24,"suggestions":"290"},{"ruleId":"251","severity":1,"message":"252","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":16,"column":6,"nodeType":"269","endLine":16,"endColumn":8,"suggestions":"291"},{"ruleId":"276","severity":1,"message":"277","line":28,"column":38,"nodeType":"278","messageId":"279","endLine":28,"endColumn":40},{"ruleId":"267","severity":1,"message":"268","line":13,"column":6,"nodeType":"269","endLine":13,"endColumn":8,"suggestions":"292"},{"ruleId":"251","severity":1,"message":"293","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":16},{"ruleId":"251","severity":1,"message":"294","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":14},{"ruleId":"251","severity":1,"message":"255","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"295","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":15},{"ruleId":"251","severity":1,"message":"294","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":14},{"ruleId":"251","severity":1,"message":"296","line":18,"column":3,"nodeType":"253","messageId":"254","endLine":18,"endColumn":13},{"ruleId":"251","severity":1,"message":"297","line":19,"column":3,"nodeType":"253","messageId":"254","endLine":19,"endColumn":11},{"ruleId":"251","severity":1,"message":"298","line":24,"column":3,"nodeType":"253","messageId":"254","endLine":24,"endColumn":16},{"ruleId":"251","severity":1,"message":"299","line":34,"column":8,"nodeType":"253","messageId":"254","endLine":34,"endColumn":13},{"ruleId":"251","severity":1,"message":"288","line":40,"column":9,"nodeType":"253","messageId":"254","endLine":40,"endColumn":17},{"ruleId":"251","severity":1,"message":"300","line":41,"column":11,"nodeType":"253","messageId":"254","endLine":41,"endColumn":16},{"ruleId":"251","severity":1,"message":"301","line":42,"column":10,"nodeType":"253","messageId":"254","endLine":42,"endColumn":14},{"ruleId":"251","severity":1,"message":"302","line":46,"column":10,"nodeType":"253","messageId":"254","endLine":46,"endColumn":20},{"ruleId":"251","severity":1,"message":"303","line":48,"column":10,"nodeType":"253","messageId":"254","endLine":48,"endColumn":22},{"ruleId":"251","severity":1,"message":"304","line":49,"column":10,"nodeType":"253","messageId":"254","endLine":49,"endColumn":19},{"ruleId":"251","severity":1,"message":"305","line":50,"column":10,"nodeType":"253","messageId":"254","endLine":50,"endColumn":16},{"ruleId":"251","severity":1,"message":"306","line":50,"column":18,"nodeType":"253","messageId":"254","endLine":50,"endColumn":26},{"ruleId":"267","severity":1,"message":"307","line":74,"column":8,"nodeType":"253","endLine":74,"endColumn":12},{"ruleId":"267","severity":1,"message":"308","line":74,"column":8,"nodeType":"253","endLine":74,"endColumn":12,"suggestions":"309"},{"ruleId":"251","severity":1,"message":"310","line":81,"column":10,"nodeType":"253","messageId":"254","endLine":81,"endColumn":12},{"ruleId":"251","severity":1,"message":"311","line":81,"column":14,"nodeType":"253","messageId":"254","endLine":81,"endColumn":19},{"ruleId":"251","severity":1,"message":"312","line":92,"column":10,"nodeType":"253","messageId":"254","endLine":92,"endColumn":14},{"ruleId":"251","severity":1,"message":"313","line":93,"column":10,"nodeType":"253","messageId":"254","endLine":93,"endColumn":19},{"ruleId":"251","severity":1,"message":"314","line":94,"column":10,"nodeType":"253","messageId":"254","endLine":94,"endColumn":17},{"ruleId":"251","severity":1,"message":"315","line":94,"column":19,"nodeType":"253","messageId":"254","endLine":94,"endColumn":29},{"ruleId":"267","severity":1,"message":"282","line":98,"column":6,"nodeType":"269","endLine":98,"endColumn":8,"suggestions":"316"},{"ruleId":"251","severity":1,"message":"317","line":119,"column":11,"nodeType":"253","messageId":"254","endLine":119,"endColumn":23},{"ruleId":"251","severity":1,"message":"318","line":119,"column":25,"nodeType":"253","messageId":"254","endLine":119,"endColumn":38},{"ruleId":"251","severity":1,"message":"319","line":119,"column":40,"nodeType":"253","messageId":"254","endLine":119,"endColumn":52},{"ruleId":"251","severity":1,"message":"320","line":121,"column":9,"nodeType":"253","messageId":"254","endLine":121,"endColumn":27},{"ruleId":"251","severity":1,"message":"321","line":129,"column":9,"nodeType":"253","messageId":"254","endLine":129,"endColumn":26},{"ruleId":"251","severity":1,"message":"322","line":133,"column":10,"nodeType":"253","messageId":"254","endLine":133,"endColumn":11},{"ruleId":"251","severity":1,"message":"323","line":133,"column":13,"nodeType":"253","messageId":"254","endLine":133,"endColumn":19},{"ruleId":"251","severity":1,"message":"324","line":135,"column":9,"nodeType":"253","messageId":"254","endLine":135,"endColumn":12},{"ruleId":"251","severity":1,"message":"325","line":158,"column":12,"nodeType":"253","messageId":"254","endLine":158,"endColumn":22},{"ruleId":"251","severity":1,"message":"326","line":162,"column":12,"nodeType":"253","messageId":"254","endLine":162,"endColumn":26},{"ruleId":"327","severity":1,"message":"328","line":240,"column":18,"nodeType":"329","messageId":"330","endLine":240,"endColumn":20},{"ruleId":"327","severity":1,"message":"328","line":240,"column":56,"nodeType":"329","messageId":"330","endLine":240,"endColumn":58},{"ruleId":"276","severity":1,"message":"277","line":376,"column":42,"nodeType":"278","messageId":"279","endLine":376,"endColumn":44},{"ruleId":"272","severity":1,"message":"273","line":396,"column":23,"nodeType":"274","endLine":396,"endColumn":68},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'dispatch' is assigned a value but never used.","'SideMenutoggle' is defined but never used.","'LoginPage' is defined but never used.","'UserContext' is defined but never used.","'Box' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["331"],"'changePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["332"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useSelector' is defined but never used.","'useCookies' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setCook'. Either include them or remove the dependency array.",["334"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'navigate' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'repeat'. Either include it or remove the dependency array.",["335"],["336"],["337"],"'Avatar' is defined but never used.","'Header' is defined but never used.","'Comment' is defined but never used.","'currentSub' is defined but never used.","'subSlice' is defined but never used.","'myVoteComment' is defined but never used.","'Input' is defined but never used.","'state' is assigned a value but never used.","'file' is assigned a value but never used.","'post_title' is assigned a value but never used.","'post_imgpath' is assigned a value but never used.","'post_link' is assigned a value but never used.","'sub_id' is assigned a value but never used.","'setSubID' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["338"],"'cp' is assigned a value but never used.","'setCP' is assigned a value but never used.","'post' is assigned a value but never used.","'edit_post' is assigned a value but never used.","'isValid' is assigned a value but never used.","'SetIsValid' is assigned a value but never used.",["339"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'onPostTitleHandler' is assigned a value but never used.","'onPostLinkHandler' is assigned a value but never used.","'t' is assigned a value but never used.","'setTab' is assigned a value but never used.","'Tab' is assigned a value but never used.","'PostChange' is defined but never used.","'editPostChange' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"340","fix":"341"},{"desc":"340","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"340","fix":"349"},{"desc":"340","fix":"350"},{"desc":"351","fix":"352"},{"desc":"343","fix":"353"},"Update the dependencies array to be: [dispatch]",{"range":"354","text":"355"},{"range":"356","text":"355"},"Update the dependencies array to be: [handleClickOutside]",{"range":"357","text":"358"},"Update the dependencies array to be: [cookie.userName, dispatch, setCook]",{"range":"359","text":"360"},"Update the dependencies array to be: [props.visibility, repeat]",{"range":"361","text":"362"},{"range":"363","text":"355"},{"range":"364","text":"355"},"Update the dependencies array to be: [func]",{"range":"365","text":"366"},{"range":"367","text":"358"},[2607,2609],"[dispatch]",[605,607],[1129,1131],"[handleClickOutside]",[1803,1820],"[cookie.userName, dispatch, setCook]",[483,501],"[props.visibility, repeat]",[582,584],[467,469],[2271,2275],"[func]",[2956,2958]]