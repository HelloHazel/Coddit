[{"C:\\projects\\Portfolio\\client\\src\\index.js":"1","C:\\projects\\Portfolio\\client\\src\\App.js":"2","C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js":"3","C:\\projects\\Reddit-Clone\\client\\src\\index.js":"4","C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js":"5","C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js":"6","C:\\projects\\Reddit-Clone\\client\\src\\App.js":"7","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"8","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js":"9","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"10","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js":"11","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js":"12","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js":"13","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js":"14","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js":"15","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js":"16","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js":"17","C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js":"18","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js":"19","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js":"20","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js":"21","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js":"22","C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js":"23","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js":"24","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js":"25","C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js":"26","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js":"27","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js":"28","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js":"29","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js":"30","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js":"31","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js":"32"},{"size":882,"mtime":1672560996292,"results":"33","hashOfConfig":"34"},{"size":910,"mtime":1673547089326,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1670225087029,"results":"36","hashOfConfig":"34"},{"size":1091,"mtime":1676104777077,"results":"37","hashOfConfig":"38"},{"size":8095,"mtime":1676120776710,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1670225087029,"results":"40","hashOfConfig":"38"},{"size":1025,"mtime":1674888052455,"results":"41","hashOfConfig":"38"},{"size":1647,"mtime":1676377185980,"results":"42","hashOfConfig":"38"},{"size":2420,"mtime":1676392779295,"results":"43","hashOfConfig":"38"},{"size":2223,"mtime":1671368945984,"results":"44","hashOfConfig":"38"},{"size":7569,"mtime":1675183675090,"results":"45","hashOfConfig":"38"},{"size":1601,"mtime":1676393044733,"results":"46","hashOfConfig":"38"},{"size":5941,"mtime":1676377985713,"results":"47","hashOfConfig":"38"},{"size":5720,"mtime":1676391928323,"results":"48","hashOfConfig":"38"},{"size":117,"mtime":1674465689290,"results":"49","hashOfConfig":"38"},{"size":6153,"mtime":1676376434303,"results":"50","hashOfConfig":"38"},{"size":1264,"mtime":1676375784924,"results":"51","hashOfConfig":"38"},{"size":775,"mtime":1673542934879,"results":"52","hashOfConfig":"53"},{"size":360,"mtime":1673966772064,"results":"54","hashOfConfig":"38"},{"size":230,"mtime":1673355038470,"results":"55","hashOfConfig":"38"},{"size":1363,"mtime":1672568355181,"results":"56","hashOfConfig":"53"},{"size":1107,"mtime":1673706807618,"results":"57","hashOfConfig":"53"},{"size":107,"mtime":1673957030096,"results":"58","hashOfConfig":"38"},{"size":300,"mtime":1673966778713,"results":"59","hashOfConfig":"38"},{"size":265,"mtime":1673966784225,"results":"60","hashOfConfig":"38"},{"size":125,"mtime":1673958965193,"results":"61","hashOfConfig":"53"},{"size":1857,"mtime":1676377033144,"results":"62","hashOfConfig":"38"},{"size":1010,"mtime":1674405616541,"results":"63","hashOfConfig":"53"},{"size":20576,"mtime":1682674064749,"results":"64","hashOfConfig":"38"},{"size":125,"mtime":1674750837100,"results":"65","hashOfConfig":"38"},{"size":414,"mtime":1674835794248,"results":"66","hashOfConfig":"53"},{"size":2254,"mtime":1676393072319,"results":"67","hashOfConfig":"38"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"109w8of",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"r2ewpv",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},"18acrre",{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\Portfolio\\client\\src\\index.js",[],[],[],"C:\\projects\\Portfolio\\client\\src\\App.js",["171"],[],"C:\\projects\\Portfolio\\client\\src\\reportWebVitals.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\index.js",["172"],[],"C:\\projects\\Reddit-Clone\\client\\src\\store\\store.js",["173"],[],"C:\\projects\\Reddit-Clone\\client\\src\\reportWebVitals.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\App.js",["174"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["175"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LandingPage\\MainPage.js",["176"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["177","178"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\CreatePost.js",["179","180","181","182","183","184","185","186","187","188"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Sidemenu.js",["189","190","191"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModal.js",["192","193","194","195","196","197"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Header.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\AuthModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Post.js",["198","199","200"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostForm.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Dropdown.js",["201"],[],"import React from \"react\";\r\n\r\nconst Dropdown = (props) => {\r\n  const [visibilityAnimation, setVisibilityAnimation] = React.useState(false);\r\n  const [repeat, setRepeat] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (props.visibility) {\r\n      clearTimeout(repeat);\r\n      setRepeat(null);\r\n      setVisibilityAnimation(true);\r\n    } else {\r\n      setRepeat(\r\n        setTimeout(() => {\r\n          setVisibilityAnimation(false);\r\n        }, 400)\r\n      );\r\n    }\r\n  }, [props.visibility]);\r\n\r\n  return (\r\n    <article\r\n      className={`components-dropdown ${\r\n        props.visibility ? \"slide-fade-in-dropdown\" : \"slide-fade-out-dropdown\"\r\n      }`}\r\n    >\r\n      {visibilityAnimation && props.children}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Button.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\LoginPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\ExampleSide.js",["202","203","204"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostContent.js",["205"],[],"import React, { useEffect } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPost } from \"../../../store/store\";\r\n\r\nexport default function PostContent(props) {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.postSlice.list);\r\n  useEffect(() => {\r\n    dispatch(getPost(-1));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"px-6 bg-reddit_gray\">\r\n      {post_list.map((item, index) => (\r\n        <div\r\n          className=\"border border-reddit_border bg-white p-2 rounded-md\"\r\n          key={index}\r\n        >\r\n          <h5 className=\"text-reddit_text-darker text-sm mb-1\">\r\n            Posted by u/{item.user_name} <TimeAgo datetime={item.post_date} />\r\n          </h5>\r\n          <h2 className=\"text-xl mb-3\">포스트 제목</h2>\r\n          <div className=\"text-sm leading-6\">\r\n            <ReactMarkdown plugins={[gfm]} children={item.post_content} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n",[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\UserContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Textarea.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\Input.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\views\\UtilPage\\PostFormModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Comment.js",["206","207"],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\CommentModal.js",["208"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport Comment from \"./Comment\";\r\n\r\nexport default function CommentModal(props) {\r\n  const [comment, setComment] = useState({});\r\n  const visibleClass = props.open ? \"block\" : \"hidden\";\r\n\r\n  function close() {\r\n    setComment({});\r\n    props.onClickOut();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n    >\r\n      <div className=\"block overflow-scroll\">\r\n        <ClickOutHandler onClickOut={() => close()}>\r\n          <div className=\"border my-4 border-reddit_dark-brightest w-3/4 lg:w-1/2 bg-reddit_dark-brighter text-reddit_text self-center p-4 mx-auto rounded-md\">\r\n            <div className=\"\">\r\n              <Comment comment={comment} id={props.id} />\r\n            </div>\r\n          </div>\r\n        </ClickOutHandler>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPage.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],[],"import { ChatBubbleLeftIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport {\r\n  React,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport Header from \"../views/UtilPage/Header\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  asyncComment,\r\n  commentSlice,\r\n  currentSub,\r\n  subSlice,\r\n  getPost,\r\n  getCurrentPost,\r\n  asyncMyVotePost,\r\n  asyncMyVoteComment,\r\n  myVoteComment,\r\n} from \"../../store/store\";\r\nimport Button from \"./Button\";\r\nimport {\r\n  HandThumbDownIcon,\r\n  HandThumbUpIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport Avatar from \"../../img/avatar.png\";\r\nimport axios from \"axios\";\r\nimport PostPageModalContext from \"./PostPageModalContext\";\r\nimport Input from \"../views/UtilPage/Input\";\r\nimport Textarea from \"../views/UtilPage/Textarea\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nexport default function PostPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const [post_title, setPostTitle] = useState(\"\");\r\n  const [post_content, setPostContent] = useState(\"\");\r\n  const [post_imgpath, setPostImgPath] = useState(\"\");\r\n  const [post_link, setPostLink] = useState(\"\");\r\n  const [sub_id, setSubID] = useState(-1);\r\n\r\n  const modalContext = useContext(PostPageModalContext);\r\n\r\n  const visibleClass = modalContext.showPost !== false ? \"block\" : \"hidden\";\r\n\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  const sub = useSelector((state) => state.currentSub.currentSub);\r\n\r\n  const user = useSelector((state) => state.userSlice.userName);\r\n\r\n  const myvotepost = useSelector((state) => state.myVotePost.list);\r\n\r\n  const myvotecomment = useSelector((state) => state.myVoteComment.list);\r\n\r\n  const currentPost = useSelector((state) => state.currentPost.list);\r\n\r\n  const useDidMountEffect = (func, deps) => {\r\n    const didMount = useRef(false);\r\n\r\n    useEffect(() => {\r\n      if (didMount.current) func();\r\n      else didMount.current = true;\r\n    }, deps);\r\n  };\r\n\r\n  useDidMountEffect(() => {\r\n    modalContext.setState(currentPost[0]);\r\n  }, [currentPost]);\r\n\r\n  const [cp, setCP] = useState(currentPost);\r\n\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const comment_list = useSelector((state) => state.commentSlice.list);\r\n  const [edit_comment, setEditComment] = useState(\"\");\r\n\r\n  const [post, setPost] = useState(\"\");\r\n  const [edit_post, setEditPost] = useState(\"\");\r\n  const [isValid, SetIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n  }, []);\r\n\r\n  const refOne = useRef(null);\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (!refOne.current.contains(e.target)) {\r\n      setIsEdit(false);\r\n      modalContext.setShowPost(false);\r\n    }\r\n  };\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const blob = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = () => {\r\n      const base64data = reader.result;\r\n\r\n      setFile(base64data);\r\n      setPostImgPath(base64data);\r\n    };\r\n  }, []);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const onPostTitleHandler = (event) => {\r\n    setPostTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostContentHandler = (event) => {\r\n    setPostContent(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostLinkHandler = (event) => {\r\n    setPostLink(event.currentTarget.value);\r\n  };\r\n\r\n  const [t, setTab] = useState(0);\r\n\r\n  const Tab = [\r\n    {\r\n      title: \"Post\",\r\n      index: 0,\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      index: 1,\r\n    },\r\n    {\r\n      title: \"Link\",\r\n      index: 2,\r\n    },\r\n  ];\r\n\r\n  function commentChange(e) {\r\n    setComment(e.target.value);\r\n  }\r\n\r\n  function editCommentChange(e) {\r\n    setEditComment(e.target.value);\r\n  }\r\n\r\n  function PostChange(e) {\r\n    setPost(e.target.value);\r\n  }\r\n\r\n  function editPostChange(e) {\r\n    setEditPost(e.target.value);\r\n  }\r\n\r\n  function deletePost() {\r\n    let body = {\r\n      post_id: modalContext.state.post_id,\r\n    };\r\n\r\n    axios.post(\"/api/delete\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        // window.location.replace(\"/\");\r\n        dispatch(getPost(sub));\r\n        modalContext.setShowPost(!modalContext.showPost);\r\n      }\r\n    });\r\n  }\r\n\r\n  function writeComment(e) {\r\n    let body = {\r\n      comment_content: comment,\r\n      post_id: modalContext.state.post_id,\r\n      user_name: user,\r\n    };\r\n\r\n    axios.post(\"/api/writecomment\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(asyncComment(modalContext.state.post_id));\r\n      }\r\n    });\r\n  }\r\n\r\n  function EditContent() {\r\n    let body = {\r\n      post_content: post_content,\r\n      post_id: modalContext.state.post_id,\r\n    };\r\n\r\n    axios.post(\"/api/editcontent\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        setIsEdit(false);\r\n        dispatch(getPost(sub)).then(() => {\r\n          dispatch(getCurrentPost(modalContext.state.post_id)).then(() => {\r\n            // modalContext.setState(currentPost[0]);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function editComment(comment, comment_id) {\r\n    let body = {\r\n      comment_content: comment,\r\n      comment_id: comment_id,\r\n      post_id: modalContext.state.post_id,\r\n    };\r\n\r\n    axios.post(\"/api/editcomment\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(asyncComment(modalContext.state.post_id));\r\n      }\r\n    });\r\n  }\r\n\r\n  function deleteComment(comment_id) {\r\n    let body = {\r\n      comment_id: comment_id,\r\n      post_id: modalContext.state.post_id,\r\n    };\r\n\r\n    axios.post(\"/api/deletecomment\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(asyncComment(modalContext.state.post_id));\r\n      }\r\n    });\r\n  }\r\n\r\n  function votePost(vote_kind, post_id, comment_id, username) {\r\n    if (username == \"\" || username == null || username == undefined) {\r\n      return;\r\n    }\r\n\r\n    let body = {\r\n      vote_kind: vote_kind,\r\n      post_id: post_id,\r\n      comment_id: comment_id,\r\n      username: username,\r\n    };\r\n\r\n    axios.post(\"/api/vote\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(asyncMyVotePost(user));\r\n        dispatch(asyncMyVoteComment(user));\r\n        dispatch(asyncComment(modalContext.state.post_id));\r\n        dispatch(getPost(sub)).then(() => {\r\n          dispatch(getCurrentPost(modalContext.state.post_id)).then(() => {});\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const isVote = (post_id, user_name) => {\r\n    if (user_name === \"\" || user_name === null || user_name === undefined) {\r\n      return 0;\r\n    } else {\r\n      if (\r\n        myvotepost === null ||\r\n        myvotepost === undefined ||\r\n        myvotepost.length <= 0\r\n      ) {\r\n        return 0;\r\n      } else {\r\n        for (var i = 0; i < myvotepost.length; i++) {\r\n          if (myvotepost[i].post_id === post_id) {\r\n            return myvotepost[i].vote_kind;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const isVoteComment = (comment_id, user_name) => {\r\n    if (user_name === \"\" || user_name === null || user_name === undefined) {\r\n      return 0;\r\n    } else {\r\n      if (\r\n        myvotecomment === null ||\r\n        myvotecomment === undefined ||\r\n        myvotecomment.length <= 0\r\n      ) {\r\n        return 0;\r\n      } else {\r\n        for (var i = 0; i < myvotecomment.length; i++) {\r\n          if (myvotecomment[i].comment_id === comment_id) {\r\n            return myvotecomment[i].vote_kind;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex-auto \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n    >\r\n      <div className=\"2xl:w-3/4 2xl:ml-36\">\r\n        <nav className=\"bg-black text-white h-10 mx-20 \">\r\n          <button className=\"flex mt-2 mx-10 float-right\">\r\n            <XMarkIcon className=\"h-7 \" /> Close\r\n          </button>\r\n        </nav>\r\n        <div\r\n          className=\"bg-reddit_gray h-screen mx-20 px-4 py-3 overflow-auto\"\r\n          ref={refOne}\r\n        >\r\n          <div className=\"  w-5/6 m-auto p-6 bg-white flex flex-row\">\r\n            {isVote(modalContext.state.post_id, user) === 0 ? (\r\n              <div className=\"my-3 \">\r\n                <HandThumbUpIcon\r\n                  className=\"h-4\"\r\n                  onClick={() => {\r\n                    votePost(1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n                <p>{modalContext.state.vote_sum}</p>\r\n                <HandThumbDownIcon\r\n                  className=\"h-4\"\r\n                  onClick={() => {\r\n                    votePost(-1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : isVote(modalContext.state.post_id, user) === 1 ? (\r\n              <div className=\"my-3 \">\r\n                <HandThumbUpIcon\r\n                  className=\"h-4 fill-orange-400 \"\r\n                  onClick={() => {\r\n                    votePost(1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n                <p>{modalContext.state.vote_sum}</p>\r\n                <HandThumbDownIcon\r\n                  className=\"h-4\"\r\n                  onClick={() => {\r\n                    votePost(-1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"my-3 \">\r\n                <HandThumbUpIcon\r\n                  className=\"h-4 \"\r\n                  onClick={() => {\r\n                    votePost(1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n                <p>{modalContext.state.vote_sum}</p>\r\n                <HandThumbDownIcon\r\n                  className=\"h-4 fill-blue-300\"\r\n                  onClick={() => {\r\n                    votePost(-1, modalContext.state.post_id, null, user);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"mx-3 w-full\">\r\n              <div className=\"border border-gray-300 bg-white p-2 pb-0 my-3 rounded-md\">\r\n                {/* <PostContent /> */}\r\n                <div className=\" flex mb-1\">\r\n                  {sub_list.map((sub, j) => {\r\n                    if (modalContext.state.sub_id === sub.sub_id) {\r\n                      return (\r\n                        <h5 className=\"font-bold\" key={j}>\r\n                          {sub.sub_name}\r\n                        </h5>\r\n                      );\r\n                    }\r\n                  })}\r\n                  <p className=\"text-reddit_text text-sm \">\r\n                    • Posted by u/ {modalContext.state.user_name}\r\n                    <TimeAgo datetime={modalContext.state.post_date} />\r\n                  </p>\r\n                </div>\r\n                {isEdit === false && (\r\n                  <div className=\"text-sm leading-6 text-gray-700 \">\r\n                    <h2 className=\"text-xl mb-3\">\r\n                      {modalContext.state.post_title}\r\n                    </h2>\r\n                    {modalContext.state.post_imagepath !== null && (\r\n                      <img src={modalContext.state.post_imagepath}></img>\r\n                    )}\r\n                    <p>{modalContext.state.post_content}</p>\r\n                    {modalContext.state.post_link !== null && (\r\n                      <a href={modalContext.state.post_link}>\r\n                        {modalContext.state.post_link}\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {isEdit === true && (\r\n                  <section>\r\n                    <Textarea\r\n                      className={\"w-full mb-3\"}\r\n                      placeholder={modalContext.state.post_content}\r\n                      rows={10}\r\n                      value={post_content}\r\n                      onChange={onPostContentHandler}\r\n                    />\r\n\r\n                    <div className={\"text-right\"}>\r\n                      <Button\r\n                        className={\"px-4 py-2 mr-3\"}\r\n                        onClick={() => setIsEdit(false)}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={() => EditContent()}>Save</Button>\r\n                    </div>\r\n                  </section>\r\n                )}\r\n                <nav className=\"flex\">\r\n                  <div className=\"text-center float-left text-sm text-gray-400 my-3.5\tflex space-x-5 font-bold\">\r\n                    <button className=\"flex\">\r\n                      <ChatBubbleLeftIcon className=\"text-gray-400 w-5 h-5 mr-1\" />\r\n                      Comments\r\n                    </button>\r\n                    {/* user login 시 해당 버튼 보이도록 함 */}{\" \"}\r\n                    {user === modalContext.state.user_name && (\r\n                      <button onClick={() => setIsEdit(true)}>Edit</button>\r\n                    )}\r\n                    {user === modalContext.state.user_name && (\r\n                      <button onClick={() => deletePost()}>Delete</button>\r\n                    )}\r\n                  </div>\r\n                </nav>\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  {user && <div>Comment as {user}</div>}\r\n                  <form className=\"border border-gray-300 \">\r\n                    <textarea\r\n                      className=\"w-full \"\r\n                      rows={5}\r\n                      placeholder=\"   What are your thoughts?\"\r\n                      onChange={commentChange}\r\n                      value={comment}\r\n                    ></textarea>\r\n                  </form>\r\n                  <div className=\"text-right\">\r\n                    <Button\r\n                      className=\"h-5 mt-2 bg-gray-500 text-gray-300\"\r\n                      onClick={(e) => {\r\n                        setComment(\"\");\r\n                        writeComment();\r\n                      }}\r\n                    >\r\n                      Comment\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {comment_list.map((comment, i) => {\r\n                function changeE() {\r\n                  dispatch(commentSlice.actions.changeEdit(comment, i));\r\n                }\r\n\r\n                return (\r\n                  <div className=\"py-3 space-y-2\">\r\n                    <div className=\"flex space-x-2\">\r\n                      {\" \"}\r\n                      <div className=\" w-7 h-7 bg-gray-400 rounded-full\">\r\n                        <img\r\n                          src={Avatar}\r\n                          alt=\"\"\r\n                          style={{ filter: \"invert(100%)\" }}\r\n                          className=\"block\"\r\n                        />\r\n                      </div>\r\n                      <p key={i}>{comment.user_name}</p>\r\n                      <TimeAgo\r\n                        className=\"text-gray-400\"\r\n                        datetime={comment.comment_date}\r\n                      />\r\n                    </div>\r\n                    {comment.edit === false ? (\r\n                      <p key={i}>{comment.comment_content}</p>\r\n                    ) : (\r\n                      <div className=\"border border-gray-300 \">\r\n                        <textarea\r\n                          className=\"w-full \"\r\n                          rows={5}\r\n                          placeholder=\"   What are your thoughts?\"\r\n                          onChange={editCommentChange}\r\n                          value={edit_comment}\r\n                        ></textarea>\r\n                        <div className=\"bg-gray-100 text-right\">\r\n                          <Button\r\n                            className=\"h-5 m-2  text-reddit_blue\"\r\n                            onClick={() =>\r\n                              dispatch(\r\n                                commentSlice.actions.changeEdit(comment, i)\r\n                              )\r\n                            }\r\n                          >\r\n                            Cancle\r\n                          </Button>\r\n                          <Button\r\n                            className=\"h-5 m-2 bg-reddit_blue text-gray-300\"\r\n                            // disabled={isValid ? false : true}\r\n                            onClick={() =>\r\n                              editComment(edit_comment, comment.comment_id)\r\n                            }\r\n                          >\r\n                            Save Edits\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex space-x-2  text-gray-400\">\r\n                      {isVoteComment(comment.comment_id, user) === 0 ? (\r\n                        <div className=\"my-3 flex space-x-1 \">\r\n                          <HandThumbUpIcon\r\n                            className=\"h-4 mt-1\"\r\n                            onClick={() => {\r\n                              votePost(1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                          <p>{comment.vote_sum}</p>\r\n                          <HandThumbDownIcon\r\n                            className=\"h-4 mt-1\"\r\n                            onClick={() => {\r\n                              votePost(-1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      ) : isVoteComment(comment.comment_id, user) === 1 ? (\r\n                        <div className=\"  my-3 flex space-x-1\">\r\n                          <HandThumbUpIcon\r\n                            className=\"h-4 mt-1 fill-orange-400 \"\r\n                            onClick={() => {\r\n                              votePost(1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                          <p>{comment.vote_sum}</p>\r\n                          <HandThumbDownIcon\r\n                            className=\"h-4 mt-1\"\r\n                            onClick={() => {\r\n                              votePost(-1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"my-3 flex space-x-1 \">\r\n                          <HandThumbUpIcon\r\n                            className=\"h-4 mt-1 \"\r\n                            onClick={() => {\r\n                              votePost(1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                          <p>{comment.vote_sum}</p>\r\n                          <HandThumbDownIcon\r\n                            className=\"h-4 mt-1 fill-blue-300\"\r\n                            onClick={() => {\r\n                              votePost(-1, null, comment.comment_id, user);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      <div className=\"space-x-2 mt-3\">\r\n                        {user === comment.user_name && (\r\n                          <button\r\n                            onClick={() => {\r\n                              setEditComment(comment.comment_content);\r\n                              changeE();\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                        )}\r\n                        {user === comment.user_name && (\r\n                          <button\r\n                            onClick={() => {\r\n                              deleteComment(comment.comment_id);\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\PostPageModalContext.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\Modal.js",[],[],"C:\\projects\\Reddit-Clone\\client\\src\\components\\Layout\\SideMenutoggle.js",[],[],{"ruleId":"246","severity":1,"message":"247","line":3,"column":25,"nodeType":"248","messageId":"249","endLine":3,"endColumn":29},{"ruleId":"246","severity":1,"message":"250","line":11,"column":10,"nodeType":"248","messageId":"249","endLine":11,"endColumn":19},{"ruleId":"246","severity":1,"message":"251","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":3,"column":25,"nodeType":"248","messageId":"249","endLine":3,"endColumn":29},{"ruleId":"246","severity":1,"message":"252","line":8,"column":9,"nodeType":"248","messageId":"249","endLine":8,"endColumn":17},{"ruleId":"246","severity":1,"message":"253","line":11,"column":8,"nodeType":"248","messageId":"249","endLine":11,"endColumn":22},{"ruleId":"246","severity":1,"message":"254","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"252","line":9,"column":9,"nodeType":"248","messageId":"249","endLine":9,"endColumn":17},{"ruleId":"246","severity":1,"message":"255","line":12,"column":8,"nodeType":"248","messageId":"249","endLine":12,"endColumn":19},{"ruleId":"246","severity":1,"message":"256","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":13},{"ruleId":"246","severity":1,"message":"257","line":18,"column":10,"nodeType":"248","messageId":"249","endLine":18,"endColumn":15},{"ruleId":"246","severity":1,"message":"258","line":18,"column":17,"nodeType":"248","messageId":"249","endLine":18,"endColumn":25},{"ruleId":"246","severity":1,"message":"259","line":23,"column":10,"nodeType":"248","messageId":"249","endLine":23,"endColumn":14},{"ruleId":"246","severity":1,"message":"260","line":23,"column":16,"nodeType":"248","messageId":"249","endLine":23,"endColumn":23},{"ruleId":"246","severity":1,"message":"261","line":29,"column":17,"nodeType":"248","messageId":"249","endLine":29,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":78,"column":6,"nodeType":"264","endLine":78,"endColumn":8,"suggestions":"265"},{"ruleId":"246","severity":1,"message":"266","line":80,"column":9,"nodeType":"248","messageId":"249","endLine":80,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":185,"column":25,"nodeType":"269","endLine":185,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":10,"column":10,"nodeType":"248","messageId":"249","endLine":10,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":21,"column":6,"nodeType":"264","endLine":21,"endColumn":8,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":36,"column":40,"nodeType":"273","messageId":"274","endLine":36,"endColumn":42},{"ruleId":"246","severity":1,"message":"275","line":7,"column":23,"nodeType":"248","messageId":"249","endLine":7,"endColumn":34},{"ruleId":"246","severity":1,"message":"276","line":13,"column":10,"nodeType":"248","messageId":"249","endLine":13,"endColumn":20},{"ruleId":"262","severity":1,"message":"277","line":32,"column":6,"nodeType":"264","endLine":32,"endColumn":8,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"279","line":54,"column":6,"nodeType":"264","endLine":54,"endColumn":23,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":175,"column":13,"nodeType":"269","endLine":175,"endColumn":80},{"ruleId":"281","severity":1,"message":"282","line":183,"column":13,"nodeType":"269","endLine":183,"endColumn":80},{"ruleId":"246","severity":1,"message":"283","line":23,"column":9,"nodeType":"248","messageId":"249","endLine":23,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":137,"column":42,"nodeType":"273","messageId":"274","endLine":137,"endColumn":44},{"ruleId":"267","severity":1,"message":"268","line":154,"column":21,"nodeType":"269","endLine":154,"endColumn":52},{"ruleId":"262","severity":1,"message":"284","line":19,"column":6,"nodeType":"264","endLine":19,"endColumn":24,"suggestions":"285"},{"ruleId":"246","severity":1,"message":"247","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":16,"column":6,"nodeType":"264","endLine":16,"endColumn":8,"suggestions":"286"},{"ruleId":"271","severity":1,"message":"272","line":28,"column":38,"nodeType":"273","messageId":"274","endLine":28,"endColumn":40},{"ruleId":"262","severity":1,"message":"263","line":13,"column":6,"nodeType":"264","endLine":13,"endColumn":8,"suggestions":"287"},{"ruleId":"246","severity":1,"message":"288","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":16},{"ruleId":"246","severity":1,"message":"289","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":14},{"ruleId":"246","severity":1,"message":"250","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"290","line":10,"column":8,"nodeType":"248","messageId":"249","endLine":10,"endColumn":15},{"ruleId":"246","severity":1,"message":"289","line":12,"column":8,"nodeType":"248","messageId":"249","endLine":12,"endColumn":14},{"ruleId":"246","severity":1,"message":"291","line":18,"column":3,"nodeType":"248","messageId":"249","endLine":18,"endColumn":13},{"ruleId":"246","severity":1,"message":"292","line":19,"column":3,"nodeType":"248","messageId":"249","endLine":19,"endColumn":11},{"ruleId":"246","severity":1,"message":"293","line":24,"column":3,"nodeType":"248","messageId":"249","endLine":24,"endColumn":16},{"ruleId":"246","severity":1,"message":"294","line":34,"column":8,"nodeType":"248","messageId":"249","endLine":34,"endColumn":13},{"ruleId":"246","severity":1,"message":"283","line":40,"column":9,"nodeType":"248","messageId":"249","endLine":40,"endColumn":17},{"ruleId":"246","severity":1,"message":"295","line":41,"column":11,"nodeType":"248","messageId":"249","endLine":41,"endColumn":16},{"ruleId":"246","severity":1,"message":"296","line":42,"column":10,"nodeType":"248","messageId":"249","endLine":42,"endColumn":14},{"ruleId":"246","severity":1,"message":"297","line":46,"column":10,"nodeType":"248","messageId":"249","endLine":46,"endColumn":20},{"ruleId":"246","severity":1,"message":"298","line":48,"column":10,"nodeType":"248","messageId":"249","endLine":48,"endColumn":22},{"ruleId":"246","severity":1,"message":"299","line":49,"column":10,"nodeType":"248","messageId":"249","endLine":49,"endColumn":19},{"ruleId":"246","severity":1,"message":"300","line":50,"column":10,"nodeType":"248","messageId":"249","endLine":50,"endColumn":16},{"ruleId":"246","severity":1,"message":"301","line":50,"column":18,"nodeType":"248","messageId":"249","endLine":50,"endColumn":26},{"ruleId":"262","severity":1,"message":"302","line":74,"column":8,"nodeType":"248","endLine":74,"endColumn":12},{"ruleId":"262","severity":1,"message":"303","line":74,"column":8,"nodeType":"248","endLine":74,"endColumn":12,"suggestions":"304"},{"ruleId":"246","severity":1,"message":"305","line":81,"column":10,"nodeType":"248","messageId":"249","endLine":81,"endColumn":12},{"ruleId":"246","severity":1,"message":"306","line":81,"column":14,"nodeType":"248","messageId":"249","endLine":81,"endColumn":19},{"ruleId":"246","severity":1,"message":"307","line":88,"column":10,"nodeType":"248","messageId":"249","endLine":88,"endColumn":14},{"ruleId":"246","severity":1,"message":"308","line":89,"column":10,"nodeType":"248","messageId":"249","endLine":89,"endColumn":19},{"ruleId":"246","severity":1,"message":"309","line":90,"column":10,"nodeType":"248","messageId":"249","endLine":90,"endColumn":17},{"ruleId":"246","severity":1,"message":"310","line":90,"column":19,"nodeType":"248","messageId":"249","endLine":90,"endColumn":29},{"ruleId":"262","severity":1,"message":"277","line":94,"column":6,"nodeType":"264","endLine":94,"endColumn":8,"suggestions":"311"},{"ruleId":"246","severity":1,"message":"312","line":115,"column":11,"nodeType":"248","messageId":"249","endLine":115,"endColumn":23},{"ruleId":"246","severity":1,"message":"313","line":115,"column":25,"nodeType":"248","messageId":"249","endLine":115,"endColumn":38},{"ruleId":"246","severity":1,"message":"314","line":115,"column":40,"nodeType":"248","messageId":"249","endLine":115,"endColumn":52},{"ruleId":"246","severity":1,"message":"315","line":117,"column":9,"nodeType":"248","messageId":"249","endLine":117,"endColumn":27},{"ruleId":"246","severity":1,"message":"316","line":125,"column":9,"nodeType":"248","messageId":"249","endLine":125,"endColumn":26},{"ruleId":"246","severity":1,"message":"317","line":129,"column":10,"nodeType":"248","messageId":"249","endLine":129,"endColumn":11},{"ruleId":"246","severity":1,"message":"318","line":129,"column":13,"nodeType":"248","messageId":"249","endLine":129,"endColumn":19},{"ruleId":"246","severity":1,"message":"319","line":131,"column":9,"nodeType":"248","messageId":"249","endLine":131,"endColumn":12},{"ruleId":"246","severity":1,"message":"320","line":154,"column":12,"nodeType":"248","messageId":"249","endLine":154,"endColumn":22},{"ruleId":"246","severity":1,"message":"321","line":158,"column":12,"nodeType":"248","messageId":"249","endLine":158,"endColumn":26},{"ruleId":"322","severity":1,"message":"323","line":236,"column":18,"nodeType":"324","messageId":"325","endLine":236,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":236,"column":56,"nodeType":"324","messageId":"325","endLine":236,"endColumn":58},{"ruleId":"271","severity":1,"message":"272","line":372,"column":42,"nodeType":"273","messageId":"274","endLine":372,"endColumn":44},{"ruleId":"267","severity":1,"message":"268","line":392,"column":23,"nodeType":"269","endLine":392,"endColumn":68},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'dispatch' is assigned a value but never used.","'SideMenutoggle' is defined but never used.","'LoginPage' is defined but never used.","'UserContext' is defined but never used.","'Box' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'changePost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["327"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useSelector' is defined but never used.","'useCookies' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setCook'. Either include them or remove the dependency array.",["329"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'navigate' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'repeat'. Either include it or remove the dependency array.",["330"],["331"],["332"],"'Avatar' is defined but never used.","'Header' is defined but never used.","'Comment' is defined but never used.","'currentSub' is defined but never used.","'subSlice' is defined but never used.","'myVoteComment' is defined but never used.","'Input' is defined but never used.","'state' is assigned a value but never used.","'file' is assigned a value but never used.","'post_title' is assigned a value but never used.","'post_imgpath' is assigned a value but never used.","'post_link' is assigned a value but never used.","'sub_id' is assigned a value but never used.","'setSubID' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["333"],"'cp' is assigned a value but never used.","'setCP' is assigned a value but never used.","'post' is assigned a value but never used.","'edit_post' is assigned a value but never used.","'isValid' is assigned a value but never used.","'SetIsValid' is assigned a value but never used.",["334"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'onPostTitleHandler' is assigned a value but never used.","'onPostLinkHandler' is assigned a value but never used.","'t' is assigned a value but never used.","'setTab' is assigned a value but never used.","'Tab' is assigned a value but never used.","'PostChange' is defined but never used.","'editPostChange' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"335","fix":"344"},{"desc":"335","fix":"345"},{"desc":"346","fix":"347"},{"desc":"338","fix":"348"},"Update the dependencies array to be: [dispatch]",{"range":"349","text":"350"},{"range":"351","text":"350"},"Update the dependencies array to be: [handleClickOutside]",{"range":"352","text":"353"},"Update the dependencies array to be: [cookie.userName, dispatch, setCook]",{"range":"354","text":"355"},"Update the dependencies array to be: [props.visibility, repeat]",{"range":"356","text":"357"},{"range":"358","text":"350"},{"range":"359","text":"350"},"Update the dependencies array to be: [func]",{"range":"360","text":"361"},{"range":"362","text":"353"},[2607,2609],"[dispatch]",[605,607],[1129,1131],"[handleClickOutside]",[1803,1820],"[cookie.userName, dispatch, setCook]",[483,501],"[props.visibility, repeat]",[582,584],[467,469],[2271,2275],"[func]",[2848,2850]]