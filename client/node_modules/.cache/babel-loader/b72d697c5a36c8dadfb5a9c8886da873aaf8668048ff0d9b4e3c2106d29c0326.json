{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\n//   return response.data.data;\n// });\n\nconst asyncCommunity = createAsyncThunk({\n  name: \"community\",\n  initialState: []\n});\n\n// const topic = createSlice({\n\n// });\n\n// let stock = createSlice({\n//   name: \"stock\",\n//   initialState: [10, 11, 12],\n// });\n\nexport default configureStore({\n  reducer: {},\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","getDefaultMiddleware","asyncCommunity","name","initialState","reducer","middleware","serializableCheck"],"sources":["C:/projects/Portfolio/client/src/store/store.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\n\r\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\r\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\r\n//   return response.data.data;\r\n// });\r\n\r\nconst asyncCommunity = createAsyncThunk({\r\n  name: \"community\",\r\n  initialState: [],\r\n});\r\n\r\n// const topic = createSlice({\r\n\r\n// });\r\n\r\n// let stock = createSlice({\r\n//   name: \"stock\",\r\n//   initialState: [10, 11, 12],\r\n// });\r\n\r\nexport default configureStore({\r\n  reducer: {},\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,gBAAgB,EAChBC,WAAW,EACXC,oBAAoB,QACf,kBAAkB;;AAEzB;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGH,gBAAgB,CAAC;EACtCI,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAeN,cAAc,CAAC;EAC5BO,OAAO,EAAE,CAAC,CAAC;EACXC,UAAU,EAAGL,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBM,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}