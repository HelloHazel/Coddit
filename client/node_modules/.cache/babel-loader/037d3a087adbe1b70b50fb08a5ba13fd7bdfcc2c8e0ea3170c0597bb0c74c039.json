{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from \"react-clickout-handler\";\nimport UserContext from \"../../UserContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSlice } from \"../../../store/store\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const modalContext = useContext(AuthModalContext);\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n  // const user = useContext(UserContext);\n\n  const [cookies, setCookie, removeCookie] = useCookies([\"userName\"]);\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    //패스워드 bcrypt 요청\n    // e.preventDefault();\n    let body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        //이메일 존재시 디자인 수정\n        alert(\"이미 이메일 존재\");\n      } else if (res.data.result === \"alreadyName\") {\n        //이름 중복시 디자인 수정\n        alert(\"이미 이름 존재\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/login\"); // 회원가입시 로그인 모달로 전환\n      }\n\n      console.log(res.data.result);\n    });\n  }\n  function login(e) {\n    // e.preventDefault();\n    let body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        //로그인 실패 시 디자인 수정\n        alert(\"잘못된 정보 입력\");\n      } else if (res.data.result === body.name) {\n        // user.setUser(res.data.result);\n        modalContext.setShow(false);\n        dispatch(userSlice.actions.setUser(res.data.result));\n        setCookie(\"userName\", res.data.result);\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is a modal! Click outside to close it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this)\n  // <div\n  //   className={\n  //     \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\n  //   }\n  //   style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\n  // >\n  //   <ClickOutHandler onClickOut={() => console.log(\"ABC\")}>\n  //     <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\n  //       {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\n  //       {modalType === \"register\" && (\n  //         <h1 className=\"text-2xl mb-5\">Sign Up</h1>\n  //       )}\n  //       <p className=\"text-reddit_text text-sm mb-3\">\n  //         By continuing, you agree are setting up a Reddit account and agree\n  //         to our\n  //         <a\n  //           href=\"https://www.redditinc.com/policies/user-agreement\"\n  //           className=\"text-reddit_blue mx-1\"\n  //         >\n  //           User Agreement\n  //         </a>\n  //         and\n  //         <a\n  //           href=\"https://www.reddit.com/policies/privacy-policy\"\n  //           className=\"text-reddit_blue mx-1\"\n  //         >\n  //           Privacy Policy\n  //         </a>\n  //         .\n  //       </p>\n  //       {modalType === \"register\" && (\n  //         <Input\n  //           type=\"email\"\n  //           placeholder=\"E-mail\"\n  //           className=\"mb-2 w-full text-sm\"\n  //           value={email}\n  //           onChange={onEmailHandler}\n  //         />\n  //       )}\n  //       <Input\n  //         type=\"text\"\n  //         placeholder=\"username\"\n  //         className=\"mb-2 w-full text-sm\"\n  //         value={username}\n  //         onChange={onUsernameHandler}\n  //       />\n  //       <Input\n  //         type=\"password\"\n  //         placeholder=\"password\"\n  //         className=\"mb-2 w-full text-sm\"\n  //         value={password}\n  //         onChange={onPasswordHandler}\n  //       />{\" \"}\n  //       {modalType === \"register\" && (\n  //         <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\n  //           Sign Up\n  //         </Button>\n  //       )}{\" \"}\n  //       {modalType === \"login\" && (\n  //         <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\n  //           Log In\n  //         </Button>\n  //       )}\n  //       {modalType === \"login\" && (\n  //         <div className=\"text-sm\">\n  //           New to Reddit?{\" \"}\n  //           <button\n  //             className=\"text-reddit_blue\"\n  //             onClick={() => modalContext.setShow(\"register\")}\n  //           >\n  //             SIGN UP\n  //           </button>\n  //         </div>\n  //       )}\n  //       {modalType === \"register\" && (\n  //         <div className=\"text-sm\">\n  //           Already have an account?{\" \"}\n  //           <button\n  //             className=\"text-reddit_blue\"\n  //             onClick={() => modalContext.setShow(\"login\")}\n  //           >\n  //             Log In\n  //           </button>\n  //         </div>\n  //       )}\n  //     </div>\n  //   </ClickOutHandler>\n  // </div>\n  ;\n}\n_s(AuthModal, \"ocABM46vxffHLcdCVHIkYOFQSxg=\", false, function () {\n  return [useNavigate, useDispatch, useCookies];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useContext","Button","Input","axios","useNavigate","AuthModalContext","ClickOutHandler","UserContext","useDispatch","useSelector","userSlice","useCookies","AuthModal","navigate","dispatch","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","show","cookies","setCookie","removeCookie","visibleClass","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","e","body","name","post","then","res","data","result","alert","console","log","login","setShow","actions","setUser"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"../../../store/store\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n  // const user = useContext(UserContext);\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userName\"]);\r\n\r\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\"); // 회원가입시 로그인 모달로 전환\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === body.name) {\r\n        // user.setUser(res.data.result);\r\n        modalContext.setShow(false);\r\n        dispatch(userSlice.actions.setUser(res.data.result));\r\n        setCookie(\"userName\", res.data.result);\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ClickOutHandler>\r\n      <div>This is a modal! Click outside to close it.</div>\r\n    </ClickOutHandler>\r\n    // <div\r\n    //   className={\r\n    //     \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n    //   }\r\n    //   style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    // >\r\n    //   <ClickOutHandler onClickOut={() => console.log(\"ABC\")}>\r\n    //     <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\r\n    //       {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n    //       {modalType === \"register\" && (\r\n    //         <h1 className=\"text-2xl mb-5\">Sign Up</h1>\r\n    //       )}\r\n    //       <p className=\"text-reddit_text text-sm mb-3\">\r\n    //         By continuing, you agree are setting up a Reddit account and agree\r\n    //         to our\r\n    //         <a\r\n    //           href=\"https://www.redditinc.com/policies/user-agreement\"\r\n    //           className=\"text-reddit_blue mx-1\"\r\n    //         >\r\n    //           User Agreement\r\n    //         </a>\r\n    //         and\r\n    //         <a\r\n    //           href=\"https://www.reddit.com/policies/privacy-policy\"\r\n    //           className=\"text-reddit_blue mx-1\"\r\n    //         >\r\n    //           Privacy Policy\r\n    //         </a>\r\n    //         .\r\n    //       </p>\r\n    //       {modalType === \"register\" && (\r\n    //         <Input\r\n    //           type=\"email\"\r\n    //           placeholder=\"E-mail\"\r\n    //           className=\"mb-2 w-full text-sm\"\r\n    //           value={email}\r\n    //           onChange={onEmailHandler}\r\n    //         />\r\n    //       )}\r\n    //       <Input\r\n    //         type=\"text\"\r\n    //         placeholder=\"username\"\r\n    //         className=\"mb-2 w-full text-sm\"\r\n    //         value={username}\r\n    //         onChange={onUsernameHandler}\r\n    //       />\r\n    //       <Input\r\n    //         type=\"password\"\r\n    //         placeholder=\"password\"\r\n    //         className=\"mb-2 w-full text-sm\"\r\n    //         value={password}\r\n    //         onChange={onPasswordHandler}\r\n    //       />{\" \"}\r\n    //       {modalType === \"register\" && (\r\n    //         <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n    //           Sign Up\r\n    //         </Button>\r\n    //       )}{\" \"}\r\n    //       {modalType === \"login\" && (\r\n    //         <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n    //           Log In\r\n    //         </Button>\r\n    //       )}\r\n    //       {modalType === \"login\" && (\r\n    //         <div className=\"text-sm\">\r\n    //           New to Reddit?{\" \"}\r\n    //           <button\r\n    //             className=\"text-reddit_blue\"\r\n    //             onClick={() => modalContext.setShow(\"register\")}\r\n    //           >\r\n    //             SIGN UP\r\n    //           </button>\r\n    //         </div>\r\n    //       )}\r\n    //       {modalType === \"register\" && (\r\n    //         <div className=\"text-sm\">\r\n    //           Already have an account?{\" \"}\r\n    //           <button\r\n    //             className=\"text-reddit_blue\"\r\n    //             onClick={() => modalContext.setShow(\"login\")}\r\n    //           >\r\n    //             Log In\r\n    //           </button>\r\n    //         </div>\r\n    //       )}\r\n    //     </div>\r\n    //   </ClickOutHandler>\r\n    // </div>\r\n  );\r\n}\r\n"],"mappings":"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,CAAC,UAAU,EAAEe,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC;QACtC9B,QAAQ,CAAC,GAAG,CAAC;MACf;MAEAgC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC;EACJ;EAEA,oBACE,QAAC,eAAe;IAAA,uBACd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAsD;IAAA;IAAA;IAAA;EAAA;EAExD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC,GArKuB9B,SAAS;EAAA,QACdR,WAAW,EACXI,WAAW,EAYeG,UAAU;AAAA;AAAA,KAd/BC,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}