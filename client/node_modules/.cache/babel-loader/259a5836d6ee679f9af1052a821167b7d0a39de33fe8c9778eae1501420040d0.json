{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from \"react-clickout-handler\";\nimport UserContext from \"../../UserContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSlice } from \"../../../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal() {\n  _s();\n  const navigate = useNavigate();\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const modalContext = useContext(AuthModalContext);\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n  // const user = useContext(UserContext);\n  const user = useSelector(state => state.userSlice.userName);\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    //패스워드 bcrypt 요청\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        //이메일 존재시 디자인 수정\n        alert(\"이미 이메일 존재\");\n      } else if (res.data.result === \"alreadyName\") {\n        //이름 중복시 디자인 수정\n        alert(\"이미 이름 존재\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/login\"); // 회원가입시 로그인 모달로\n      }\n\n      console.log(res.data.result);\n    });\n  }\n  function login(e) {\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        //로그인 실패 시 디자인 수정\n        alert(\"잘못된 정보 입력\");\n      } else if (res.data.result === body.name) {\n        // user.setUser(res.data.result);\n        modalContext.setShow(false);\n        userSlice.actions.setUser(res.data.result);\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass,\n    style: {\n      backgroundColor: \"rgba(0,0,0,.6)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => modalContext.setShow(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\",\n        children: [modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-reddit_text text-sm mb-3\",\n          children: [\"By continuing, you agree are setting up a Reddit account and agree to our\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.redditinc.com/policies/user-agreement\",\n            className: \"text-reddit_blue mx-1\",\n            children: \"User Agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \"and\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.reddit.com/policies/privacy-policy\",\n            className: \"text-reddit_blue mx-1\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"E-mail\",\n          className: \"mb-2 w-full text-sm\",\n          value: email,\n          onChange: onEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"username\",\n          className: \"mb-2 w-full text-sm\",\n          value: username,\n          onChange: onUsernameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"password\",\n          className: \"mb-2 w-full text-sm\",\n          value: password,\n          onChange: onPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \" \", modalType === \"register\" && /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          className: \"w-full mb-3\",\n          onClick: e => register(),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), \" \", modalType === \"login\" && /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          className: \"w-full mb-3\",\n          onClick: e => login(),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: [\"New to Reddit?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-reddit_blue\",\n            onClick: () => modalContext.setShow(\"register\"),\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-reddit_blue\",\n            onClick: () => modalContext.setShow(\"login\"),\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthModal, \"lcsXKtUZuWGNXaA54YjzKkXMPv8=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useContext","Button","Input","axios","useNavigate","AuthModalContext","ClickOutHandler","UserContext","useDispatch","useSelector","userSlice","AuthModal","navigate","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","show","user","state","userName","visibleClass","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","e","console","log","body","name","post","then","res","data","result","alert","login","setShow","actions","setUser","backgroundColor"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"../../../store/store\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n  // const user = useContext(UserContext);\r\n  const user = useSelector((state) => state.userSlice.userName);\r\n\r\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\"); // 회원가입시 로그인 모달로\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === body.name) {\r\n        // user.setUser(res.data.result);\r\n        modalContext.setShow(false);\r\n        userSlice.actions.setUser(res.data.result);\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    >\r\n      <ClickOutHandler onClickOut={() => modalContext.setShow(false)}>\r\n        <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\r\n          {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n          {modalType === \"register\" && (\r\n            <h1 className=\"text-2xl mb-5\">Sign Up</h1>\r\n          )}\r\n          <p className=\"text-reddit_text text-sm mb-3\">\r\n            By continuing, you agree are setting up a Reddit account and agree\r\n            to our\r\n            <a\r\n              href=\"https://www.redditinc.com/policies/user-agreement\"\r\n              className=\"text-reddit_blue mx-1\"\r\n            >\r\n              User Agreement\r\n            </a>\r\n            and\r\n            <a\r\n              href=\"https://www.reddit.com/policies/privacy-policy\"\r\n              className=\"text-reddit_blue mx-1\"\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n            .\r\n          </p>\r\n          {modalType === \"register\" && (\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"E-mail\"\r\n              className=\"mb-2 w-full text-sm\"\r\n              value={email}\r\n              onChange={onEmailHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={username}\r\n            onChange={onUsernameHandler}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={password}\r\n            onChange={onPasswordHandler}\r\n          />{\" \"}\r\n          {modalType === \"register\" && (\r\n            <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n              Sign Up\r\n            </Button>\r\n          )}{\" \"}\r\n          {modalType === \"login\" && (\r\n            <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n              Log In\r\n            </Button>\r\n          )}\r\n          {modalType === \"login\" && (\r\n            <div className=\"text-sm\">\r\n              New to Reddit?{\" \"}\r\n              <button\r\n                className=\"text-reddit_blue\"\r\n                onClick={() => modalContext.setShow(\"register\")}\r\n              >\r\n                SIGN UP\r\n              </button>\r\n            </div>\r\n          )}\r\n          {modalType === \"register\" && (\r\n            <div className=\"text-sm\">\r\n              Already have an account?{\" \"}\r\n              <button\r\n                className=\"text-reddit_blue\"\r\n                onClick={() => modalContext.setShow(\"login\")}\r\n              >\r\n                Log In\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ClickOutHandler>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}