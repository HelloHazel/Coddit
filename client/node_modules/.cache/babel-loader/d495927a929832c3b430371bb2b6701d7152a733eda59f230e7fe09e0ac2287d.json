{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst User = createSlice({\n  name: \"usersReducer\",\n  initialState: \"\",\n  reducers: {\n    getUsersStart: (state, action) => {\n      state.loading = true;\n    },\n    getUsersSuccess: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    getUsersRemove: (state, action) => {\n      state.loading = false;\n      state.data = [];\n    }\n  },\n  extraReducers: {}\n});\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\n  const resp = await axios.get(\"/api/topic\");\n  return resp.data;\n});\nconst topicSlice = createSlice({\n  name: \"topicSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(asyncTopic.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(\"fulfilled\");\n    });\n\n    builder.addCase(asyncTopic.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\n  const resp = await axios.get(\"/api/sub\");\n  return resp.data;\n});\nconst subSlice = createSlice({\n  name: \"subSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(asyncSub.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(\"fulfilled\");\n    });\n\n    builder.addCase(asyncSub.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async subid => {\n  const resp = await axios.get(\"/api/post\", {\n    params: {\n      subId: subid\n    }\n  });\n  return resp.data;\n});\nconst postSlice = createSlice({\n  name: \"postSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(getPost.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(getPost.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(action.payload);\n    });\n\n    builder.addCase(getPost.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nexport default configureStore({\n  reducer: {\n    topicSlice: topicSlice.reducer,\n    subSlice: subSlice.reducer,\n    postSlice: postSlice.reducer\n  }\n});\nexport { asyncTopic, asyncSub, getPost, postSlice };","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","axios","User","name","initialState","reducers","getUsersStart","state","action","loading","getUsersSuccess","data","payload","getUsersRemove","extraReducers","asyncTopic","resp","get","topicSlice","list","builder","addCase","pending","fulfilled","rejected","asyncSub","subSlice","getPost","subid","params","subId","postSlice","reducer"],"sources":["C:/projects/Reddit-Clone/client/src/store/store.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst User = createSlice({\r\n  name: \"usersReducer\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    getUsersStart: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    getUsersSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.data = action.payload;\r\n    },\r\n    getUsersRemove: (state, action) => {\r\n      state.loading = false;\r\n      state.data = [];\r\n    },\r\n  },\r\n  extraReducers: {},\r\n});\r\n\r\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\r\n  const resp = await axios.get(\"/api/topic\");\r\n  return resp.data;\r\n});\r\n\r\nconst topicSlice = createSlice({\r\n  name: \"topicSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncTopic.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncTopic.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\r\n  const resp = await axios.get(\"/api/sub\");\r\n  return resp.data;\r\n});\r\n\r\nconst subSlice = createSlice({\r\n  name: \"subSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncSub.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncSub.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async (subid) => {\r\n  const resp = await axios.get(\"/api/post\", { params: { subId: subid } });\r\n  return resp.data;\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    topicSlice: topicSlice.reducer,\r\n    subSlice: subSlice.reducer,\r\n    postSlice: postSlice.reducer,\r\n  },\r\n});\r\n\r\nexport { asyncTopic, asyncSub, getPost, postSlice };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}