{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\n//   return response.data.data;\n// });\n\nlet body = {\n  name: \"abc\",\n  password: \"1234\"\n};\nconst asyncCommunity = createAsyncThunk(\"communitySlice/asyncCommunity\", async () => {\n  // const resp = await axios.post(\"/api/login\", body);\n  const resp = await fetch('h');\n  const data = await resp.json();\n  return data.value;\n});\nconst communitySlice = createSlice({\n  name: \"communitySlice\",\n  initialState: {\n    value: 0,\n    status: \"Welcome\"\n  },\n  reducers: {\n    getCommunity: (state, action) => {\n      state.value = state.value + action.payload;\n    }\n  }\n});\n\n// const communitySlice = createSlice({\n//   name: \"communitySlice\",\n//   initialState: {\n//     value: \"\",\n//     status: \"Welcome\",\n//   },\n//   extraReducers: (builder) => {\n//     builder.addCase(asyncCommunity.pending, (state, action) => {\n//       state.status = \"Loading\";\n//     });\n//     builder.addCase(asyncCommunity.fulfilled, (state, action) => {\n//       state.value = action.payload;\n//       state.status = \"complete\";\n//     });\n//     builder.addCase(asyncCommunity.rejected, (state, action) => {\n//       state.status = \"fail\";\n//     });\n//   },\n// });\n\n// const topic = createSlice({\n\n// });\n\n// let stock = createSlice({\n//   name: \"stock\",\n//   initialState: [10, 11, 12],\n// });\n\nexport default configureStore({\n  reducer: {\n    communitySlice: communitySlice.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","getDefaultMiddleware","axios","body","name","password","asyncCommunity","resp","fetch","data","json","value","communitySlice","initialState","status","reducers","getCommunity","state","action","payload","reducer"],"sources":["C:/projects/Portfolio/client/src/store/store.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\r\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\r\n//   return response.data.data;\r\n// });\r\n\r\nlet body = {\r\n  name: \"abc\",\r\n  password: \"1234\",\r\n};\r\n\r\nconst asyncCommunity = createAsyncThunk(\r\n  \"communitySlice/asyncCommunity\",\r\n  async () => {\r\n    // const resp = await axios.post(\"/api/login\", body);\r\n    const resp = await fetch('h')\r\n    const data = await resp.json();\r\n    return data.value;\r\n  }\r\n);\r\n\r\nconst communitySlice = createSlice({\r\n  name: \"communitySlice\",\r\n  initialState: {\r\n    value: 0,\r\n    status: \"Welcome\",\r\n  },\r\n  reducers: {\r\n    getCommunity: (state, action) => {\r\n      state.value = state.value + action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// const communitySlice = createSlice({\r\n//   name: \"communitySlice\",\r\n//   initialState: {\r\n//     value: \"\",\r\n//     status: \"Welcome\",\r\n//   },\r\n//   extraReducers: (builder) => {\r\n//     builder.addCase(asyncCommunity.pending, (state, action) => {\r\n//       state.status = \"Loading\";\r\n//     });\r\n//     builder.addCase(asyncCommunity.fulfilled, (state, action) => {\r\n//       state.value = action.payload;\r\n//       state.status = \"complete\";\r\n//     });\r\n//     builder.addCase(asyncCommunity.rejected, (state, action) => {\r\n//       state.status = \"fail\";\r\n//     });\r\n//   },\r\n// });\r\n\r\n// const topic = createSlice({\r\n\r\n// });\r\n\r\n// let stock = createSlice({\r\n//   name: \"stock\",\r\n//   initialState: [10, 11, 12],\r\n// });\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    communitySlice: communitySlice.reducer,\r\n  },\r\n});\r\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,gBAAgB,EAChBC,WAAW,EACXC,oBAAoB,QACf,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG;EACTC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,cAAc,GAAGP,gBAAgB,CACrC,+BAA+B,EAC/B,YAAY;EACV;EACA,MAAMQ,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG,CAAC;EAC7B,MAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;EAC9B,OAAOD,IAAI,CAACE,KAAK;AACnB,CAAC,CACF;AAED,MAAMC,cAAc,GAAGZ,WAAW,CAAC;EACjCI,IAAI,EAAE,gBAAgB;EACtBS,YAAY,EAAE;IACZF,KAAK,EAAE,CAAC;IACRG,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC5C;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAerB,cAAc,CAAC;EAC5BsB,OAAO,EAAE;IACPR,cAAc,EAAEA,cAAc,CAACQ;EACjC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}