{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\n//   return response.data.data;\n// });\n\nlet body = {\n  name: Name,\n  password: Password\n};\nconst asyncCommunity = createAsyncThunk(\"communitySlice/asyncCommunity\", async () => {\n  const resp = await axios.post(\"/api/login\", body);\n});\n\n// const topic = createSlice({\n\n// });\n\n// let stock = createSlice({\n//   name: \"stock\",\n//   initialState: [10, 11, 12],\n// });\n\nexport default configureStore({\n  reducer: {},\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","getDefaultMiddleware","axios","body","name","Name","password","Password","asyncCommunity","resp","post","reducer","middleware","serializableCheck"],"sources":["C:/projects/Portfolio/client/src/store/store.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// export const comm = createAsyncThunk(\"auth/login\", async (loginData) => {\r\n//   const response = await axios.post(`${API_URL}/v1/login`, loginData);\r\n//   return response.data.data;\r\n// });\r\n\r\nlet body = {\r\n  name: Name,\r\n  password: Password,\r\n};\r\n\r\nconst asyncCommunity = createAsyncThunk(\r\n  \"communitySlice/asyncCommunity\",\r\n  async () => {\r\n    const resp = await axios.post(\"/api/login\", body);\r\n  }\r\n);\r\n\r\n// const topic = createSlice({\r\n\r\n// });\r\n\r\n// let stock = createSlice({\r\n//   name: \"stock\",\r\n//   initialState: [10, 11, 12],\r\n// });\r\n\r\nexport default configureStore({\r\n  reducer: {},\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,gBAAgB,EAChBC,WAAW,EACXC,oBAAoB,QACf,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG;EACTC,IAAI,EAAEC,IAAI;EACVC,QAAQ,EAAEC;AACZ,CAAC;AAED,MAAMC,cAAc,GAAGT,gBAAgB,CACrC,+BAA+B,EAC/B,YAAY;EACV,MAAMU,IAAI,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,YAAY,EAAEP,IAAI,CAAC;AACnD,CAAC,CACF;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAeL,cAAc,CAAC;EAC5Ba,OAAO,EAAE,CAAC,CAAC;EACXC,UAAU,EAAGX,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBY,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}