{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from \"react-clickout-handler\";\nimport UserContext from \"../../UserContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSlice, asyncMyVoteComment, asyncMyVotePost } from \"../../../store/store\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const modalContext = useContext(AuthModalContext);\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n  // const user = useContext(UserContext);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n  }, []);\n  const refOne = useRef(null);\n  const handleClickOutside = e => {\n    if (!refOne.current.contains(e.target)) {\n      modalContext.setShow(false);\n    }\n  };\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    //패스워드 bcrypt 요청\n    // e.preventDefault();\n    let body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        //이메일 존재시 디자인 수정\n        alert(\"이미 이메일 존재\");\n      } else if (res.data.result === \"alreadyName\") {\n        //이름 중복시 디자인 수정\n        alert(\"이미 이름 존재\");\n      } else if (res.data.result === \"ok\") {\n        modalContext.setShow(false);\n      }\n    });\n  }\n  function login(e) {\n    // e.preventDefault();\n    let body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        //로그인 실패 시 디자인 수정\n        alert(\"잘못된 정보 입력\");\n      } else if (res.data.result === \"ok\") {\n        // user.setUser(res.data.result);\n        modalContext.setShow(false);\n        dispatch(userSlice.actions.setUser(username));\n        modalContext.setCook(\"userName\", username);\n        dispatch(asyncMyVotePost(username));\n        dispatch(asyncMyVoteComment);\n        navigate(\"/\");\n      }\n    });\n  }\n  function logincheck() {\n    let body = {\n      token: modalContext.cookie.userName\n    };\n    axios.post(\"api/logincheck\", body).then(res => {\n      if (res.data.result === \"ok\") {\n        dispatch(userSlice.actions.setUser(modalContext.cookie.userName));\n        dispatch(asyncMyVotePost(modalContext.cookie.userName));\n        modalContext.setCook(\"userName\", modalContext.cookie.userName);\n      }\n    });\n  }\n  useEffect(() => {\n    logincheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass,\n    style: {\n      backgroundColor: \"rgba(0,0,0,.6)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\",\n      ref: refOne,\n      children: [modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-5\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 35\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-reddit_text text-sm mb-3\",\n        children: [\"By continuing, you agree are setting up a Reddit account and agree to our\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.redditinc.com/policies/user-agreement\",\n          className: \"text-reddit_blue mx-1\",\n          children: \"User Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), \"and\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.reddit.com/policies/privacy-policy\",\n          className: \"text-reddit_blue mx-1\",\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        className: \"mb-2 w-full text-sm\",\n        value: email,\n        onChange: onEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"username\",\n        className: \"mb-2 w-full text-sm\",\n        value: username,\n        onChange: onUsernameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"password\",\n        className: \"mb-2 w-full text-sm\",\n        value: password,\n        onChange: onPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), \" \", modalType === \"register\" && /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        className: \"w-full mb-3\",\n        onClick: e => register(),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), \" \", modalType === \"login\" && /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        className: \"w-full mb-3\",\n        onClick: e => login(),\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"New to Reddit?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-reddit_blue\",\n          onClick: () => modalContext.setShow(\"register\"),\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-reddit_blue\",\n          onClick: () => modalContext.setShow(\"login\"),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthModal, \"ivqT6oD8FaaXLP3VDAgfM6hk29Y=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useContext","useRef","useEffect","Button","Input","axios","useNavigate","AuthModalContext","ClickOutHandler","UserContext","useDispatch","useSelector","userSlice","asyncMyVoteComment","asyncMyVotePost","useCookies","AuthModal","navigate","dispatch","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","show","document","addEventListener","handleClickOutside","refOne","e","current","contains","target","setShow","visibleClass","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","body","name","post","then","res","data","result","alert","login","actions","setUser","setCook","logincheck","token","cookie","userName","backgroundColor"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  userSlice,\r\n  asyncMyVoteComment,\r\n  asyncMyVotePost,\r\n} from \"../../../store/store\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n  // const user = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n  }, []);\r\n\r\n  const refOne = useRef(null);\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (!refOne.current.contains(e.target)) {\r\n      modalContext.setShow(false);\r\n    }\r\n  };\r\n\r\n  const visibleClass = modalContext.show !== false ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        modalContext.setShow(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === \"ok\") {\r\n        // user.setUser(res.data.result);\r\n        modalContext.setShow(false);\r\n        dispatch(userSlice.actions.setUser(username));\r\n        modalContext.setCook(\"userName\", username);\r\n        dispatch(asyncMyVotePost(username));\r\n        dispatch(asyncMyVoteComment)\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function logincheck() {\r\n    let body = {\r\n      token: modalContext.cookie.userName,\r\n    };\r\n    axios.post(\"api/logincheck\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        dispatch(userSlice.actions.setUser(modalContext.cookie.userName));\r\n        dispatch(asyncMyVotePost(modalContext.cookie.userName));\r\n        modalContext.setCook(\"userName\", modalContext.cookie.userName);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    logincheck();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    >\r\n      <div\r\n        className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\"\r\n        ref={refOne}\r\n      >\r\n        {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n        {modalType === \"register\" && <h1 className=\"text-2xl mb-5\">Sign Up</h1>}\r\n        <p className=\"text-reddit_text text-sm mb-3\">\r\n          By continuing, you agree are setting up a Reddit account and agree to\r\n          our\r\n          <a\r\n            href=\"https://www.redditinc.com/policies/user-agreement\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            User Agreement\r\n          </a>\r\n          and\r\n          <a\r\n            href=\"https://www.reddit.com/policies/privacy-policy\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            Privacy Policy\r\n          </a>\r\n          .\r\n        </p>\r\n        {modalType === \"register\" && (\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={email}\r\n            onChange={onEmailHandler}\r\n          />\r\n        )}\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={username}\r\n          onChange={onUsernameHandler}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={password}\r\n          onChange={onPasswordHandler}\r\n        />{\" \"}\r\n        {modalType === \"register\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n            Sign Up\r\n          </Button>\r\n        )}{\" \"}\r\n        {modalType === \"login\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n            Log In\r\n          </Button>\r\n        )}\r\n        {modalType === \"login\" && (\r\n          <div className=\"text-sm\">\r\n            New to Reddit?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"register\")}\r\n            >\r\n              SIGN UP\r\n            </button>\r\n          </div>\r\n        )}\r\n        {modalType === \"register\" && (\r\n          <div className=\"text-sm\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"login\")}\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}