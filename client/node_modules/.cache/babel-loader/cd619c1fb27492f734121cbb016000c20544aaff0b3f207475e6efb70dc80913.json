{"ast":null,"code":"import _slicedToArray from\"C:/projects/Reddit-Clone/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import React,{useState}from\"react\";import{useDispatch}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginPage(){var navigate=useNavigate();var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),Name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),Password=_useState6[0],setPassword=_useState6[1];var onNameHandler=function onNameHandler(event){setName(event.currentTarget.value);};var onPasswordHandler=function onPasswordHandler(event){setPassword(event.currentTarget.value);};var onSubmitHandler=function onSubmitHandler(event){event.preventDefault();console.log(\"Name\",Name);console.log(\"Password\",Password);var body={name:Name,password:Password};// dispatch(loginUser(body));\naxios.post(\"/api/login\",body).then(function(res){if(res.data.result===\"loginError\"){//로그인 실패 시 디자인 수정\nalert(\"잘못된 정보 입력\");}else if(res.data.result===\"ok\"){navigate(\"/\");}console.log(res.data);});};return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",width:\"100%\",height:\"100vh\"},children:/*#__PURE__*/_jsxs(\"form\",{style:{display:\"flex\",flexDirection:\"column\"},onSubmit:onSubmitHandler,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"name\",value:Name,onChange:onNameHandler}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:Password,onChange:onPasswordHandler}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})]})});}","map":{"version":3,"names":["axios","React","useState","useDispatch","useNavigate","LoginPage","navigate","dispatch","Email","setEmail","Name","setName","Password","setPassword","onNameHandler","event","currentTarget","value","onPasswordHandler","onSubmitHandler","preventDefault","console","log","body","name","password","post","then","res","data","result","alert","display","justifyContent","alignItems","width","height","flexDirection"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/LoginPage/LoginPage.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LoginPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Name\", Name);\r\n    console.log(\"Password\", Password);\r\n\r\n    let body = {\r\n      name: Name,\r\n      password: Password,\r\n    };\r\n    // dispatch(loginUser(body));\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Name</label>\r\n        <input type=\"name\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"qHAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,wFAE/C,cAAe,SAASC,UAAS,EAAG,CAClC,GAAMC,SAAQ,CAAGF,WAAW,EAAE,CAC9B,GAAMG,SAAQ,CAAGJ,WAAW,EAAE,CAC9B,cAA0BD,QAAQ,CAAC,EAAE,CAAC,wCAA/BM,KAAK,eAAEC,QAAQ,eACtB,eAAwBP,QAAQ,CAAC,EAAE,CAAC,yCAA7BQ,IAAI,eAAEC,OAAO,eACpB,eAAgCT,QAAQ,CAAC,EAAE,CAAC,yCAArCU,QAAQ,eAAEC,WAAW,eAG5B,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,KAAK,CAAK,CAC/BJ,OAAO,CAACI,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC,CACpC,CAAC,CACD,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIH,KAAK,CAAK,CACnCF,WAAW,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC,CACxC,CAAC,CAED,GAAME,gBAAe,CAAG,QAAlBA,gBAAe,CAAIJ,KAAK,CAAK,CACjCA,KAAK,CAACK,cAAc,EAAE,CACtBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEZ,IAAI,CAAC,CACzBW,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEV,QAAQ,CAAC,CAEjC,GAAIW,KAAI,CAAG,CACTC,IAAI,CAAEd,IAAI,CACVe,QAAQ,CAAEb,QACZ,CAAC,CACD;AACAZ,KAAK,CAAC0B,IAAI,CAAC,YAAY,CAAEH,IAAI,CAAC,CAACI,IAAI,CAAC,SAACC,GAAG,CAAK,CAC3C,GAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,GAAK,YAAY,CAAE,CACpC;AACAC,KAAK,CAAC,WAAW,CAAC,CACpB,CAAC,IAAM,IAAIH,GAAG,CAACC,IAAI,CAACC,MAAM,GAAK,IAAI,CAAE,CACnCxB,QAAQ,CAAC,GAAG,CAAC,CACf,CAEAe,OAAO,CAACC,GAAG,CAACM,GAAG,CAACC,IAAI,CAAC,CACvB,CAAC,CAAC,CACJ,CAAC,CAED,mBACE,YACE,KAAK,CAAE,CACLG,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,OACV,CAAE,uBAEF,cACE,KAAK,CAAE,CAAEJ,OAAO,CAAE,MAAM,CAAEK,aAAa,CAAE,QAAS,CAAE,CACpD,QAAQ,CAAElB,eAAgB,wBAE1B,+BAAmB,cACnB,cAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAET,IAAK,CAAC,QAAQ,CAAEI,aAAc,EAAG,cAC3D,mCAAuB,cACvB,cAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAEF,QAAS,CAAC,QAAQ,CAAEM,iBAAkB,EAAG,cACvE,aAAM,cACN,iCAAsB,GACjB,EACH,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}