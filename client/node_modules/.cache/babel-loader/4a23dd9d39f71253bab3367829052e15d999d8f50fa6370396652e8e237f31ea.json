{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useContext } from \"react\";\n// import {\n//   Box,\n//   Stack,\n//   FormControl,\n//   FormErrorMessage,\n//   Input,\n//   Textarea,\n//   RadioGroup,\n//   Radio,\n//   Select,\n//   Button,\n//   Alert,\n//   AlertIcon,\n// } from \"@chakra-ui/react\";\n// import Header from \"./Header\";\n// import { useSelector } from \"react-redux\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ClickOutHandler from \"react-clickout-handler\";\n// import PostFormModalContext from \"./PostFormModalContext\";\n// import AuthModalContext from \"./AuthModalContext\";\n// import Input from \"../LoginPage/Input\";\n// import { Textarea } from \"@chakra-ui/react\";\n// import Button from \"../../Layout/Button\";\n\nexport default function CreatePost() {\n  _s();\n  const navigate = useNavigate();\n  const [post_title, setPostTitle] = useState(\"\");\n  const [post_content, setPostContent] = useState(\"\");\n  const [sub_id, setSubID] = useState(-1);\n  const modalContext = useContext(PostFormModalContext);\n  const authModalContext = useContext(AuthModalContext);\n  const visibleClass = modalContext.show ? \"block\" : \"hidden\";\n  const onPostTitleHandler = event => {\n    setPostTitle(event.currentTarget.value);\n  };\n  const onPostContentHandler = event => {\n    setPostContent(event.currentTarget.value);\n  };\n  const onSubIDHandler = event => {\n    setSubID(event.currentTarget.value);\n  };\n  function writePost(e) {\n    let body = {\n      post_title: post_title,\n      post_content: post_content,\n      sub_id: 1\n    };\n    axios.post(\"/api/write\", body).then(res => {\n      if (res.data.result === \"ok\") {\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass,\n      style: {\n        backgroundColor: \"rgba(0,0,0,.8)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n        onClickOut: () => {},\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" w-3/4 md:w-2/4 bg-reddit_dark p-5 self-center mx-auto rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl mb-5\",\n            children: \"Create a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: post_title,\n            type: \"text\",\n            placeholder: \"title\",\n            onChange: onPostTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            className: \"w-full mb-3\",\n            placeholder: \"text(optional)\",\n            rows: 10,\n            value: post_content,\n            onChange: onPostContentHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => modalContext.setShow(false),\n              className: \"px-4 py-2 mr-3\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: e => writePost(),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)\n  // <Box w=\"100%\" m=\"auto\" className=\" bg-reddit_gray\">\n  //   <Header />\n  //   <Box w={[\"100%\", \"90%\", \"80%\", \"70%\"]} m=\"auto\">\n  //     <form>\n  //       Create a post\n  //       <Stack spacing={3}>\n  //         <FormControl>\n  //           <RadioGroup>\n  //             <Stack direction=\"row\" spacing={3}>\n  //               <Radio value=\"text\">Post</Radio>\n  //               <Radio value=\"link\">Link</Radio>\n  //             </Stack>\n  //           </RadioGroup>\n  //         </FormControl>\n  //         <FormControl>\n  //           <Input\n  //             value={post_title}\n  //             type=\"text\"\n  //             placeholder=\"title\"\n  //             onChange={onPostTitleHandler}\n  //           />\n  //         </FormControl>\n  //         <FormControl>\n  //           <Textarea\n  //             placeholder=\"text(optional)\"\n  //             rows={10}\n  //             value={post_content}\n  //             onChange={onPostContentHandler}\n  //           />\n  //         </FormControl>\n  //         <Button type=\"submit\" onClick={(e) => writePost()}>\n  //           Submit\n  //         </Button>\n  //       </Stack>\n  //     </form>\n  //   </Box>\n  // </Box>\n  ;\n}\n_s(CreatePost, \"FD4U5MVzt64iMUPsRuskirjvL/U=\", true);\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["CreatePost","navigate","useNavigate","post_title","setPostTitle","useState","post_content","setPostContent","sub_id","setSubID","modalContext","useContext","PostFormModalContext","authModalContext","AuthModalContext","visibleClass","show","onPostTitleHandler","event","currentTarget","value","onPostContentHandler","onSubIDHandler","writePost","e","body","axios","post","then","res","data","result","console","log","backgroundColor","setShow"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/CreatePost.js"],"sourcesContent":["// import React, { useContext } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Stack,\r\n//   FormControl,\r\n//   FormErrorMessage,\r\n//   Input,\r\n//   Textarea,\r\n//   RadioGroup,\r\n//   Radio,\r\n//   Select,\r\n//   Button,\r\n//   Alert,\r\n//   AlertIcon,\r\n// } from \"@chakra-ui/react\";\r\n// import Header from \"./Header\";\r\n// import { useSelector } from \"react-redux\";\r\n// import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import ClickOutHandler from \"react-clickout-handler\";\r\n// import PostFormModalContext from \"./PostFormModalContext\";\r\n// import AuthModalContext from \"./AuthModalContext\";\r\n// import Input from \"../LoginPage/Input\";\r\n// import { Textarea } from \"@chakra-ui/react\";\r\n// import Button from \"../../Layout/Button\";\r\n\r\nexport default function CreatePost() {\r\n  const navigate = useNavigate();\r\n  const [post_title, setPostTitle] = useState(\"\");\r\n  const [post_content, setPostContent] = useState(\"\");\r\n  const [sub_id, setSubID] = useState(-1);\r\n\r\n  const modalContext = useContext(PostFormModalContext);\r\n  const authModalContext = useContext(AuthModalContext);\r\n\r\n  const visibleClass = modalContext.show ? \"block\" : \"hidden\";\r\n\r\n  const onPostTitleHandler = (event) => {\r\n    setPostTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostContentHandler = (event) => {\r\n    setPostContent(event.currentTarget.value);\r\n  };\r\n  const onSubIDHandler = (event) => {\r\n    setSubID(event.currentTarget.value);\r\n  };\r\n\r\n  function writePost(e) {\r\n    let body = {\r\n      post_title: post_title,\r\n      post_content: post_content,\r\n      sub_id: 1,\r\n    };\r\n\r\n    axios.post(\"/api/write\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div\r\n        className={\r\n          \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visibleClass\r\n        }\r\n        style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n      >\r\n        <ClickOutHandler onClickOut={() => {}}>\r\n          <div className=\" w-3/4 md:w-2/4 bg-reddit_dark p-5 self-center mx-auto rounded-md\">\r\n            <h1 className=\"text-2xl mb-5\">Create a post</h1>\r\n            <Input\r\n              value={post_title}\r\n              type=\"text\"\r\n              placeholder=\"title\"\r\n              onChange={onPostTitleHandler}\r\n            />\r\n\r\n            <Textarea\r\n              className={\"w-full mb-3\"}\r\n              placeholder=\"text(optional)\"\r\n              rows={10}\r\n              value={post_content}\r\n              onChange={onPostContentHandler}\r\n            />\r\n            <div className={\"text-right\"}>\r\n              <Button\r\n                onClick={() => modalContext.setShow(false)}\r\n                className={\"px-4 py-2 mr-3\"}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" onClick={(e) => writePost()}>\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </ClickOutHandler>\r\n      </div>\r\n    </div>\r\n    // <Box w=\"100%\" m=\"auto\" className=\" bg-reddit_gray\">\r\n    //   <Header />\r\n    //   <Box w={[\"100%\", \"90%\", \"80%\", \"70%\"]} m=\"auto\">\r\n    //     <form>\r\n    //       Create a post\r\n    //       <Stack spacing={3}>\r\n    //         <FormControl>\r\n    //           <RadioGroup>\r\n    //             <Stack direction=\"row\" spacing={3}>\r\n    //               <Radio value=\"text\">Post</Radio>\r\n    //               <Radio value=\"link\">Link</Radio>\r\n    //             </Stack>\r\n    //           </RadioGroup>\r\n    //         </FormControl>\r\n    //         <FormControl>\r\n    //           <Input\r\n    //             value={post_title}\r\n    //             type=\"text\"\r\n    //             placeholder=\"title\"\r\n    //             onChange={onPostTitleHandler}\r\n    //           />\r\n    //         </FormControl>\r\n    //         <FormControl>\r\n    //           <Textarea\r\n    //             placeholder=\"text(optional)\"\r\n    //             rows={10}\r\n    //             value={post_content}\r\n    //             onChange={onPostContentHandler}\r\n    //           />\r\n    //         </FormControl>\r\n    //         <Button type=\"submit\" onClick={(e) => writePost()}>\r\n    //           Submit\r\n    //         </Button>\r\n    //       </Stack>\r\n    //     </form>\r\n    //   </Box>\r\n    // </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}