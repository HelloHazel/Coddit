{"ast":null,"code":"// import { ChatBubbleLeftIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\n// import { React, useState, useEffect, useContext } from \"react\";\n// import Comment from \"./Comment\";\n// import TimeAgo from \"timeago-react\";\n// import Header from \"../views/UtilPage/Header\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import {\n//   asyncComment,\n//   commentSlice,\n//   currentSub,\n//   subSlice,\n//   getPost,\n// } from \"../../store/store\";\n// import Button from \"./Button\";\n// import {\n//   HandThumbDownIcon,\n//   HandThumbUpIcon,\n// } from \"@heroicons/react/24/outline\";\n// import Avatar from \"../../img/avatar.png\";\n// import axios from \"axios\";\n// import PostPageModalContext from \"./PostPageModalContext\";\n// import ClickOutHandler from \"react-clickout-handler\";\n\n// export default function PostPage() {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const { state } = useLocation();\n\n//   const modalContext = useContext(PostPageModalContext);\n\n//   const visibleClass = modalContext.showPost !== false ? \"block\" : \"hidden\";\n\n//   const sub_list = useSelector((state) => state.subSlice.list);\n\n//   const sub = useSelector((state) => state.currentSub.currentSub);\n\n//   const user = useSelector((state) => state.userSlice.userName);\n//   // 댓글 기능\n//   const [comment, setComment] = useState(\"\");\n//   const comment_list = useSelector((state) => state.commentSlice.list);\n//   const [edit_comment, setEditComment] = useState(\"\");\n\n//   const [post, setPost] = useState(\"\");\n//   const [edit_post, setEditPost] = useState(\"\");\n//   const [isValid, SetIsValid] = useState(false);\n\n//   function commentChange(e) {\n//     setComment(e.target.value);\n//   }\n\n//   function editCommentChange(e) {\n//     setEditComment(e.target.value);\n//   }\n\n//   function PostChange(e) {\n//     setPost(e.target.value);\n//   }\n\n//   function editPostChange(e) {\n//     setEditPost(e.target.value);\n//   }\n\n//   function deletePost() {\n//     let body = {\n//       post_id: modalContext.state.post_id,\n//     };\n\n//     axios.post(\"/api/delete\", body).then((res) => {\n//       if (res.data.result === \"ok\") {\n//         // window.location.replace(\"/\");\n//         dispatch(getPost(sub));\n//         modalContext.setShowPost(!modalContext.showPost);\n//       }\n//     });\n//   }\n\n//   function writeComment(e) {\n//     let body = {\n//       comment_content: comment,\n//       post_id: modalContext.state.post_id,\n//     };\n\n//     axios.post(\"/api/writecomment\", body).then((res) => {\n//       if (res.data.result === \"ok\") {\n//         dispatch(asyncComment(modalContext.state.post_id));\n//       }\n//     });\n//   }\n\n//   function editComment(comment, comment_id) {\n//     let body = {\n//       comment_content: comment,\n//       comment_id: comment_id,\n//       post_id: modalContext.state.post_id,\n//     };\n\n//     axios.post(\"/api/editcomment\", body).then((res) => {\n//       if (res.data.result === \"ok\") {\n//         dispatch(asyncComment(modalContext.state.post_id));\n//       }\n//     });\n//   }\n\n//   function deleteComment(comment_id) {\n//     let body = {\n//       comment_id: comment_id,\n//       post_id: modalContext.state.post_id,\n//     };\n\n//     console.log(\"CDE\");\n//     axios.post(\"/api/deletecomment\", body).then((res) => {\n//       if (res.data.result === \"ok\") {\n//         dispatch(asyncComment(modalContext.state.post_id));\n//       }\n//     });\n//   }\n\n//   function votePost(vote_kind, post_id, comment_id) {\n//     let body = {\n//       vote_kind: vote_kind,\n//       post_id: post_id,\n//       comment_id: comment_id,\n//     };\n\n//     axios.post(\"/api/vote\", body).then((res) => {\n//       if (res.data.result === \"ok\") {\n//         dispatch(asyncComment(modalContext.state.post_id));\n//       }\n//     });\n//   }\n\n//   // useEffect(() => {\n//   //   dispatch(asyncComment(state.post_id));\n//   // }, []);\n\n//   return (\n//     <div\n//       className={\n//         \"w-screen h-screen fixed top-0 left-0 z-20 flex-auto \" + visibleClass\n//       }\n//       style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\n//     >\n//       <nav className=\"bg-black text-white h-10 mx-20\">\n//         <button className=\"flex py-2 mx-10 float-right\">\n//           <XMarkIcon className=\"h-7 \" /> Close\n//         </button>\n//       </nav>\n//       {/* <ClickOutHandler onClickOut={() => modalContext.setShowPost(false)}> */}\n//       <div className=\"bg-reddit_gray h-screen mx-20 px-4 py-3\">\n//         <div className=\"  w-5/6 m-auto p-6 bg-white\">\n//           <div className=\"border border-gray-300 bg-white p-2 pb-0 my-3 rounded-md\">\n//             {/* <PostContent /> */}\n//             <div className=\" flex mb-1\">\n//               {sub_list.map((sub, j) => {\n//                 if (modalContext.state.sub_id === sub.sub_id) {\n//                   return (\n//                     <h5 className=\"font-bold\" key={j}>\n//                       {sub.sub_name}\n//                     </h5>\n//                   );\n//                 }\n//               })}\n//               <p className=\"text-reddit_text text-sm \">\n//                 • Posted by u/ {modalContext.state.user_name}\n//                 <TimeAgo datetime={modalContext.state.post_date} />\n//               </p>\n//             </div>\n//             <h2 className=\"text-xl mb-3\"> {modalContext.state.post_title}</h2>\n//             <div className=\"text-sm leading-6 text-gray-700 \">\n//               <p>{modalContext.state.post_content}</p>\n//             </div>\n//             <nav className=\"flex\">\n//               <div className=\"text-center float-left text-sm text-gray-400 my-3.5\tflex space-x-5 font-bold\">\n//                 <button className=\"flex\">\n//                   <ChatBubbleLeftIcon className=\"text-gray-400 w-5 h-5 mr-1\" />\n//                   Comments\n//                 </button>\n//                 {/* user login 시 해당 버튼 보이도록 함 */}\n//                 <button>Edit</button>\n//                 <button onClick={() => deletePost()}>Delete</button>\n//               </div>\n//             </nav>\n//           </div>\n//           <div>\n//             <div>\n//               {user && <div>Comment as {user}</div>}\n//               <form className=\"border border-gray-300 \">\n//                 <textarea\n//                   className=\"w-full \"\n//                   rows={5}\n//                   placeholder=\"   What are your thoughts?\"\n//                   onChange={commentChange}\n//                   // onKeyUp={(e) => {\n//                   //   e.target.value.length > 0\n//                   //     ? SetIsValid(true)\n//                   //     : SetIsValid(false);\n//                   // }}\n//                   value={comment}\n//                 ></textarea>\n//               </form>\n//               <div className=\"text-right\">\n//                 <Button\n//                   className=\"h-5 mt-2 bg-gray-500 text-gray-300\"\n//                   // disabled={isValid ? false : true}\n//                   onClick={(e) => {\n//                     setComment(\"\");\n//                     writeComment();\n//                   }}\n//                 >\n//                   Comment\n//                 </Button>\n//               </div>\n//             </div>\n//           </div>\n//           {comment_list.map((comment, i) => {\n//             function changeE() {\n//               dispatch(commentSlice.actions.changeEdit(comment, i));\n//             }\n\n//             return (\n//               <div className=\"py-3 space-y-2\">\n//                 <div className=\"flex space-x-2\">\n//                   {\" \"}\n//                   <div className=\" w-7 h-7 bg-gray-400 rounded-full\">\n//                     <img\n//                       src={Avatar}\n//                       alt=\"\"\n//                       style={{ filter: \"invert(100%)\" }}\n//                       className=\"block\"\n//                     />\n//                   </div>\n//                   <p key={i}>{comment.user_name}</p>\n//                   <TimeAgo\n//                     className=\"text-gray-400\"\n//                     datetime={comment.comment_date}\n//                   />\n//                 </div>\n//                 {comment.edit === false ? (\n//                   <p key={i}>{comment.comment_content}</p>\n//                 ) : (\n//                   <div className=\"border border-gray-300 \">\n//                     <textarea\n//                       className=\"w-full \"\n//                       rows={5}\n//                       placeholder=\"   What are your thoughts?\"\n//                       onChange={editCommentChange}\n//                       value={edit_comment}\n//                     ></textarea>\n//                     <div className=\"bg-gray-100 text-right\">\n//                       <Button\n//                         className=\"h-5 m-2  text-reddit_blue\"\n//                         onClick={() => editComment(false)}\n//                       >\n//                         Cancle\n//                       </Button>\n//                       <Button\n//                         className=\"h-5 m-2 bg-reddit_blue text-gray-300\"\n//                         // disabled={isValid ? false : true}\n//                         onClick={() =>\n//                           editComment(edit_comment, comment.comment_id)\n//                         }\n//                       >\n//                         Save Edits\n//                       </Button>\n//                     </div>\n//                   </div>\n//                 )}\n//                 <div className=\"flex space-x-2  text-gray-500\">\n//                   <HandThumbUpIcon\n//                     className=\"h-5 w-5 \"\n//                     onClick={() => votePost(1, null, comment.comment_id)}\n//                   />\n//                   {comment.vote_sum !== 0 && <p>{comment.vote_sum}</p>}\n//                   <HandThumbDownIcon\n//                     className=\"h-5 w-5\"\n//                     onClick={() => votePost(-1, null, comment.comment_id)}\n//                   />\n//                   <button\n//                     onClick={() => {\n//                       setEditComment(comment.comment_content);\n//                       changeE();\n//                     }}\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     onClick={() => {\n//                       deleteComment(comment.comment_id);\n//                     }}\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       </div>\n//       {/* </ClickOutHandler> */}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/projects/Reddit-Clone/client/src/components/Layout/PostPage.js"],"sourcesContent":["// import { ChatBubbleLeftIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\n// import { React, useState, useEffect, useContext } from \"react\";\r\n// import Comment from \"./Comment\";\r\n// import TimeAgo from \"timeago-react\";\r\n// import Header from \"../views/UtilPage/Header\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import {\r\n//   asyncComment,\r\n//   commentSlice,\r\n//   currentSub,\r\n//   subSlice,\r\n//   getPost,\r\n// } from \"../../store/store\";\r\n// import Button from \"./Button\";\r\n// import {\r\n//   HandThumbDownIcon,\r\n//   HandThumbUpIcon,\r\n// } from \"@heroicons/react/24/outline\";\r\n// import Avatar from \"../../img/avatar.png\";\r\n// import axios from \"axios\";\r\n// import PostPageModalContext from \"./PostPageModalContext\";\r\n// import ClickOutHandler from \"react-clickout-handler\";\r\n\r\n// export default function PostPage() {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n//   const { state } = useLocation();\r\n\r\n//   const modalContext = useContext(PostPageModalContext);\r\n\r\n//   const visibleClass = modalContext.showPost !== false ? \"block\" : \"hidden\";\r\n\r\n//   const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n//   const sub = useSelector((state) => state.currentSub.currentSub);\r\n\r\n//   const user = useSelector((state) => state.userSlice.userName);\r\n//   // 댓글 기능\r\n//   const [comment, setComment] = useState(\"\");\r\n//   const comment_list = useSelector((state) => state.commentSlice.list);\r\n//   const [edit_comment, setEditComment] = useState(\"\");\r\n\r\n//   const [post, setPost] = useState(\"\");\r\n//   const [edit_post, setEditPost] = useState(\"\");\r\n//   const [isValid, SetIsValid] = useState(false);\r\n\r\n//   function commentChange(e) {\r\n//     setComment(e.target.value);\r\n//   }\r\n\r\n//   function editCommentChange(e) {\r\n//     setEditComment(e.target.value);\r\n//   }\r\n\r\n//   function PostChange(e) {\r\n//     setPost(e.target.value);\r\n//   }\r\n\r\n//   function editPostChange(e) {\r\n//     setEditPost(e.target.value);\r\n//   }\r\n\r\n//   function deletePost() {\r\n//     let body = {\r\n//       post_id: modalContext.state.post_id,\r\n//     };\r\n\r\n//     axios.post(\"/api/delete\", body).then((res) => {\r\n//       if (res.data.result === \"ok\") {\r\n//         // window.location.replace(\"/\");\r\n//         dispatch(getPost(sub));\r\n//         modalContext.setShowPost(!modalContext.showPost);\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   function writeComment(e) {\r\n//     let body = {\r\n//       comment_content: comment,\r\n//       post_id: modalContext.state.post_id,\r\n//     };\r\n\r\n//     axios.post(\"/api/writecomment\", body).then((res) => {\r\n//       if (res.data.result === \"ok\") {\r\n//         dispatch(asyncComment(modalContext.state.post_id));\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   function editComment(comment, comment_id) {\r\n//     let body = {\r\n//       comment_content: comment,\r\n//       comment_id: comment_id,\r\n//       post_id: modalContext.state.post_id,\r\n//     };\r\n\r\n//     axios.post(\"/api/editcomment\", body).then((res) => {\r\n//       if (res.data.result === \"ok\") {\r\n//         dispatch(asyncComment(modalContext.state.post_id));\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   function deleteComment(comment_id) {\r\n//     let body = {\r\n//       comment_id: comment_id,\r\n//       post_id: modalContext.state.post_id,\r\n//     };\r\n\r\n//     console.log(\"CDE\");\r\n//     axios.post(\"/api/deletecomment\", body).then((res) => {\r\n//       if (res.data.result === \"ok\") {\r\n//         dispatch(asyncComment(modalContext.state.post_id));\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   function votePost(vote_kind, post_id, comment_id) {\r\n//     let body = {\r\n//       vote_kind: vote_kind,\r\n//       post_id: post_id,\r\n//       comment_id: comment_id,\r\n//     };\r\n\r\n//     axios.post(\"/api/vote\", body).then((res) => {\r\n//       if (res.data.result === \"ok\") {\r\n//         dispatch(asyncComment(modalContext.state.post_id));\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   // useEffect(() => {\r\n//   //   dispatch(asyncComment(state.post_id));\r\n//   // }, []);\r\n\r\n//   return (\r\n//     <div\r\n//       className={\r\n//         \"w-screen h-screen fixed top-0 left-0 z-20 flex-auto \" + visibleClass\r\n//       }\r\n//       style={{ backgroundColor: \"rgba(0,0,0,.8)\" }}\r\n//     >\r\n//       <nav className=\"bg-black text-white h-10 mx-20\">\r\n//         <button className=\"flex py-2 mx-10 float-right\">\r\n//           <XMarkIcon className=\"h-7 \" /> Close\r\n//         </button>\r\n//       </nav>\r\n//       {/* <ClickOutHandler onClickOut={() => modalContext.setShowPost(false)}> */}\r\n//       <div className=\"bg-reddit_gray h-screen mx-20 px-4 py-3\">\r\n//         <div className=\"  w-5/6 m-auto p-6 bg-white\">\r\n//           <div className=\"border border-gray-300 bg-white p-2 pb-0 my-3 rounded-md\">\r\n//             {/* <PostContent /> */}\r\n//             <div className=\" flex mb-1\">\r\n//               {sub_list.map((sub, j) => {\r\n//                 if (modalContext.state.sub_id === sub.sub_id) {\r\n//                   return (\r\n//                     <h5 className=\"font-bold\" key={j}>\r\n//                       {sub.sub_name}\r\n//                     </h5>\r\n//                   );\r\n//                 }\r\n//               })}\r\n//               <p className=\"text-reddit_text text-sm \">\r\n//                 • Posted by u/ {modalContext.state.user_name}\r\n//                 <TimeAgo datetime={modalContext.state.post_date} />\r\n//               </p>\r\n//             </div>\r\n//             <h2 className=\"text-xl mb-3\"> {modalContext.state.post_title}</h2>\r\n//             <div className=\"text-sm leading-6 text-gray-700 \">\r\n//               <p>{modalContext.state.post_content}</p>\r\n//             </div>\r\n//             <nav className=\"flex\">\r\n//               <div className=\"text-center float-left text-sm text-gray-400 my-3.5\tflex space-x-5 font-bold\">\r\n//                 <button className=\"flex\">\r\n//                   <ChatBubbleLeftIcon className=\"text-gray-400 w-5 h-5 mr-1\" />\r\n//                   Comments\r\n//                 </button>\r\n//                 {/* user login 시 해당 버튼 보이도록 함 */}\r\n//                 <button>Edit</button>\r\n//                 <button onClick={() => deletePost()}>Delete</button>\r\n//               </div>\r\n//             </nav>\r\n//           </div>\r\n//           <div>\r\n//             <div>\r\n//               {user && <div>Comment as {user}</div>}\r\n//               <form className=\"border border-gray-300 \">\r\n//                 <textarea\r\n//                   className=\"w-full \"\r\n//                   rows={5}\r\n//                   placeholder=\"   What are your thoughts?\"\r\n//                   onChange={commentChange}\r\n//                   // onKeyUp={(e) => {\r\n//                   //   e.target.value.length > 0\r\n//                   //     ? SetIsValid(true)\r\n//                   //     : SetIsValid(false);\r\n//                   // }}\r\n//                   value={comment}\r\n//                 ></textarea>\r\n//               </form>\r\n//               <div className=\"text-right\">\r\n//                 <Button\r\n//                   className=\"h-5 mt-2 bg-gray-500 text-gray-300\"\r\n//                   // disabled={isValid ? false : true}\r\n//                   onClick={(e) => {\r\n//                     setComment(\"\");\r\n//                     writeComment();\r\n//                   }}\r\n//                 >\r\n//                   Comment\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           {comment_list.map((comment, i) => {\r\n//             function changeE() {\r\n//               dispatch(commentSlice.actions.changeEdit(comment, i));\r\n//             }\r\n\r\n//             return (\r\n//               <div className=\"py-3 space-y-2\">\r\n//                 <div className=\"flex space-x-2\">\r\n//                   {\" \"}\r\n//                   <div className=\" w-7 h-7 bg-gray-400 rounded-full\">\r\n//                     <img\r\n//                       src={Avatar}\r\n//                       alt=\"\"\r\n//                       style={{ filter: \"invert(100%)\" }}\r\n//                       className=\"block\"\r\n//                     />\r\n//                   </div>\r\n//                   <p key={i}>{comment.user_name}</p>\r\n//                   <TimeAgo\r\n//                     className=\"text-gray-400\"\r\n//                     datetime={comment.comment_date}\r\n//                   />\r\n//                 </div>\r\n//                 {comment.edit === false ? (\r\n//                   <p key={i}>{comment.comment_content}</p>\r\n//                 ) : (\r\n//                   <div className=\"border border-gray-300 \">\r\n//                     <textarea\r\n//                       className=\"w-full \"\r\n//                       rows={5}\r\n//                       placeholder=\"   What are your thoughts?\"\r\n//                       onChange={editCommentChange}\r\n//                       value={edit_comment}\r\n//                     ></textarea>\r\n//                     <div className=\"bg-gray-100 text-right\">\r\n//                       <Button\r\n//                         className=\"h-5 m-2  text-reddit_blue\"\r\n//                         onClick={() => editComment(false)}\r\n//                       >\r\n//                         Cancle\r\n//                       </Button>\r\n//                       <Button\r\n//                         className=\"h-5 m-2 bg-reddit_blue text-gray-300\"\r\n//                         // disabled={isValid ? false : true}\r\n//                         onClick={() =>\r\n//                           editComment(edit_comment, comment.comment_id)\r\n//                         }\r\n//                       >\r\n//                         Save Edits\r\n//                       </Button>\r\n//                     </div>\r\n//                   </div>\r\n//                 )}\r\n//                 <div className=\"flex space-x-2  text-gray-500\">\r\n//                   <HandThumbUpIcon\r\n//                     className=\"h-5 w-5 \"\r\n//                     onClick={() => votePost(1, null, comment.comment_id)}\r\n//                   />\r\n//                   {comment.vote_sum !== 0 && <p>{comment.vote_sum}</p>}\r\n//                   <HandThumbDownIcon\r\n//                     className=\"h-5 w-5\"\r\n//                     onClick={() => votePost(-1, null, comment.comment_id)}\r\n//                   />\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       setEditComment(comment.comment_content);\r\n//                       changeE();\r\n//                     }}\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => {\r\n//                       deleteComment(comment.comment_id);\r\n//                     }}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n//       {/* </ClickOutHandler> */}\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}