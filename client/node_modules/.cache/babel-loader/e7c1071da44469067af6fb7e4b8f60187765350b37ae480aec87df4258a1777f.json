{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Portfolio\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal(props) {\n  _s();\n  const navigate = useNavigate();\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const visibleClass = props.show ? \"block\" : \"hidden\";\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    //패스워드 bcrypt 요청\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        //이메일 존재시 디자인 수정\n        alert(\"이미 이메일 존재\");\n      } else if (res.data.result === \"alreadyName\") {\n        //이름 중복시 디자인 수정\n        alert(\"이미 이름 존재\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/login\");\n      }\n      console.log(res.data.result);\n    });\n  }\n  function login(e) {\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        //로그인 실패 시 디자인 수정\n        alert(\"잘못된 정보 입력\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return (\n    /*#__PURE__*/\n    // <div\n    //   className={\n    //     \"w-screen h-screen fixed top-0 left-0 z-20 flex\" + visibleClass\n    //   }\n    //   style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\n    // >\n    //   <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\n    //     {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\n    //     {modalType === \"register\" && (\n    //       <h1 className=\"text-2xl mb-5\">Register</h1>\n    //     )}\n    //     <p className=\"text-reddit_text text-sm mb-3\">\n    //       By continuing, you agree are setting up a Reddit account and agree to\n    //       our\n    //       <a\n    //         href=\"https://www.redditinc.com/policies/user-agreement\"\n    //         className=\"text-reddit_blue mx-1\"\n    //       >\n    //         User Agreement\n    //       </a>\n    //       and\n    //       <a\n    //         href=\"https://www.reddit.com/policies/privacy-policy\"\n    //         className=\"text-reddit_blue mx-1\"\n    //       >\n    //         Privacy Policy\n    //       </a>\n    //       .\n    //     </p>\n    //     {modalType === \"register\" && (\n    //       <Input\n    //         type=\"email\"\n    //         placeholder=\"E-mail\"\n    //         className=\"mb-2 w-full text-sm\"\n    //         value={email}\n    //         onChange={onEmailHandler}\n    //       />\n    //     )}\n    //     <Input\n    //       type=\"text\"\n    //       placeholder=\"username\"\n    //       className=\"mb-2 w-full text-sm\"\n    //       value={username}\n    //       onChange={onUsernameHandler}\n    //     />\n    //     <Input\n    //       type=\"password\"\n    //       placeholder=\"password\"\n    //       className=\"mb-2 w-full text-sm\"\n    //       value={password}\n    //       onChange={onPasswordHandler}\n    //     />{\" \"}\n    //     {modalType === \"register\" && (\n    //       <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\n    //         Sign Up\n    //       </Button>\n    //     )}{\" \"}\n    //     {modalType === \"login\" && (\n    //       <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\n    //         Log In\n    //       </Button>\n    //     )}\n    //     {modalType === \"login\" && (\n    //       <div className=\"text-sm\">\n    //         New to Reddit?{\" \"}\n    //         <button\n    //           className=\"text-reddit_blue\"\n    //           onClick={() => setModalType(\"register\")}\n    //         >\n    //           SIGN UP\n    //         </button>\n    //       </div>\n    //     )}\n    //     {modalType === \"register\" && (\n    //       <div className=\"text-sm\">\n    //         Already have an account?{\" \"}\n    //         <button\n    //           className=\"text-reddit_blue\"\n    //           onClick={() => setModalType(\"login\")}\n    //         >\n    //           Log In\n    //         </button>\n    //       </div>\n    //     )}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(AuthModal, \"MQ/IZC5CrDOykht7WfN9gWQBnuk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","Button","Input","axios","useNavigate","AuthModal","props","navigate","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","visibleClass","show","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","e","console","log","body","name","post","then","res","data","result","alert","login"],"sources":["C:/projects/Portfolio/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function AuthModal(props) {\r\n  const navigate = useNavigate();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const visibleClass = props.show ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\");\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    // <div\r\n    //   className={\r\n    //     \"w-screen h-screen fixed top-0 left-0 z-20 flex\" + visibleClass\r\n    //   }\r\n    //   style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    // >\r\n    //   <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\r\n    //     {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n    //     {modalType === \"register\" && (\r\n    //       <h1 className=\"text-2xl mb-5\">Register</h1>\r\n    //     )}\r\n    //     <p className=\"text-reddit_text text-sm mb-3\">\r\n    //       By continuing, you agree are setting up a Reddit account and agree to\r\n    //       our\r\n    //       <a\r\n    //         href=\"https://www.redditinc.com/policies/user-agreement\"\r\n    //         className=\"text-reddit_blue mx-1\"\r\n    //       >\r\n    //         User Agreement\r\n    //       </a>\r\n    //       and\r\n    //       <a\r\n    //         href=\"https://www.reddit.com/policies/privacy-policy\"\r\n    //         className=\"text-reddit_blue mx-1\"\r\n    //       >\r\n    //         Privacy Policy\r\n    //       </a>\r\n    //       .\r\n    //     </p>\r\n    //     {modalType === \"register\" && (\r\n    //       <Input\r\n    //         type=\"email\"\r\n    //         placeholder=\"E-mail\"\r\n    //         className=\"mb-2 w-full text-sm\"\r\n    //         value={email}\r\n    //         onChange={onEmailHandler}\r\n    //       />\r\n    //     )}\r\n    //     <Input\r\n    //       type=\"text\"\r\n    //       placeholder=\"username\"\r\n    //       className=\"mb-2 w-full text-sm\"\r\n    //       value={username}\r\n    //       onChange={onUsernameHandler}\r\n    //     />\r\n    //     <Input\r\n    //       type=\"password\"\r\n    //       placeholder=\"password\"\r\n    //       className=\"mb-2 w-full text-sm\"\r\n    //       value={password}\r\n    //       onChange={onPasswordHandler}\r\n    //     />{\" \"}\r\n    //     {modalType === \"register\" && (\r\n    //       <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n    //         Sign Up\r\n    //       </Button>\r\n    //     )}{\" \"}\r\n    //     {modalType === \"login\" && (\r\n    //       <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n    //         Log In\r\n    //       </Button>\r\n    //     )}\r\n    //     {modalType === \"login\" && (\r\n    //       <div className=\"text-sm\">\r\n    //         New to Reddit?{\" \"}\r\n    //         <button\r\n    //           className=\"text-reddit_blue\"\r\n    //           onClick={() => setModalType(\"register\")}\r\n    //         >\r\n    //           SIGN UP\r\n    //         </button>\r\n    //       </div>\r\n    //     )}\r\n    //     {modalType === \"register\" && (\r\n    //       <div className=\"text-sm\">\r\n    //         Already have an account?{\" \"}\r\n    //         <button\r\n    //           className=\"text-reddit_blue\"\r\n    //           onClick={() => setModalType(\"login\")}\r\n    //         >\r\n    //           Log In\r\n    //         </button>\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n    // </div>\r\n    <div></div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}