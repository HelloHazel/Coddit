{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from \"react-clickout-handler\";\nimport UserContext from \"../../UserContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSlice, asyncMyVoteComment, asyncMyVotePost } from \"../../../store/store\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const modalContext = useContext(AuthModalContext);\n  const {\n    show,\n    setShow,\n    setCook,\n    cookie\n  } = modalContext;\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const refOne = useRef(null);\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => document.removeEventListener(\"click\", handleClickOutside, true);\n  }, []);\n  const handleClickOutside = e => {\n    if (refOne.current && !refOne.current.contains(e.target)) {\n      setShow(false);\n    }\n  };\n  useEffect(() => {\n    if (cookie.userName) {\n      const logincheck = async () => {\n        const body = {\n          token: cookie.userName\n        };\n        const res = await axios.post(\"api/logincheck\", body);\n        if (res.data.result === \"ok\") {\n          dispatch(userSlice.actions.setUser(cookie.userName));\n          setCook(\"userName\", cookie.userName);\n          dispatch(asyncMyVotePost(cookie.userName));\n          dispatch(asyncMyVoteComment(cookie.userName));\n        }\n      };\n      logincheck();\n    }\n  }, [cookie.userName]);\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    const body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        alert(\"이미 존재하는 이메일입니다\");\n      } else if (res.data.result === \"alreadyName\") {\n        alert(\"이미 존재하는 이름입니다\");\n      } else if (res.data.result === \"ok\") {\n        setShow(false);\n      }\n    });\n  }\n  function login(e) {\n    const body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        alert(\"잘못된 정보입니다\");\n      } else if (res.data.result === \"ok\") {\n        setShow(false);\n        dispatch(userSlice.actions.setUser(username));\n        setCook(\"userName\", username);\n        dispatch(asyncMyVotePost(username));\n        dispatch(asyncMyVoteComment(username));\n        navigate(\"/\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-screen h-screen fixed top-0 left-0 z-20  fixed inset-0 flex items-center justify-center  ${show !== false ? \"block\" : \"hidden\"}`,\n    style: {\n      backgroundColor: \"rgba(0,0,0,.6)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-gray-700 sm:w-3/4 md:w-2/3 lg:w-1/2 xl:w-1/3 bg-white p-5 mx-auto my-10 rounded-md\",\n      ref: refOne,\n      children: [modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-5\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 35\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-reddit_text text-sm mb-3\",\n        children: [\"By continuing, you agree are setting up a Reddit account and agree to our\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.redditinc.com/policies/user-agreement\",\n          className: \"text-reddit_blue mx-1\",\n          children: \"User Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \"and\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.reddit.com/policies/privacy-policy\",\n          className: \"text-reddit_blue mx-1\",\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        className: \"mb-2 w-full text-sm\",\n        value: email,\n        onChange: onEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"username\",\n        className: \"mb-2 w-full text-sm\",\n        value: username,\n        onChange: onUsernameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"password\",\n        className: \"mb-2 w-full text-sm\",\n        value: password,\n        onChange: onPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), \" \", modalType === \"register\" && /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        className: \"w-full mb-3\",\n        onClick: e => register(),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), \" \", modalType === \"login\" && /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        className: \"w-full mb-3\",\n        onClick: e => login(),\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), modalType === \"login\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"New to Reddit?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-reddit_blue\",\n          onClick: () => modalContext.setShow(\"register\"),\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), modalType === \"register\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-reddit_blue\",\n          onClick: () => modalContext.setShow(\"login\"),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthModal, \"BXn+Zw9u4p/+Xvzs8/EgiwC0Ba0=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useContext","useRef","useEffect","Button","Input","axios","useNavigate","AuthModalContext","ClickOutHandler","UserContext","useDispatch","useSelector","userSlice","asyncMyVoteComment","asyncMyVotePost","useCookies","AuthModal","navigate","dispatch","modalContext","show","setShow","setCook","cookie","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","refOne","document","addEventListener","handleClickOutside","removeEventListener","e","current","contains","target","userName","logincheck","body","token","res","post","data","result","actions","setUser","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","name","then","alert","login","backgroundColor"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\nimport UserContext from \"../../UserContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  userSlice,\r\n  asyncMyVoteComment,\r\n  asyncMyVotePost,\r\n} from \"../../../store/store\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const modalContext = useContext(AuthModalContext);\r\n  const { show, setShow, setCook, cookie } = modalContext;\r\n\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const refOne = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n    return () =>\r\n      document.removeEventListener(\"click\", handleClickOutside, true);\r\n  }, []);\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (refOne.current && !refOne.current.contains(e.target)) {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cookie.userName) {\r\n      const logincheck = async () => {\r\n        const body = { token: cookie.userName };\r\n        const res = await axios.post(\"api/logincheck\", body);\r\n        if (res.data.result === \"ok\") {\r\n          dispatch(userSlice.actions.setUser(cookie.userName));\r\n          setCook(\"userName\", cookie.userName);\r\n          dispatch(asyncMyVotePost(cookie.userName));\r\n          dispatch(asyncMyVoteComment(cookie.userName));\r\n        }\r\n      };\r\n      logincheck();\r\n    }\r\n  }, [cookie.userName]);\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  function register(e) {\r\n    const body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        alert(\"이미 존재하는 이메일입니다\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        alert(\"이미 존재하는 이름입니다\");\r\n      } else if (res.data.result === \"ok\") {\r\n        setShow(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    const body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        alert(\"잘못된 정보입니다\");\r\n      } else if (res.data.result === \"ok\") {\r\n        setShow(false);\r\n        dispatch(userSlice.actions.setUser(username));\r\n        setCook(\"userName\", username);\r\n        dispatch(asyncMyVotePost(username));\r\n        dispatch(asyncMyVoteComment(username));\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`w-screen h-screen fixed top-0 left-0 z-20  fixed inset-0 flex items-center justify-center  ${\r\n        show !== false ? \"block\" : \"hidden\"\r\n      }`}\r\n      style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    >\r\n      <div\r\n        className=\"border-gray-700 sm:w-3/4 md:w-2/3 lg:w-1/2 xl:w-1/3 bg-white p-5 mx-auto my-10 rounded-md\"\r\n        ref={refOne}\r\n      >\r\n        {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n        {modalType === \"register\" && <h1 className=\"text-2xl mb-5\">Sign Up</h1>}\r\n        <p className=\"text-reddit_text text-sm mb-3\">\r\n          By continuing, you agree are setting up a Reddit account and agree to\r\n          our\r\n          <a\r\n            href=\"https://www.redditinc.com/policies/user-agreement\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            User Agreement\r\n          </a>\r\n          and\r\n          <a\r\n            href=\"https://www.reddit.com/policies/privacy-policy\"\r\n            className=\"text-reddit_blue mx-1\"\r\n          >\r\n            Privacy Policy\r\n          </a>\r\n          .\r\n        </p>\r\n        {modalType === \"register\" && (\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"E-mail\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={email}\r\n            onChange={onEmailHandler}\r\n          />\r\n        )}\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={username}\r\n          onChange={onUsernameHandler}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          className=\"mb-2 w-full text-sm\"\r\n          value={password}\r\n          onChange={onPasswordHandler}\r\n        />{\" \"}\r\n        {modalType === \"register\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n            Sign Up\r\n          </Button>\r\n        )}{\" \"}\r\n        {modalType === \"login\" && (\r\n          <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n            Log In\r\n          </Button>\r\n        )}\r\n        {modalType === \"login\" && (\r\n          <div className=\"text-sm\">\r\n            New to Reddit?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"register\")}\r\n            >\r\n              SIGN UP\r\n            </button>\r\n          </div>\r\n        )}\r\n        {modalType === \"register\" && (\r\n          <div className=\"text-sm\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              className=\"text-reddit_blue\"\r\n              onClick={() => modalContext.setShow(\"login\")}\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}