{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Portfolio\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Button from \"../../Layout/Button\";\nimport Input from \"../LoginPage/Input\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from \"react-clickout-handler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthModal() {\n  _s();\n  const navigate = useNavigate();\n  const [modalType, setModalType] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const modalContext = useContext(AuthModalContext);\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n  const visiableClass = modalContext.show ? \"block\" : \"hidden\";\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n  const onUsernameHandler = event => {\n    setUsername(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  function register(e) {\n    //패스워드 bcrypt 요청\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      email: email,\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/register\", body).then(res => {\n      if (res.data.result === \"alreadyEmail\") {\n        //이메일 존재시 디자인 수정\n        alert(\"이미 이메일 존재\");\n      } else if (res.data.result === \"alreadyName\") {\n        //이름 중복시 디자인 수정\n        alert(\"이미 이름 존재\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/login\");\n      }\n      console.log(res.data.result);\n    });\n  }\n  function login(e) {\n    // e.preventDefault();\n    console.log(\"Name\", username);\n    console.log(\"Password\", password);\n    let body = {\n      name: username,\n      password: password\n    };\n    axios.post(\"/api/login\", body).then(res => {\n      if (res.data.result === \"loginError\") {\n        //로그인 실패 시 디자인 수정\n        alert(\"잘못된 정보 입력\");\n      } else if (res.data.result === \"ok\") {\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visiableClass,\n    style: {\n      backgroundColor: \"rgba(0,0,0,.6)\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthModal, \"hd2ADcOMSgRGXTbEWM2EaDiTl00=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useContext","Button","Input","axios","useNavigate","AuthModalContext","ClickOutHandler","AuthModal","navigate","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","show","visiableClass","onEmailHandler","event","currentTarget","value","onUsernameHandler","onPasswordHandler","register","e","console","log","body","name","post","then","res","data","result","alert","login","backgroundColor"],"sources":["C:/projects/Portfolio/client/src/components/views/UtilPage/AuthModal.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../Layout/Button\";\r\nimport Input from \"../LoginPage/Input\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from \"react-clickout-handler\";\r\n\r\nexport default function AuthModal() {\r\n  const navigate = useNavigate();\r\n  const [modalType, setModalType] = useState(\"login\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n\r\n  const visiableClass = modalContext.show ? \"block\" : \"hidden\";\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onUsernameHandler = (event) => {\r\n    setUsername(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  function register(e) {\r\n    //패스워드 bcrypt 요청\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      email: email,\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/register\", body).then((res) => {\r\n      if (res.data.result === \"alreadyEmail\") {\r\n        //이메일 존재시 디자인 수정\r\n        alert(\"이미 이메일 존재\");\r\n      } else if (res.data.result === \"alreadyName\") {\r\n        //이름 중복시 디자인 수정\r\n        alert(\"이미 이름 존재\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/login\");\r\n      }\r\n      console.log(res.data.result);\r\n    });\r\n  }\r\n\r\n  function login(e) {\r\n    // e.preventDefault();\r\n    console.log(\"Name\", username);\r\n    console.log(\"Password\", password);\r\n\r\n    let body = {\r\n      name: username,\r\n      password: password,\r\n    };\r\n    axios.post(\"/api/login\", body).then((res) => {\r\n      if (res.data.result === \"loginError\") {\r\n        //로그인 실패 시 디자인 수정\r\n        alert(\"잘못된 정보 입력\");\r\n      } else if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-screen h-screen fixed top-0 left-0 z-20 flex \" + visiableClass\r\n      }\r\n      style={{ backgroundColor: \"rgba(0,0,0,.6)\" }}\r\n    >\r\n      {/* <ClickOutHandler onClickOut={() => modalContext.setShow(false)}>\r\n        <div className=\"border-gray-700 w-1/4 sm:w-1/3 md:w-1/3 bg-white p-5 self-center mx-auto rounded-md\">\r\n          {modalType === \"login\" && <h1 className=\"text-2xl mb-5\">Log In</h1>}\r\n          {modalType === \"register\" && (\r\n            <h1 className=\"text-2xl mb-5\">Register</h1>\r\n          )}\r\n          <p className=\"text-reddit_text text-sm mb-3\">\r\n            By continuing, you agree are setting up a Reddit account and agree\r\n            to our\r\n            <a\r\n              href=\"https://www.redditinc.com/policies/user-agreement\"\r\n              className=\"text-reddit_blue mx-1\"\r\n            >\r\n              User Agreement\r\n            </a>\r\n            and\r\n            <a\r\n              href=\"https://www.reddit.com/policies/privacy-policy\"\r\n              className=\"text-reddit_blue mx-1\"\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n            .\r\n          </p>\r\n          {modalType === \"register\" && (\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"E-mail\"\r\n              className=\"mb-2 w-full text-sm\"\r\n              value={email}\r\n              onChange={onEmailHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={username}\r\n            onChange={onUsernameHandler}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"mb-2 w-full text-sm\"\r\n            value={password}\r\n            onChange={onPasswordHandler}\r\n          />{\" \"}\r\n          {modalType === \"register\" && (\r\n            <Button outline className=\"w-full mb-3\" onClick={(e) => register()}>\r\n              Sign Up\r\n            </Button>\r\n          )}{\" \"}\r\n          {modalType === \"login\" && (\r\n            <Button outline className=\"w-full mb-3\" onClick={(e) => login()}>\r\n              Log In\r\n            </Button>\r\n          )}\r\n          {modalType === \"login\" && (\r\n            <div className=\"text-sm\">\r\n              New to Reddit?{\" \"}\r\n              <button\r\n                className=\"text-reddit_blue\"\r\n                onClick={() => modalContext.setShow(\"register\")}\r\n              >\r\n                SIGN UP\r\n              </button>\r\n            </div>\r\n          )}\r\n          {modalType === \"register\" && (\r\n            <div className=\"text-sm\">\r\n              Already have an account?{\" \"}\r\n              <button\r\n                className=\"text-reddit_blue\"\r\n                onClick={() => modalContext.setShow(\"login\")}\r\n              >\r\n                Log In\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ClickOutHandler> */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}