{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Reddit-Clone\\\\client\\\\src\\\\components\\\\views\\\\UtilPage\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Input from \"./Input\";\nimport Textarea from \"./Textarea\";\nimport Button from \"../../Layout/Button\";\nimport { asyncSub, getPost } from \"../../../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [post_title, setPostTitle] = useState(\"\");\n  const [post_content, setPostContent] = useState(\"\");\n  const [sub_id, setSubID] = useState(-1);\n  const [value, setValue] = useState(\"default\");\n  const sub_list = useSelector(state => state.subSlice.list);\n  useEffect(() => {\n    dispatch(asyncSub());\n  }, []);\n  const changePost = subid => {\n    dispatch(getPost(subid));\n  };\n  const onPostTitleHandler = event => {\n    setPostTitle(event.currentTarget.value);\n  };\n  const onPostContentHandler = event => {\n    setPostContent(event.currentTarget.value);\n  };\n  const onSubIDHandler = event => {\n    setSubID(event.currentTarget.value);\n  };\n  function writePost(e) {\n    let body = {\n      post_title: post_title,\n      post_content: post_content,\n      sub_id: sub_id\n    };\n    axios.post(\"/api/write\", body).then(res => {\n      if (res.data.result === \"ok\") {\n        navigate(\"/\");\n      }\n      console.log(res.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen h-screen fixed left-0 bg-reddit_gray \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" p-5 self-center mx-auto rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" p-5 self-center mx-auto rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl mb-4\",\n            children: \"Create a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: value,\n            className: \"h-8 w-2/5 border border-gray-300 bg-white rounded-md\",\n            onChange: onSubIDHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"default\",\n              disabled: true,\n              hidden: true,\n              children: \"choose a community!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), sub_list.map((sub, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i,\n                children: sub.sub_name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white my-2 px-8 py-4\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              className: \"w-full  border border-gray\",\n              value: post_title,\n              type: \"text\",\n              placeholder: \"title\",\n              onChange: onPostTitleHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              className: \"w-full mb-3\",\n              placeholder: \"text(optional)\",\n              rows: 10,\n              value: post_content,\n              onChange: onPostContentHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-right\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"px-4 py-2 mr-3\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                onClick: e => writePost(),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)\n  // <Box w=\"100%\" m=\"auto\" className=\" bg-reddit_gray\">\n  //   <Header />\n  //   <Box w={[\"100%\", \"90%\", \"80%\", \"70%\"]} m=\"auto\">\n  //     <form>\n  //       Create a post\n  //       <Stack spacing={3}>\n  //         <FormControl>\n  //           <RadioGroup>\n  //             <Stack direction=\"row\" spacing={3}>\n  //               <Radio value=\"text\">Post</Radio>\n  //               <Radio value=\"link\">Link</Radio>\n  //             </Stack>\n  //           </RadioGroup>\n  //         </FormControl>\n  //         <FormControl>\n  //           <Input\n  //             value={post_title}\n  //             type=\"text\"\n  //             placeholder=\"title\"\n  //             onChange={onPostTitleHandler}\n  //           />\n  //         </FormControl>\n  //         <FormControl>\n  //           <Textarea\n  //             placeholder=\"text(optional)\"\n  //             rows={10}\n  //             value={post_content}\n  //             onChange={onPostContentHandler}\n  //           />\n  //         </FormControl>\n  //         <Button type=\"submit\" onClick={(e) => writePost()}>\n  //           Submit\n  //         </Button>\n  //       </Stack>\n  //     </form>\n  //   </Box>\n  // </Box>\n  ;\n}\n_s(CreatePost, \"2pVPoZXTNjpIB+KeqeNS0KFMVjQ=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["Header","useDispatch","useSelector","axios","useState","useEffect","useNavigate","Input","Textarea","Button","asyncSub","getPost","CreatePost","dispatch","navigate","post_title","setPostTitle","post_content","setPostContent","sub_id","setSubID","value","setValue","sub_list","state","subSlice","list","changePost","subid","onPostTitleHandler","event","currentTarget","onPostContentHandler","onSubIDHandler","writePost","e","body","post","then","res","data","result","console","log","map","sub","i","sub_name"],"sources":["C:/projects/Reddit-Clone/client/src/components/views/UtilPage/CreatePost.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport Button from \"../../Layout/Button\";\r\nimport { asyncSub, getPost } from \"../../../store/store\";\r\n\r\nexport default function CreatePost() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [post_title, setPostTitle] = useState(\"\");\r\n  const [post_content, setPostContent] = useState(\"\");\r\n  const [sub_id, setSubID] = useState(-1);\r\n  const [value, setValue] = useState(\"default\");\r\n\r\n  const sub_list = useSelector((state) => state.subSlice.list);\r\n\r\n  useEffect(() => {\r\n    dispatch(asyncSub());\r\n  }, []);\r\n\r\n  const changePost = (subid) => {\r\n    dispatch(getPost(subid));\r\n  };\r\n\r\n  const onPostTitleHandler = (event) => {\r\n    setPostTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onPostContentHandler = (event) => {\r\n    setPostContent(event.currentTarget.value);\r\n  };\r\n  const onSubIDHandler = (event) => {\r\n    setSubID(event.currentTarget.value);\r\n  };\r\n\r\n  function writePost(e) {\r\n    let body = {\r\n      post_title: post_title,\r\n      post_content: post_content,\r\n      sub_id: sub_id,\r\n    };\r\n\r\n    axios.post(\"/api/write\", body).then((res) => {\r\n      if (res.data.result === \"ok\") {\r\n        navigate(\"/\");\r\n      }\r\n\r\n      console.log(res.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"w-screen h-screen fixed left-0 bg-reddit_gray \">\r\n        <div className=\" p-5 self-center mx-auto rounded-md\">\r\n          <div className=\" p-5 self-center mx-auto rounded-md\">\r\n            <h1 className=\"text-xl mb-4\">Create a post</h1>\r\n\r\n            <select\r\n              defaultValue={value}\r\n              className=\"h-8 w-2/5 border border-gray-300 bg-white rounded-md\"\r\n              onChange={onSubIDHandler}\r\n            >\r\n              <option value=\"default\" disabled hidden>\r\n                choose a community!\r\n              </option>\r\n              {sub_list.map((sub, i) => {\r\n                return (\r\n                  <option key={i} value={i}>\r\n                    {sub.sub_name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n\r\n            <div className=\"bg-white my-2 px-8 py-4\">\r\n              <Input\r\n                className=\"w-full  border border-gray\"\r\n                value={post_title}\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                onChange={onPostTitleHandler}\r\n              />\r\n\r\n              <Textarea\r\n                className={\"w-full mb-3\"}\r\n                placeholder=\"text(optional)\"\r\n                rows={10}\r\n                value={post_content}\r\n                onChange={onPostContentHandler}\r\n              />\r\n              <div className={\"text-right\"}>\r\n                <Button className={\"px-4 py-2 mr-3\"}>Cancel</Button>\r\n                <Button type=\"submit\" onClick={(e) => writePost()}>\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <Box w=\"100%\" m=\"auto\" className=\" bg-reddit_gray\">\r\n    //   <Header />\r\n    //   <Box w={[\"100%\", \"90%\", \"80%\", \"70%\"]} m=\"auto\">\r\n    //     <form>\r\n    //       Create a post\r\n    //       <Stack spacing={3}>\r\n    //         <FormControl>\r\n    //           <RadioGroup>\r\n    //             <Stack direction=\"row\" spacing={3}>\r\n    //               <Radio value=\"text\">Post</Radio>\r\n    //               <Radio value=\"link\">Link</Radio>\r\n    //             </Stack>\r\n    //           </RadioGroup>\r\n    //         </FormControl>\r\n    //         <FormControl>\r\n    //           <Input\r\n    //             value={post_title}\r\n    //             type=\"text\"\r\n    //             placeholder=\"title\"\r\n    //             onChange={onPostTitleHandler}\r\n    //           />\r\n    //         </FormControl>\r\n    //         <FormControl>\r\n    //           <Textarea\r\n    //             placeholder=\"text(optional)\"\r\n    //             rows={10}\r\n    //             value={post_content}\r\n    //             onChange={onPostContentHandler}\r\n    //           />\r\n    //         </FormControl>\r\n    //         <Button type=\"submit\" onClick={(e) => writePost()}>\r\n    //           Submit\r\n    //         </Button>\r\n    //       </Stack>\r\n    //     </form>\r\n    //   </Box>\r\n    // </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}