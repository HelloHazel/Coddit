{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst User = createSlice({\n  name: 'userReducer',\n  initialState: [],\n  // 기본 상태값\n  reducers: {\n    add: (state, action) => {\n      const id = Date.now();\n      state.push({\n        text: action.payload,\n        id: id\n      });\n    },\n    remove: (state, action) => {\n      return state.filter(toDo => toDo.id !== action.payload);\n    }\n  }\n});\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\n  const resp = await axios.get(\"/api/topic\");\n  return resp.data;\n});\nconst topicSlice = createSlice({\n  name: \"topicSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(asyncTopic.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(\"fulfilled\");\n    });\n\n    builder.addCase(asyncTopic.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\n  const resp = await axios.get(\"/api/sub\");\n  return resp.data;\n});\nconst subSlice = createSlice({\n  name: \"subSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(asyncSub.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(\"fulfilled\");\n    });\n\n    builder.addCase(asyncSub.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async subid => {\n  const resp = await axios.get(\"/api/post\", {\n    params: {\n      subId: subid\n    }\n  });\n  return resp.data;\n});\nconst postSlice = createSlice({\n  name: \"postSlice\",\n  initialState: {\n    list: []\n  },\n  extraReducers: builder => {\n    builder.addCase(getPost.pending, (state, action) => {\n      // console.log(\"pending\");\n    });\n    builder.addCase(getPost.fulfilled, (state, action) => {\n      state.list = action.payload;\n      // console.log(action.payload);\n    });\n\n    builder.addCase(getPost.rejected, (state, action) => {\n      // console.log(\"rejected\");\n    });\n  }\n});\nexport default configureStore({\n  reducer: {\n    topicSlice: topicSlice.reducer,\n    subSlice: subSlice.reducer,\n    postSlice: postSlice.reducer\n  }\n});\nexport { asyncTopic, asyncSub, getPost, postSlice };","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","axios","User","name","initialState","reducers","add","state","action","id","Date","now","push","text","payload","remove","filter","toDo","asyncTopic","resp","get","data","topicSlice","list","extraReducers","builder","addCase","pending","fulfilled","rejected","asyncSub","subSlice","getPost","subid","params","subId","postSlice","reducer"],"sources":["C:/projects/Reddit-Clone/client/src/store/store.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst User = createSlice({\r\n  name:'userReducer',\r\n  initialState: [], // 기본 상태값\r\n  reducers: { \r\n      add: (state, action) => {\r\n                const id = Date.now();\r\n                  state.push({text:action.payload, id:id});\r\n                 },\r\n     remove: (state, action) =>{\r\n      return(state.filter((toDo) => toDo.id !== action.payload) )\r\n     }}\r\n })\r\n\r\nconst asyncTopic = createAsyncThunk(\"communitySlice/asyncTopic\", async () => {\r\n  const resp = await axios.get(\"/api/topic\");\r\n  return resp.data;\r\n});\r\n\r\nconst topicSlice = createSlice({\r\n  name: \"topicSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncTopic.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncTopic.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncTopic.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst asyncSub = createAsyncThunk(\"subSlice/asyncSub\", async () => {\r\n  const resp = await axios.get(\"/api/sub\");\r\n  return resp.data;\r\n});\r\n\r\nconst subSlice = createSlice({\r\n  name: \"subSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(asyncSub.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(asyncSub.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(\"fulfilled\");\r\n    });\r\n    builder.addCase(asyncSub.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nconst getPost = createAsyncThunk(\"postSlice/getPost\", async (subid) => {\r\n  const resp = await axios.get(\"/api/post\", { params: { subId: subid } });\r\n  return resp.data;\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState: {\r\n    list: [],\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPost.pending, (state, action) => {\r\n      // console.log(\"pending\");\r\n    });\r\n    builder.addCase(getPost.fulfilled, (state, action) => {\r\n      state.list = action.payload;\r\n      // console.log(action.payload);\r\n    });\r\n    builder.addCase(getPost.rejected, (state, action) => {\r\n      // console.log(\"rejected\");\r\n    });\r\n  },\r\n});\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    topicSlice: topicSlice.reducer,\r\n    subSlice: subSlice.reducer,\r\n    postSlice: postSlice.reducer,\r\n  },\r\n});\r\n\r\nexport { asyncTopic, asyncSub, getPost, postSlice };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}